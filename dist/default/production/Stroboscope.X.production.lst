

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Jul 28 22:02:50 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og9 
     1                           	processor	16F616
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Generated 09/02/2023 GMT
    41                           ; 
    42                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F616 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0007                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000E                     	;# 
    85  000E                     	;# 
    86  000F                     	;# 
    87  0010                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001C                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0087                     	;# 
   105  008C                     	;# 
   106  008E                     	;# 
   107  0090                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0095                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0096                     	;# 
   114  0099                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119                           
   120                           	psect	idataBANK0
   121  0000'                    __pidataBANK0:
   122                           
   123                           ;initializer for _resolution_i
   124  0000' 3403               	retlw	3
   125  0005                     _PORTAbits	set	5
   126  0007                     _PORTCbits	set	7
   127  0001                     _TMR0	set	1
   128  000B                     _INTCONbits	set	11
   129  0081                     _OPTION_REGbits	set	129
   130  0096                     _IOCAbits	set	150
   131  0091                     _ANSEL	set	145
   132  0087                     _TRISCbits	set	135
   133                           
   134                           	psect	cinit
   135  0000'                    start_initialization:	
   136                           ; #config settings
   137                           
   138  0000'                    __initialization:
   139                           
   140                           ; Initialize objects allocated to BANK0
   141  0000' 2000'              	fcall	__pidataBANK0	;fetch initializer
   142  0001' 0080'              	movwf	__pdataBANK0& (0+127)
   143                           
   144                           ; Clear objects allocated to BANK1
   145  0002' 1383               	bcf	3,7	;select IRP bank0
   146  0003' 3000'              	movlw	low __pbssBANK1
   147  0004' 0084               	movwf	4
   148  0005' 3000'              	movlw	low (__pbssBANK1+14)
   149  0006' 2000'              	fcall	clear_ram0
   150                           
   151                           ; Clear objects allocated to BANK0
   152  0007' 3000'              	movlw	low __pbssBANK0
   153  0008' 0084               	movwf	4
   154  0009' 3000'              	movlw	low (__pbssBANK0+4)
   155  000A' 2000'              	fcall	clear_ram0
   156                           
   157                           ; Clear objects allocated to BITCOMMON
   158  000B' 0180'              	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   159  000C'                    end_of_initialization:	
   160                           ;End of C runtime variable initialization code
   161                           
   162  000C'                    __end_of__initialization:
   163  000C' 0183               	clrf	3
   164  000D' 2800'              	ljmp	_main	;jump to C main() function
   165                           
   166                           	psect	bitbssCOMMON
   167  0000'                    __pbitbssCOMMON:
   168  0000'                    _button_pressed:
   169  0000'                    	ds	1
   170  0001'                    _LED_state:
   171  0001'                    	ds	1
   172  0002'                    _int_F:
   173  0002'                    	ds	1
   174                           
   175                           	psect	bssBANK0
   176  0000'                    __pbssBANK0:
   177  0000'                    _prevTime_LED:
   178  0000'                    	ds	2
   179  0002'                    _speedRPM:
   180  0002'                    	ds	2
   181                           
   182                           	psect	dataBANK0
   183  0000'                    __pdataBANK0:
   184  0000'                    _resolution_i:
   185  0000'                    	ds	1
   186                           
   187                           	psect	bssBANK1
   188  0000'                    __pbssBANK1:
   189  0000'                    ButtonBounce@Button_f:
   190  0000'                    	ds	4
   191  0004'                    _millisCount:
   192  0004'                    	ds	4
   193  0008'                    _TimePeriod:
   194  0008'                    	ds	2
   195  000A'                    _prevTime_display:
   196  000A'                    	ds	2
   197  000C'                    _prevTime_button:
   198  000C'                    	ds	2
   199                           
   200                           	psect	clrtext
   201  0000'                    clear_ram0:	
   202                           ;	Called with FSR containing the base address, and
   203                           ;	W with the last address+1
   204                           
   205  0000' 0064               	clrwdt	;clear the watchdog before getting into this loop
   206  0001'                    clrloop0:
   207  0001' 0180               	clrf	0	;clear RAM location pointed to by FSR
   208  0002' 0A84               	incf	4,f	;increment pointer
   209  0003' 0604               	xorwf	4,w	;XOR with final address
   210  0004' 1903               	btfsc	3,2	;have we reached the end yet?
   211  0005' 3400               	retlw	0	;all done for this memory range, return
   212  0006' 0604               	xorwf	4,w	;XOR again to restore value
   213  0007' 2801'              	goto	clrloop0	;do the next byte
   214                           
   215                           	psect	cstackCOMMON
   216  0000'                    __pcstackCOMMON:
   217  0000'                    ?_MAX7219_Setup:
   218  0000'                    ?_ButtonBounce:	
   219                           ; 1 bytes @ 0x0
   220                           
   221  0000'                    ?_ISR_function:	
   222                           ; 1 bytes @ 0x0
   223                           
   224  0000'                    ??_ISR_function:	
   225                           ; 1 bytes @ 0x0
   226                           
   227                           
   228                           ; 1 bytes @ 0x0
   229  0000'                    	ds	2
   230  0002'                    ??_ButtonBounce:
   231  0002'                    ?_SPI_send:	
   232                           ; 1 bytes @ 0x2
   233                           
   234  0002'                    ?___lbmod:	
   235                           ; 1 bytes @ 0x2
   236                           
   237  0002'                    ?___wmul:	
   238                           ; 1 bytes @ 0x2
   239                           
   240  0002'                    ?___ftpack:	
   241                           ; 2 bytes @ 0x2
   242                           
   243  0002'                    ?___lmul:	
   244                           ; 3 bytes @ 0x2
   245                           
   246  0002'                    ?___lldiv:	
   247                           ; 4 bytes @ 0x2
   248                           
   249  0002'                    ?___aldiv:	
   250                           ; 4 bytes @ 0x2
   251                           
   252  0002'                    ?___llmod:	
   253                           ; 4 bytes @ 0x2
   254                           
   255  0002'                    SPI_send@data:	
   256                           ; 4 bytes @ 0x2
   257                           
   258  0002'                    ___lbmod@divisor:	
   259                           ; 1 bytes @ 0x2
   260                           
   261  0002'                    ___wmul@multiplier:	
   262                           ; 1 bytes @ 0x2
   263                           
   264  0002'                    ___ftpack@arg:	
   265                           ; 2 bytes @ 0x2
   266                           
   267  0002'                    ___lmul@multiplier:	
   268                           ; 3 bytes @ 0x2
   269                           
   270  0002'                    ___lldiv@divisor:	
   271                           ; 4 bytes @ 0x2
   272                           
   273  0002'                    ___aldiv@divisor:	
   274                           ; 4 bytes @ 0x2
   275                           
   276  0002'                    ___llmod@divisor:	
   277                           ; 4 bytes @ 0x2
   278                           
   279                           
   280                           ; 4 bytes @ 0x2
   281  0002'                    	ds	1
   282  0003'                    ??_SPI_send:
   283  0003'                    ??___lbmod:	
   284                           ; 1 bytes @ 0x3
   285                           
   286                           
   287                           ; 1 bytes @ 0x3
   288  0003'                    	ds	1
   289  0004'                    SPI_send@addr:
   290  0004'                    ___wmul@multiplicand:	
   291                           ; 1 bytes @ 0x4
   292                           
   293                           
   294                           ; 2 bytes @ 0x4
   295  0004'                    	ds	1
   296  0005'                    ___ftpack@exp:
   297  0005'                    ___lbmod@dividend:	
   298                           ; 1 bytes @ 0x5
   299                           
   300  0005'                    SPI_send@i:	
   301                           ; 1 bytes @ 0x5
   302                           
   303                           
   304                           ; 2 bytes @ 0x5
   305  0005'                    	ds	1
   306  0006'                    ??___wmul:
   307  0006'                    ___ftpack@sign:	
   308                           ; 1 bytes @ 0x6
   309                           
   310  0006'                    ___lbmod@counter:	
   311                           ; 1 bytes @ 0x6
   312                           
   313  0006'                    ___wmul@product:	
   314                           ; 1 bytes @ 0x6
   315                           
   316  0006'                    ___lmul@multiplicand:	
   317                           ; 2 bytes @ 0x6
   318                           
   319  0006'                    ___lldiv@dividend:	
   320                           ; 4 bytes @ 0x6
   321                           
   322  0006'                    ___aldiv@dividend:	
   323                           ; 4 bytes @ 0x6
   324                           
   325  0006'                    ___llmod@dividend:	
   326                           ; 4 bytes @ 0x6
   327                           
   328                           
   329                           ; 4 bytes @ 0x6
   330  0006'                    	ds	1
   331  0007'                    ??_MAX7219_Setup:
   332  0007'                    ??___ftpack:	
   333                           ; 1 bytes @ 0x7
   334                           
   335  0007'                    ___lbmod@rem:	
   336                           ; 1 bytes @ 0x7
   337                           
   338                           
   339                           ; 1 bytes @ 0x7
   340  0007'                    	ds	3
   341  000A'                    ??___lmul:
   342  000A'                    ??___lldiv:	
   343                           ; 1 bytes @ 0xA
   344                           
   345  000A'                    ??___aldiv:	
   346                           ; 1 bytes @ 0xA
   347                           
   348  000A'                    ??___awtoft:	
   349                           ; 1 bytes @ 0xA
   350                           
   351  000A'                    ??___llmod:	
   352                           ; 1 bytes @ 0xA
   353                           
   354  000A'                    ??___lwtoft:	
   355                           ; 1 bytes @ 0xA
   356                           
   357  000A'                    ___awtoft@sign:	
   358                           ; 1 bytes @ 0xA
   359                           
   360                           
   361                           ; 1 bytes @ 0xA
   362  000A'                    	ds	1
   363  000B'                    ??_display_num:
   364  000B'                    ??_millis:	
   365                           ; 1 bytes @ 0xB
   366                           
   367  000B'                    ??_micros:	
   368                           ; 1 bytes @ 0xB
   369                           
   370  000B'                    ??_display_digit:	
   371                           ; 1 bytes @ 0xB
   372                           
   373  000B'                    ??___ftge:	
   374                           ; 1 bytes @ 0xB
   375                           
   376  000B'                    ??___lltoft:	
   377                           ; 1 bytes @ 0xB
   378                           
   379                           
   380                           	psect	cstackBANK0
   381  0000'                    __pcstackBANK0:	
   382                           ; 1 bytes @ 0xB
   383                           
   384  0000'                    ?___awtoft:
   385  0000'                    ?___lwtoft:	
   386                           ; 3 bytes @ 0x0
   387                           
   388  0000'                    ___aldiv@counter:	
   389                           ; 3 bytes @ 0x0
   390                           
   391  0000'                    ___llmod@counter:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0000'                    ___awtoft@c:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0000'                    ___lwtoft@c:	
   398                           ; 2 bytes @ 0x0
   399                           
   400  0000'                    ___lmul@product:	
   401                           ; 2 bytes @ 0x0
   402                           
   403  0000'                    ___lldiv@quotient:	
   404                           ; 4 bytes @ 0x0
   405                           
   406                           
   407                           ; 4 bytes @ 0x0
   408  0000'                    	ds	1
   409  0001'                    ?_display_digit:
   410  0001'                    ___aldiv@sign:	
   411                           ; 1 bytes @ 0x1
   412                           
   413  0001'                    display_digit@digit_X:	
   414                           ; 1 bytes @ 0x1
   415                           
   416                           
   417                           ; 2 bytes @ 0x1
   418  0001'                    	ds	1
   419  0002'                    ___aldiv@quotient:
   420                           
   421                           ; 4 bytes @ 0x2
   422  0002'                    	ds	1
   423  0003'                    ?___ftmul:
   424  0003'                    display_digit@val:	
   425                           ; 3 bytes @ 0x3
   426                           
   427  0003'                    ___ftmul@f1:	
   428                           ; 2 bytes @ 0x3
   429                           
   430                           
   431                           ; 3 bytes @ 0x3
   432  0003'                    	ds	1
   433  0004'                    ?___lltoft:
   434  0004'                    ___lldiv@counter:	
   435                           ; 3 bytes @ 0x4
   436                           
   437  0004'                    ___lltoft@c:	
   438                           ; 1 bytes @ 0x4
   439                           
   440                           
   441                           ; 4 bytes @ 0x4
   442  0004'                    	ds	1
   443  0005'                    ?_display_num:
   444  0005'                    ?_millis:	
   445                           ; 1 bytes @ 0x5
   446                           
   447  0005'                    display_num@val:	
   448                           ; 4 bytes @ 0x5
   449                           
   450                           
   451                           ; 4 bytes @ 0x5
   452  0005'                    	ds	1
   453  0006'                    ___ftmul@f2:
   454                           
   455                           ; 3 bytes @ 0x6
   456  0006'                    	ds	2
   457  0008'                    ___lltoft@exp:
   458                           
   459                           ; 1 bytes @ 0x8
   460  0008'                    	ds	1
   461  0009'                    ??___ftmul:
   462  0009'                    display_num@i:	
   463                           ; 1 bytes @ 0x9
   464                           
   465  0009'                    millis@result:	
   466                           ; 2 bytes @ 0x9
   467                           
   468                           
   469                           ; 4 bytes @ 0x9
   470  0009'                    	ds	3
   471  000C'                    ___ftmul@exp:
   472                           
   473                           ; 1 bytes @ 0xC
   474  000C'                    	ds	1
   475  000D'                    ___ftmul@f3_as_product:
   476                           
   477                           ; 3 bytes @ 0xD
   478  000D'                    	ds	3
   479  0010'                    ___ftmul@cntr:
   480                           
   481                           ; 1 bytes @ 0x10
   482  0010'                    	ds	1
   483  0011'                    ___ftmul@sign:
   484                           
   485                           ; 1 bytes @ 0x11
   486  0011'                    	ds	1
   487  0012'                    ?___ftadd:
   488  0012'                    ___ftadd@f1:	
   489                           ; 3 bytes @ 0x12
   490                           
   491                           
   492                           ; 3 bytes @ 0x12
   493  0012'                    	ds	3
   494  0015'                    ___ftadd@f2:
   495                           
   496                           ; 3 bytes @ 0x15
   497  0015'                    	ds	3
   498  0018'                    ??___ftadd:
   499                           
   500                           ; 1 bytes @ 0x18
   501  0018'                    	ds	3
   502  001B'                    ___ftadd@sign:
   503                           
   504                           ; 1 bytes @ 0x1B
   505  001B'                    	ds	1
   506  001C'                    ___ftadd@exp2:
   507                           
   508                           ; 1 bytes @ 0x1C
   509  001C'                    	ds	1
   510  001D'                    ___ftadd@exp1:
   511                           
   512                           ; 1 bytes @ 0x1D
   513  001D'                    	ds	1
   514  001E'                    ?___fttol:
   515  001E'                    ___fttol@f1:	
   516                           ; 4 bytes @ 0x1E
   517                           
   518                           
   519                           ; 3 bytes @ 0x1E
   520  001E'                    	ds	4
   521  0022'                    ??___fttol:
   522                           
   523                           ; 1 bytes @ 0x22
   524  0022'                    	ds	3
   525  0025'                    ___fttol@sign1:
   526                           
   527                           ; 1 bytes @ 0x25
   528  0025'                    	ds	1
   529  0026'                    ___fttol@lval:
   530                           
   531                           ; 4 bytes @ 0x26
   532  0026'                    	ds	4
   533  002A'                    ___fttol@exp1:
   534                           
   535                           ; 1 bytes @ 0x2A
   536  002A'                    	ds	1
   537  002B'                    ?_micros:
   538                           
   539                           ; 4 bytes @ 0x2B
   540  002B'                    	ds	4
   541  002F'                    micros@result:
   542                           
   543                           ; 4 bytes @ 0x2F
   544  002F'                    	ds	4
   545  0033'                    ?___ftge:
   546  0033'                    ___ftge@ff1:	
   547                           ; 1 bit 
   548                           
   549                           
   550                           ; 3 bytes @ 0x33
   551  0033'                    	ds	3
   552  0036'                    ___ftge@ff2:
   553                           
   554                           ; 3 bytes @ 0x36
   555  0036'                    	ds	3
   556  0039'                    ?_main:
   557  0039'                    main@argc:	
   558                           ; 2 bytes @ 0x39
   559                           
   560                           
   561                           ; 2 bytes @ 0x39
   562  0039'                    	ds	2
   563  003B'                    main@argv:
   564                           
   565                           ; 2 bytes @ 0x3B
   566  003B'                    	ds	2
   567  003D'                    ??_main:
   568                           
   569                           ; 1 bytes @ 0x3D
   570  003D'                    	ds	8
   571  0045'                    _main$624:
   572                           
   573                           ; 4 bytes @ 0x45
   574  0045'                    	ds	4
   575  0049'                    main@dir:
   576                           
   577                           ; 1 bytes @ 0x49
   578  0049'                    	ds	1
   579                           
   580                           	psect	maintext
   581  0000'                    __pmaintext:	
   582 ;;
   583 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   584 ;;
   585 ;; *************** function _main *****************
   586 ;; Defined at:
   587 ;;		line 85 in file "Stroboscope.c"
   588 ;; Parameters:    Size  Location     Type
   589 ;;  argc            2   57[BANK0 ] int 
   590 ;;  argv            2   59[BANK0 ] PTR PTR unsigned char 
   591 ;; Auto vars:     Size  Location     Type
   592 ;;  dir             1   73[BANK0 ] unsigned char 
   593 ;; Return value:  Size  Location     Type
   594 ;;                  2   57[BANK0 ] int 
   595 ;; Registers used:
   596 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   597 ;; Tracked objects:
   598 ;;		On entry : B00/0
   599 ;;		On exit  : 0/0
   600 ;;		Unchanged: 0/0
   601 ;; Data sizes:     COMMON   BANK0   BANK1
   602 ;;      Params:         0       4       0
   603 ;;      Locals:         0       5       0
   604 ;;      Temps:          0       8       0
   605 ;;      Totals:         0      17       0
   606 ;;Total ram usage:       17 bytes
   607 ;; Hardware stack levels required when called: 4
   608 ;; This function calls:
   609 ;;		_ButtonBounce
   610 ;;		_MAX7219_Setup
   611 ;;		___aldiv
   612 ;;		___ftge
   613 ;;		___ftmul
   614 ;;		___lbmod
   615 ;;		___lltoft
   616 ;;		___lwtoft
   617 ;;		___wmul
   618 ;;		_display_num
   619 ;;		_micros
   620 ;;		_millis
   621 ;; This function is called by:
   622 ;;		Startup code after reset
   623 ;; This function uses a non-reentrant model
   624 ;;
   625                           
   626  0000'                    _main:	
   627                           ;psect for function _main
   628                           
   629                           
   630                           ;Stroboscope.c: 87: TRISCbits.TRISC2 = 0;
   631                           
   632                           ;incstack = 0
   633                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   634  0000' 1683               	bsf	3,5	;RP0=1, select bank1
   635  0001' 1107               	bcf	7,2	;volatile
   636                           
   637                           ;Stroboscope.c: 88: TRISCbits.TRISC1 = 0;
   638  0002' 1087               	bcf	7,1	;volatile
   639                           
   640                           ;Stroboscope.c: 89: TRISCbits.TRISC0 = 0;
   641  0003' 1007               	bcf	7,0	;volatile
   642                           
   643                           ;Stroboscope.c: 90: TRISCbits.TRISC3 = 0;
   644  0004' 1187               	bcf	7,3	;volatile
   645                           
   646                           ;Stroboscope.c: 91: ANSEL = 0;
   647  0005' 0191               	clrf	17	;volatile
   648                           
   649                           ;Stroboscope.c: 94: IOCAbits.IOC0 = 1;
   650  0006' 1416               	bsf	22,0	;volatile
   651                           
   652                           ;Stroboscope.c: 95: INTCONbits.GIE = 1;
   653  0007' 178B               	bsf	11,7	;volatile
   654                           
   655                           ;Stroboscope.c: 96: INTCONbits.RAIE = 1;
   656  0008' 158B               	bsf	11,3	;volatile
   657                           
   658                           ;Stroboscope.c: 99: OPTION_REGbits.T0CS = 0;
   659  0009' 1281               	bcf	1,5	;volatile
   660                           
   661                           ;Stroboscope.c: 100: OPTION_REGbits.PSA = 0;
   662  000A' 1181               	bcf	1,3	;volatile
   663                           
   664                           ;Stroboscope.c: 101: OPTION_REGbits.PS = 0b001;
   665  000B' 0801               	movf	1,w	;volatile
   666  000C' 39F8               	andlw	-8
   667  000D' 3801               	iorlw	1
   668  000E' 0081               	movwf	1	;volatile
   669                           
   670                           ;Stroboscope.c: 102: INTCONbits.T0IE = 1;
   671  000F' 168B               	bsf	11,5	;volatile
   672                           
   673                           ;Stroboscope.c: 103: INTCONbits.GIE = 1;
   674  0010' 178B               	bsf	11,7	;volatile
   675                           
   676                           ;Stroboscope.c: 105: PORTCbits.RC0 = 0;
   677  0011' 1283               	bcf	3,5	;RP0=0, select bank0
   678  0012' 1007               	bcf	7,0	;volatile
   679                           
   680                           ;Stroboscope.c: 106: PORTCbits.RC1 = 1;
   681  0013' 1487               	bsf	7,1	;volatile
   682                           
   683                           ;Stroboscope.c: 107: PORTCbits.RC2 = 0;
   684  0014' 1107               	bcf	7,2	;volatile
   685                           
   686                           ;Stroboscope.c: 108: TMR0 = 163;
   687  0015' 30A3               	movlw	163
   688  0016' 0081               	movwf	1	;volatile
   689                           
   690                           ;Stroboscope.c: 110: MAX7219_Setup();
   691  0017' 2000'              	fcall	_MAX7219_Setup
   692                           
   693                           ;Stroboscope.c: 112: uint8_t dir;;Stroboscope.c: 113: int_F = 0;
   694  0018' 1000'              	bcf	_int_F/(0+8),_int_F& (0+7)	;volatile
   695                           
   696                           ;Stroboscope.c: 114: display_num(12345678);
   697  0019' 3000               	movlw	0
   698  001A' 0088'              	movwf	display_num@val+3
   699  001B' 30BC               	movlw	188
   700  001C' 0087'              	movwf	display_num@val+2
   701  001D' 3061               	movlw	97
   702  001E' 0086'              	movwf	display_num@val+1
   703  001F' 304E               	movlw	78
   704  0020' 0085'              	movwf	display_num@val
   705  0021' 2000'              	fcall	_display_num
   706                           
   707                           ;Stroboscope.c: 115: _delay((unsigned long)((2000)*(8000000/4000.0)));
   708  0022' 3015               	movlw	21
   709  0023' 1283               	bcf	3,5	;RP0=0, select bank0
   710  0024' 00BF'              	movwf	??_main+2
   711  0025' 304B               	movlw	75
   712  0026' 00BE'              	movwf	??_main+1
   713  0027' 30BE               	movlw	190
   714  0028' 00BD'              	movwf	??_main
   715  0029'                    u3197:
   716  0029' 0BBD'              	decfsz	??_main,f
   717  002A' 2829'              	goto	u3197
   718  002B' 0BBE'              	decfsz	??_main+1,f
   719  002C' 2829'              	goto	u3197
   720  002D' 0BBF'              	decfsz	??_main+2,f
   721  002E' 2829'              	goto	u3197
   722  002F'                    l1996:
   723                           
   724                           ;Stroboscope.c: 119: ButtonBounce();
   725  002F' 2000'              	fcall	_ButtonBounce
   726                           
   727                           ;Stroboscope.c: 123: if ((millis() - prevTime_button >= 250) && button_pressed){
   728  0030' 1683               	bsf	3,5	;RP0=1, select bank1
   729  0031' 0800'              	movf	_prevTime_button^(0+128),w
   730  0032' 1283               	bcf	3,5	;RP0=0, select bank0
   731  0033' 00BD'              	movwf	??_main
   732  0034' 1683               	bsf	3,5	;RP0=1, select bank1
   733  0035' 0800'              	movf	(_prevTime_button+1)^(0+128),w
   734  0036' 1283               	bcf	3,5	;RP0=0, select bank0
   735  0037' 00BE'              	movwf	??_main+1
   736  0038' 01BF'              	clrf	??_main+2
   737  0039' 01C0'              	clrf	??_main+3
   738  003A' 2000'              	fcall	_millis
   739  003B' 0805'              	movf	?_millis,w
   740  003C' 00C1'              	movwf	??_main+4
   741  003D' 0806'              	movf	?_millis+1,w
   742  003E' 00C2'              	movwf	??_main+5
   743  003F' 0807'              	movf	?_millis+2,w
   744  0040' 00C3'              	movwf	??_main+6
   745  0041' 0808'              	movf	?_millis+3,w
   746  0042' 00C4'              	movwf	??_main+7
   747  0043' 083D'              	movf	??_main,w
   748  0044' 02C1'              	subwf	??_main+4,f
   749  0045' 083E'              	movf	??_main+1,w
   750  0046' 1C03               	skipc
   751  0047' 0F3E'              	incfsz	??_main+1,w
   752  0048' 284A'              	goto	u3071
   753  0049' 284B'              	goto	u3072
   754  004A'                    u3071:
   755  004A' 02C2'              	subwf	??_main+5,f
   756  004B'                    u3072:
   757  004B' 083F'              	movf	??_main+2,w
   758  004C' 1C03               	skipc
   759  004D' 0F3F'              	incfsz	??_main+2,w
   760  004E' 2850'              	goto	u3073
   761  004F' 2851'              	goto	u3074
   762  0050'                    u3073:
   763  0050' 02C3'              	subwf	??_main+6,f
   764  0051'                    u3074:
   765  0051' 0840'              	movf	??_main+3,w
   766  0052' 1C03               	skipc
   767  0053' 0F40'              	incfsz	??_main+3,w
   768  0054' 2856'              	goto	u3075
   769  0055' 2857'              	goto	u3076
   770  0056'                    u3075:
   771  0056' 02C4'              	subwf	??_main+7,f
   772  0057'                    u3076:
   773  0057' 0844'              	movf	??_main+7,w
   774  0058' 1D03               	btfss	3,2
   775  0059' 2866'              	goto	l2000
   776  005A' 0843'              	movf	??_main+6,w
   777  005B' 1D03               	btfss	3,2
   778  005C' 2866'              	goto	l2000
   779  005D' 0842'              	movf	??_main+5,w
   780  005E' 1D03               	btfss	3,2
   781  005F' 2866'              	goto	l2000
   782  0060' 30FA               	movlw	250
   783  0061' 0241'              	subwf	??_main+4,w
   784  0062' 1D03               	skipz
   785  0063' 2864'              	goto	u3083
   786  0064'                    u3083:
   787  0064' 1C03               	btfss	3,0
   788  0065' 287B'              	goto	l2008
   789  0066'                    l2000:
   790  0066' 1C00'              	btfss	_button_pressed/(0+8),_button_pressed& (0+7)
   791  0067' 287B'              	goto	l2008
   792                           
   793                           ;Stroboscope.c: 124: resolution_i = (resolution_i++)%5+1;
   794  0068' 3005               	movlw	5
   795  0069' 0082'              	movwf	___lbmod@divisor
   796  006A' 1283               	bcf	3,5	;RP0=0, select bank0
   797  006B' 0800'              	movf	_resolution_i,w
   798  006C' 2000'              	fcall	___lbmod
   799  006D' 3E01               	addlw	1
   800  006E' 0080'              	movwf	_resolution_i
   801  006F' 3001               	movlw	1
   802  0070' 00FF               	movwf	127
   803  0071' 087F               	movf	127,w
   804  0072' 0780'              	addwf	_resolution_i,f
   805                           
   806                           ;Stroboscope.c: 125: prevTime_button = millis();
   807  0073' 2000'              	fcall	_millis
   808  0074' 0806'              	movf	?_millis+1,w
   809  0075' 1683               	bsf	3,5	;RP0=1, select bank1
   810  0076' 0080'              	movwf	(_prevTime_button+1)^(0+128)
   811  0077' 1283               	bcf	3,5	;RP0=0, select bank0
   812  0078' 0805'              	movf	?_millis,w
   813  0079' 1683               	bsf	3,5	;RP0=1, select bank1
   814  007A' 0080'              	movwf	_prevTime_button^(0+128)
   815  007B'                    l2008:
   816                           
   817                           ;Stroboscope.c: 126: };Stroboscope.c: 129: if (int_F){
   818  007B' 1C00'              	btfss	_int_F/(0+8),_int_F& (0+7)	;volatile
   819  007C' 28F6'              	goto	l2034
   820                           
   821                           ;Stroboscope.c: 130: dir = ((PORTAbits.RA0 + PORTAbits.RA1)%2)*2 - 1;
   822  007D' 1283               	bcf	3,5	;RP0=0, select bank0
   823  007E' 0C05               	rrf	5,w	;volatile
   824  007F' 3901               	andlw	1
   825  0080' 00BD'              	movwf	??_main
   826  0081' 0805               	movf	5,w	;volatile
   827  0082' 3901               	andlw	1
   828  0083' 073D'              	addwf	??_main,w
   829  0084' 3901               	andlw	1
   830  0085' 00BE'              	movwf	??_main+1
   831  0086' 073E'              	addwf	??_main+1,w
   832  0087' 3EFF               	addlw	255
   833  0088' 00C9'              	movwf	main@dir
   834                           
   835                           ;Stroboscope.c: 133: switch (resolution_i) {
   836  0089' 28C5'              	goto	l2024
   837  008A'                    l2012:
   838                           
   839                           ;Stroboscope.c: 135: speedRPM += 1*dir;
   840  008A' 0849'              	movf	main@dir,w
   841  008B' 00BD'              	movwf	??_main
   842  008C' 01BE'              	clrf	??_main+1
   843  008D' 083D'              	movf	??_main,w
   844  008E' 0782'              	addwf	_speedRPM,f
   845  008F' 1803               	skipnc
   846  0090' 0A83'              	incf	_speedRPM+1,f
   847  0091' 083E'              	movf	??_main+1,w
   848  0092' 28C3'              	goto	L4
   849  0093'                    l2014:	
   850                           ;Stroboscope.c: 136: break;
   851                           
   852                           
   853                           ;Stroboscope.c: 138: speedRPM += 5*dir;
   854  0093' 0849'              	movf	main@dir,w
   855  0094' 00BD'              	movwf	??_main
   856  0095' 01BE'              	clrf	??_main+1
   857  0096' 083D'              	movf	??_main,w
   858  0097' 0082'              	movwf	___wmul@multiplier
   859  0098' 083E'              	movf	??_main+1,w
   860  0099' 0083'              	movwf	___wmul@multiplier+1
   861  009A' 3005               	movlw	5
   862  009B' 28A4'              	goto	L6
   863  009C'                    l2016:	
   864                           ;Stroboscope.c: 139: break;
   865                           
   866                           
   867                           ;Stroboscope.c: 141: speedRPM += 50*dir;
   868  009C' 0849'              	movf	main@dir,w
   869  009D' 00BD'              	movwf	??_main
   870  009E' 01BE'              	clrf	??_main+1
   871  009F' 083D'              	movf	??_main,w
   872  00A0' 0082'              	movwf	___wmul@multiplier
   873  00A1' 083E'              	movf	??_main+1,w
   874  00A2' 0083'              	movwf	___wmul@multiplier+1
   875  00A3' 3032               	movlw	50
   876  00A4'                    L6:
   877  00A4' 0084'              	movwf	___wmul@multiplicand
   878  00A5' 3000               	movlw	0
   879  00A6' 28BC'              	goto	L5
   880  00A7'                    l2018:	
   881                           ;Stroboscope.c: 142: break;
   882                           
   883                           
   884                           ;Stroboscope.c: 144: speedRPM += 500*dir;
   885  00A7' 0849'              	movf	main@dir,w
   886  00A8' 00BD'              	movwf	??_main
   887  00A9' 01BE'              	clrf	??_main+1
   888  00AA' 083D'              	movf	??_main,w
   889  00AB' 0082'              	movwf	___wmul@multiplier
   890  00AC' 083E'              	movf	??_main+1,w
   891  00AD' 0083'              	movwf	___wmul@multiplier+1
   892  00AE' 30F4               	movlw	244
   893  00AF' 0084'              	movwf	___wmul@multiplicand
   894  00B0' 3001               	movlw	1
   895  00B1' 28BC'              	goto	L5
   896  00B2'                    l2020:	
   897                           ;Stroboscope.c: 145: break;
   898                           
   899                           
   900                           ;Stroboscope.c: 147: speedRPM += 5000*dir;
   901  00B2' 0849'              	movf	main@dir,w
   902  00B3' 00BD'              	movwf	??_main
   903  00B4' 01BE'              	clrf	??_main+1
   904  00B5' 083D'              	movf	??_main,w
   905  00B6' 0082'              	movwf	___wmul@multiplier
   906  00B7' 083E'              	movf	??_main+1,w
   907  00B8' 0083'              	movwf	___wmul@multiplier+1
   908  00B9' 3088               	movlw	136
   909  00BA' 0084'              	movwf	___wmul@multiplicand
   910  00BB' 3013               	movlw	19
   911  00BC'                    L5:
   912  00BC' 0085'              	movwf	___wmul@multiplicand+1
   913  00BD' 2000'              	fcall	___wmul
   914  00BE' 0802'              	movf	?___wmul,w
   915  00BF' 0782'              	addwf	_speedRPM,f
   916  00C0' 1803               	skipnc
   917  00C1' 0A83'              	incf	_speedRPM+1,f
   918  00C2' 0803'              	movf	?___wmul+1,w
   919  00C3'                    L4:
   920  00C3' 0783'              	addwf	_speedRPM+1,f
   921                           
   922                           ;Stroboscope.c: 148: break;
   923  00C4' 28D6'              	goto	l2026
   924  00C5'                    l2024:
   925  00C5' 0800'              	movf	_resolution_i,w
   926                           
   927                           ; Switch size 1, requested type "simple"
   928                           ; Number of cases is 5, Range of values is 1 to 5
   929                           ; switch strategies available:
   930                           ; Name         Instructions Cycles
   931                           ; direct_byte           14     9 (fixed)
   932                           ; simple_byte           16     9 (average)
   933                           ; jumptable            263     9 (fixed)
   934                           ;	Chosen strategy is simple_byte
   935  00C6' 3A01               	xorlw	1	; case 1
   936  00C7' 1903               	skipnz
   937  00C8' 288A'              	goto	l2012
   938  00C9' 3A03               	xorlw	3	; case 2
   939  00CA' 1903               	skipnz
   940  00CB' 2893'              	goto	l2014
   941  00CC' 3A01               	xorlw	1	; case 3
   942  00CD' 1903               	skipnz
   943  00CE' 289C'              	goto	l2016
   944  00CF' 3A07               	xorlw	7	; case 4
   945  00D0' 1903               	skipnz
   946  00D1' 28A7'              	goto	l2018
   947  00D2' 3A01               	xorlw	1	; case 5
   948  00D3' 1903               	skipnz
   949  00D4' 28B2'              	goto	l2020
   950  00D5' 28D6'              	goto	l2026
   951  00D6'                    l2026:
   952                           
   953                           ;Stroboscope.c: 151: if (speedRPM <= 1){
   954  00D6' 3000               	movlw	0
   955  00D7' 0203'              	subwf	_speedRPM+1,w
   956  00D8' 3002               	movlw	2
   957  00D9' 1903               	skipnz
   958  00DA' 0202'              	subwf	_speedRPM,w
   959  00DB' 1803               	skipnc
   960  00DC' 28E1'              	goto	l2030
   961                           
   962                           ;Stroboscope.c: 152: speedRPM = 10;
   963  00DD' 300A               	movlw	10
   964  00DE' 0082'              	movwf	_speedRPM
   965  00DF' 3000               	movlw	0
   966  00E0' 0083'              	movwf	_speedRPM+1
   967  00E1'                    l2030:
   968                           
   969                           ;Stroboscope.c: 153: };Stroboscope.c: 154: int_F = 0;
   970  00E1' 1000'              	bcf	_int_F/(0+8),_int_F& (0+7)	;volatile
   971                           
   972                           ;Stroboscope.c: 155: TimePeriod = 60000000L/speedRPM;
   973  00E2' 0802'              	movf	_speedRPM,w
   974  00E3' 0082'              	movwf	___aldiv@divisor
   975  00E4' 0803'              	movf	_speedRPM+1,w
   976  00E5' 0083'              	movwf	___aldiv@divisor+1
   977  00E6' 0184'              	clrf	___aldiv@divisor+2
   978  00E7' 0185'              	clrf	___aldiv@divisor+3
   979  00E8' 3003               	movlw	3
   980  00E9' 0089'              	movwf	___aldiv@dividend+3
   981  00EA' 3093               	movlw	147
   982  00EB' 0088'              	movwf	___aldiv@dividend+2
   983  00EC' 3087               	movlw	135
   984  00ED' 0087'              	movwf	___aldiv@dividend+1
   985  00EE' 3000               	movlw	0
   986  00EF' 0086'              	movwf	___aldiv@dividend
   987  00F0' 2000'              	fcall	___aldiv
   988  00F1' 0803'              	movf	?___aldiv+1,w
   989  00F2' 1683               	bsf	3,5	;RP0=1, select bank1
   990  00F3' 0080'              	movwf	(_TimePeriod+1)^(0+128)
   991  00F4' 0802'              	movf	?___aldiv,w
   992  00F5' 0080'              	movwf	_TimePeriod^(0+128)
   993  00F6'                    l2034:
   994                           
   995                           ;Stroboscope.c: 156: };Stroboscope.c: 161: if ((micros() - prevTime_LED >= 9.8*TimePerio
      +                          d) && (!LED_state)){
   996  00F6' 1283               	bcf	3,5	;RP0=0, select bank0
   997  00F7' 0800'              	movf	_prevTime_LED,w
   998  00F8' 00BD'              	movwf	??_main
   999  00F9' 0801'              	movf	_prevTime_LED+1,w
  1000  00FA' 00BE'              	movwf	??_main+1
  1001  00FB' 01BF'              	clrf	??_main+2
  1002  00FC' 01C0'              	clrf	??_main+3
  1003  00FD' 2000'              	fcall	_micros
  1004  00FE' 082B'              	movf	?_micros,w
  1005  00FF' 00C1'              	movwf	??_main+4
  1006  0100' 082C'              	movf	?_micros+1,w
  1007  0101' 00C2'              	movwf	??_main+5
  1008  0102' 082D'              	movf	?_micros+2,w
  1009  0103' 00C3'              	movwf	??_main+6
  1010  0104' 082E'              	movf	?_micros+3,w
  1011  0105' 00C4'              	movwf	??_main+7
  1012  0106' 083D'              	movf	??_main,w
  1013  0107' 02C1'              	subwf	??_main+4,f
  1014  0108' 083E'              	movf	??_main+1,w
  1015  0109' 1C03               	skipc
  1016  010A' 0F3E'              	incfsz	??_main+1,w
  1017  010B' 290D'              	goto	u3121
  1018  010C' 290E'              	goto	u3122
  1019  010D'                    u3121:
  1020  010D' 02C2'              	subwf	??_main+5,f
  1021  010E'                    u3122:
  1022  010E' 083F'              	movf	??_main+2,w
  1023  010F' 1C03               	skipc
  1024  0110' 0F3F'              	incfsz	??_main+2,w
  1025  0111' 2913'              	goto	u3123
  1026  0112' 2914'              	goto	u3124
  1027  0113'                    u3123:
  1028  0113' 02C3'              	subwf	??_main+6,f
  1029  0114'                    u3124:
  1030  0114' 0840'              	movf	??_main+3,w
  1031  0115' 1C03               	skipc
  1032  0116' 0F40'              	incfsz	??_main+3,w
  1033  0117' 2919'              	goto	u3125
  1034  0118' 291A'              	goto	u3126
  1035  0119'                    u3125:
  1036  0119' 02C4'              	subwf	??_main+7,f
  1037  011A'                    u3126:
  1038  011A' 0844'              	movf	??_main+7,w
  1039  011B' 00C8'              	movwf	_main$624+3
  1040  011C' 0843'              	movf	??_main+6,w
  1041  011D' 00C7'              	movwf	_main$624+2
  1042  011E' 0842'              	movf	??_main+5,w
  1043  011F' 00C6'              	movwf	_main$624+1
  1044  0120' 0841'              	movf	??_main+4,w
  1045  0121' 00C5'              	movwf	_main$624
  1046                           
  1047                           ;Stroboscope.c: 156: };Stroboscope.c: 161: if ((micros() - prevTime_LED >= 9.8*TimePerio
      +                          d) && (!LED_state)){
  1048  0122' 0848'              	movf	_main$624+3,w
  1049  0123' 0087'              	movwf	___lltoft@c+3
  1050  0124' 0847'              	movf	_main$624+2,w
  1051  0125' 0086'              	movwf	___lltoft@c+2
  1052  0126' 0846'              	movf	_main$624+1,w
  1053  0127' 0085'              	movwf	___lltoft@c+1
  1054  0128' 0845'              	movf	_main$624,w
  1055  0129' 0084'              	movwf	___lltoft@c
  1056  012A' 2000'              	fcall	___lltoft
  1057  012B' 0804'              	movf	?___lltoft,w
  1058  012C' 00B3'              	movwf	___ftge@ff1
  1059  012D' 0805'              	movf	?___lltoft+1,w
  1060  012E' 00B4'              	movwf	___ftge@ff1+1
  1061  012F' 0806'              	movf	?___lltoft+2,w
  1062  0130' 00B5'              	movwf	___ftge@ff1+2
  1063  0131' 1683               	bsf	3,5	;RP0=1, select bank1
  1064  0132' 0800'              	movf	(_TimePeriod+1)^(0+128),w
  1065  0133' 1283               	bcf	3,5	;RP0=0, select bank0
  1066  0134' 0081'              	movwf	___lwtoft@c+1
  1067  0135' 1683               	bsf	3,5	;RP0=1, select bank1
  1068  0136' 0800'              	movf	_TimePeriod^(0+128),w
  1069  0137' 1283               	bcf	3,5	;RP0=0, select bank0
  1070  0138' 0080'              	movwf	___lwtoft@c
  1071  0139' 2000'              	fcall	___lwtoft
  1072  013A' 0800'              	movf	?___lwtoft,w
  1073  013B' 0086'              	movwf	___ftmul@f2
  1074  013C' 0801'              	movf	?___lwtoft+1,w
  1075  013D' 0087'              	movwf	___ftmul@f2+1
  1076  013E' 0802'              	movf	?___lwtoft+2,w
  1077  013F' 0088'              	movwf	___ftmul@f2+2
  1078  0140' 30CD               	movlw	205
  1079  0141' 0083'              	movwf	___ftmul@f1
  1080  0142' 301C               	movlw	28
  1081  0143' 0084'              	movwf	___ftmul@f1+1
  1082  0144' 3041               	movlw	65
  1083  0145' 0085'              	movwf	___ftmul@f1+2
  1084  0146' 2000'              	fcall	___ftmul
  1085  0147' 0803'              	movf	?___ftmul,w
  1086  0148' 00B6'              	movwf	___ftge@ff2
  1087  0149' 0804'              	movf	?___ftmul+1,w
  1088  014A' 00B7'              	movwf	___ftge@ff2+1
  1089  014B' 0805'              	movf	?___ftmul+2,w
  1090  014C' 00B8'              	movwf	___ftge@ff2+2
  1091  014D' 2000'              	fcall	___ftge
  1092  014E' 1803               	btfsc	3,0
  1093  014F' 1800'              	btfsc	_LED_state/(0+8),_LED_state& (0+7)
  1094  0150' 2954'              	goto	l2044
  1095                           
  1096                           ;Stroboscope.c: 162: PORTCbits.RC3 = 1;
  1097  0151' 1587               	bsf	7,3	;volatile
  1098                           
  1099                           ;Stroboscope.c: 163: LED_state = 1;
  1100  0152' 1400'              	bsf	_LED_state/(0+8),_LED_state& (0+7)
  1101                           
  1102                           ;Stroboscope.c: 165: }
  1103  0153' 29B0'              	goto	l2042
  1104  0154'                    l2044:
  1105                           
  1106                           ;Stroboscope.c: 166: else if ((micros() - prevTime_LED >= 0.2*TimePeriod) && (LED_state)
      +                          ){
  1107  0154' 0800'              	movf	_prevTime_LED,w
  1108  0155' 00BD'              	movwf	??_main
  1109  0156' 0801'              	movf	_prevTime_LED+1,w
  1110  0157' 00BE'              	movwf	??_main+1
  1111  0158' 01BF'              	clrf	??_main+2
  1112  0159' 01C0'              	clrf	??_main+3
  1113  015A' 2000'              	fcall	_micros
  1114  015B' 082B'              	movf	?_micros,w
  1115  015C' 00C1'              	movwf	??_main+4
  1116  015D' 082C'              	movf	?_micros+1,w
  1117  015E' 00C2'              	movwf	??_main+5
  1118  015F' 082D'              	movf	?_micros+2,w
  1119  0160' 00C3'              	movwf	??_main+6
  1120  0161' 082E'              	movf	?_micros+3,w
  1121  0162' 00C4'              	movwf	??_main+7
  1122  0163' 083D'              	movf	??_main,w
  1123  0164' 02C1'              	subwf	??_main+4,f
  1124  0165' 083E'              	movf	??_main+1,w
  1125  0166' 1C03               	skipc
  1126  0167' 0F3E'              	incfsz	??_main+1,w
  1127  0168' 296A'              	goto	u3151
  1128  0169' 296B'              	goto	u3152
  1129  016A'                    u3151:
  1130  016A' 02C2'              	subwf	??_main+5,f
  1131  016B'                    u3152:
  1132  016B' 083F'              	movf	??_main+2,w
  1133  016C' 1C03               	skipc
  1134  016D' 0F3F'              	incfsz	??_main+2,w
  1135  016E' 2970'              	goto	u3153
  1136  016F' 2971'              	goto	u3154
  1137  0170'                    u3153:
  1138  0170' 02C3'              	subwf	??_main+6,f
  1139  0171'                    u3154:
  1140  0171' 0840'              	movf	??_main+3,w
  1141  0172' 1C03               	skipc
  1142  0173' 0F40'              	incfsz	??_main+3,w
  1143  0174' 2976'              	goto	u3155
  1144  0175' 2977'              	goto	u3156
  1145  0176'                    u3155:
  1146  0176' 02C4'              	subwf	??_main+7,f
  1147  0177'                    u3156:
  1148  0177' 0844'              	movf	??_main+7,w
  1149  0178' 00C8'              	movwf	_main$624+3
  1150  0179' 0843'              	movf	??_main+6,w
  1151  017A' 00C7'              	movwf	_main$624+2
  1152  017B' 0842'              	movf	??_main+5,w
  1153  017C' 00C6'              	movwf	_main$624+1
  1154  017D' 0841'              	movf	??_main+4,w
  1155  017E' 00C5'              	movwf	_main$624
  1156                           
  1157                           ;Stroboscope.c: 166: else if ((micros() - prevTime_LED >= 0.2*TimePeriod) && (LED_state)
      +                          ){
  1158  017F' 0848'              	movf	_main$624+3,w
  1159  0180' 0087'              	movwf	___lltoft@c+3
  1160  0181' 0847'              	movf	_main$624+2,w
  1161  0182' 0086'              	movwf	___lltoft@c+2
  1162  0183' 0846'              	movf	_main$624+1,w
  1163  0184' 0085'              	movwf	___lltoft@c+1
  1164  0185' 0845'              	movf	_main$624,w
  1165  0186' 0084'              	movwf	___lltoft@c
  1166  0187' 2000'              	fcall	___lltoft
  1167  0188' 0804'              	movf	?___lltoft,w
  1168  0189' 00B3'              	movwf	___ftge@ff1
  1169  018A' 0805'              	movf	?___lltoft+1,w
  1170  018B' 00B4'              	movwf	___ftge@ff1+1
  1171  018C' 0806'              	movf	?___lltoft+2,w
  1172  018D' 00B5'              	movwf	___ftge@ff1+2
  1173  018E' 1683               	bsf	3,5	;RP0=1, select bank1
  1174  018F' 0800'              	movf	(_TimePeriod+1)^(0+128),w
  1175  0190' 1283               	bcf	3,5	;RP0=0, select bank0
  1176  0191' 0081'              	movwf	___lwtoft@c+1
  1177  0192' 1683               	bsf	3,5	;RP0=1, select bank1
  1178  0193' 0800'              	movf	_TimePeriod^(0+128),w
  1179  0194' 1283               	bcf	3,5	;RP0=0, select bank0
  1180  0195' 0080'              	movwf	___lwtoft@c
  1181  0196' 2000'              	fcall	___lwtoft
  1182  0197' 0800'              	movf	?___lwtoft,w
  1183  0198' 0086'              	movwf	___ftmul@f2
  1184  0199' 0801'              	movf	?___lwtoft+1,w
  1185  019A' 0087'              	movwf	___ftmul@f2+1
  1186  019B' 0802'              	movf	?___lwtoft+2,w
  1187  019C' 0088'              	movwf	___ftmul@f2+2
  1188  019D' 30CD               	movlw	205
  1189  019E' 0083'              	movwf	___ftmul@f1
  1190  019F' 304C               	movlw	76
  1191  01A0' 0084'              	movwf	___ftmul@f1+1
  1192  01A1' 303E               	movlw	62
  1193  01A2' 0085'              	movwf	___ftmul@f1+2
  1194  01A3' 2000'              	fcall	___ftmul
  1195  01A4' 0803'              	movf	?___ftmul,w
  1196  01A5' 00B6'              	movwf	___ftge@ff2
  1197  01A6' 0804'              	movf	?___ftmul+1,w
  1198  01A7' 00B7'              	movwf	___ftge@ff2+1
  1199  01A8' 0805'              	movf	?___ftmul+2,w
  1200  01A9' 00B8'              	movwf	___ftge@ff2+2
  1201  01AA' 2000'              	fcall	___ftge
  1202  01AB' 1803               	btfsc	3,0
  1203  01AC' 1C00'              	btfss	_LED_state/(0+8),_LED_state& (0+7)
  1204  01AD' 29B5'              	goto	l72
  1205                           
  1206                           ;Stroboscope.c: 167: PORTCbits.RC3 = 0;
  1207  01AE' 1187               	bcf	7,3	;volatile
  1208                           
  1209                           ;Stroboscope.c: 168: LED_state = 0;
  1210  01AF' 1000'              	bcf	_LED_state/(0+8),_LED_state& (0+7)
  1211  01B0'                    l2042:
  1212                           
  1213                           ;Stroboscope.c: 164: prevTime_LED = micros();
  1214  01B0' 2000'              	fcall	_micros
  1215  01B1' 082C'              	movf	?_micros+1,w
  1216  01B2' 0081'              	movwf	_prevTime_LED+1
  1217  01B3' 082B'              	movf	?_micros,w
  1218  01B4' 0080'              	movwf	_prevTime_LED
  1219  01B5'                    l72:
  1220                           
  1221                           ;Stroboscope.c: 170: };Stroboscope.c: 173: if(millis() - prevTime_display >= 500){
  1222  01B5' 2000'              	fcall	_millis
  1223  01B6' 0808'              	movf	?_millis+3,w
  1224  01B7' 1D03               	btfss	3,2
  1225  01B8' 29C6'              	goto	l2052
  1226  01B9' 0807'              	movf	?_millis+2,w
  1227  01BA' 1D03               	btfss	3,2
  1228  01BB' 29C6'              	goto	l2052
  1229  01BC' 3001               	movlw	1
  1230  01BD' 0206'              	subwf	?_millis+1,w
  1231  01BE' 1D03               	skipz
  1232  01BF' 29C4'              	goto	u3183
  1233  01C0' 30F4               	movlw	244
  1234  01C1' 0205'              	subwf	?_millis,w
  1235  01C2' 1D03               	skipz
  1236  01C3' 29C4'              	goto	u3183
  1237  01C4'                    u3183:
  1238  01C4' 1C03               	btfss	3,0
  1239  01C5' 282F'              	goto	l1996
  1240  01C6'                    l2052:
  1241                           
  1242                           ;Stroboscope.c: 174: display_num(speedRPM);
  1243  01C6' 1283               	bcf	3,5	;RP0=0, select bank0
  1244  01C7' 0802'              	movf	_speedRPM,w
  1245  01C8' 0085'              	movwf	display_num@val
  1246  01C9' 0803'              	movf	_speedRPM+1,w
  1247  01CA' 0086'              	movwf	display_num@val+1
  1248  01CB' 0187'              	clrf	display_num@val+2
  1249  01CC' 0188'              	clrf	display_num@val+3
  1250  01CD' 2000'              	fcall	_display_num
  1251  01CE' 282F'              	goto	l1996
  1252  01CF'                    __end_of_main:
  1253                           
  1254                           	psect	text1
  1255  0000'                    __ptext1:	
  1256 ;; *************** function _millis *****************
  1257 ;; Defined at:
  1258 ;;		line 232 in file "Stroboscope.c"
  1259 ;; Parameters:    Size  Location     Type
  1260 ;;		None
  1261 ;; Auto vars:     Size  Location     Type
  1262 ;;  result          4    9[BANK0 ] unsigned long 
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  4    5[BANK0 ] unsigned long 
  1265 ;; Registers used:
  1266 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1267 ;; Tracked objects:
  1268 ;;		On entry : 100/0
  1269 ;;		On exit  : 100/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMMON   BANK0   BANK1
  1272 ;;      Params:         0       4       0
  1273 ;;      Locals:         0       4       0
  1274 ;;      Temps:          0       0       0
  1275 ;;      Totals:         0       8       0
  1276 ;;Total ram usage:        8 bytes
  1277 ;; Hardware stack levels used: 1
  1278 ;; Hardware stack levels required when called: 2
  1279 ;; This function calls:
  1280 ;;		___lldiv
  1281 ;; This function is called by:
  1282 ;;		_main
  1283 ;; This function uses a non-reentrant model
  1284 ;;
  1285                           
  1286  0000'                    _millis:	
  1287                           ;psect for function _millis
  1288                           
  1289                           
  1290                           ;Stroboscope.c: 233: INTCONbits.GIE = 0;
  1291                           
  1292                           ;incstack = 0
  1293                           ; Regs used in _millis: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1294  0000' 138B               	bcf	11,7	;volatile
  1295                           
  1296                           ;Stroboscope.c: 234: uint32_t result = millisCount/5;
  1297  0001' 3000               	movlw	0
  1298  0002' 0085'              	movwf	___lldiv@divisor+3
  1299  0003' 3000               	movlw	0
  1300  0004' 0084'              	movwf	___lldiv@divisor+2
  1301  0005' 3000               	movlw	0
  1302  0006' 0083'              	movwf	___lldiv@divisor+1
  1303  0007' 3005               	movlw	5
  1304  0008' 0082'              	movwf	___lldiv@divisor
  1305  0009' 1683               	bsf	3,5	;RP0=1, select bank1
  1306  000A' 0800'              	movf	(_millisCount+3)^(0+128),w	;volatile
  1307  000B' 0089'              	movwf	___lldiv@dividend+3
  1308  000C' 0800'              	movf	(_millisCount+2)^(0+128),w	;volatile
  1309  000D' 0088'              	movwf	___lldiv@dividend+2
  1310  000E' 0800'              	movf	(_millisCount+1)^(0+128),w	;volatile
  1311  000F' 0087'              	movwf	___lldiv@dividend+1
  1312  0010' 0800'              	movf	_millisCount^(0+128),w	;volatile
  1313  0011' 0086'              	movwf	___lldiv@dividend
  1314  0012' 2000'              	fcall	___lldiv
  1315  0013' 0805'              	movf	?___lldiv+3,w
  1316  0014' 008C'              	movwf	millis@result+3
  1317  0015' 0804'              	movf	?___lldiv+2,w
  1318  0016' 008B'              	movwf	millis@result+2
  1319  0017' 0803'              	movf	?___lldiv+1,w
  1320  0018' 008A'              	movwf	millis@result+1
  1321  0019' 0802'              	movf	?___lldiv,w
  1322  001A' 0089'              	movwf	millis@result
  1323                           
  1324                           ;Stroboscope.c: 235: INTCONbits.GIE = 1;
  1325  001B' 178B               	bsf	11,7	;volatile
  1326                           
  1327                           ;Stroboscope.c: 236: return result;
  1328  001C' 080C'              	movf	millis@result+3,w
  1329  001D' 0088'              	movwf	?_millis+3
  1330  001E' 080B'              	movf	millis@result+2,w
  1331  001F' 0087'              	movwf	?_millis+2
  1332  0020' 080A'              	movf	millis@result+1,w
  1333  0021' 0086'              	movwf	?_millis+1
  1334  0022' 0809'              	movf	millis@result,w
  1335  0023' 0085'              	movwf	?_millis
  1336  0024' 0008               	return
  1337  0025'                    __end_of_millis:
  1338                           
  1339                           	psect	text2
  1340  0000'                    __ptext2:	
  1341 ;; *************** function _micros *****************
  1342 ;; Defined at:
  1343 ;;		line 240 in file "Stroboscope.c"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;		None
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;  result          4   47[BANK0 ] unsigned long 
  1348 ;; Return value:  Size  Location     Type
  1349 ;;                  4   43[BANK0 ] unsigned long 
  1350 ;; Registers used:
  1351 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1352 ;; Tracked objects:
  1353 ;;		On entry : 100/0
  1354 ;;		On exit  : 100/0
  1355 ;;		Unchanged: 0/0
  1356 ;; Data sizes:     COMMON   BANK0   BANK1
  1357 ;;      Params:         0       4       0
  1358 ;;      Locals:         0       4       0
  1359 ;;      Temps:          0       0       0
  1360 ;;      Totals:         0       8       0
  1361 ;;Total ram usage:        8 bytes
  1362 ;; Hardware stack levels used: 1
  1363 ;; Hardware stack levels required when called: 3
  1364 ;; This function calls:
  1365 ;;		___awtoft
  1366 ;;		___ftadd
  1367 ;;		___ftmul
  1368 ;;		___fttol
  1369 ;;		___lltoft
  1370 ;;		___lmul
  1371 ;; This function is called by:
  1372 ;;		_main
  1373 ;; This function uses a non-reentrant model
  1374 ;;
  1375                           
  1376  0000'                    _micros:	
  1377                           ;psect for function _micros
  1378                           
  1379                           
  1380                           ;Stroboscope.c: 241: INTCONbits.GIE = 0;
  1381                           
  1382                           ;incstack = 0
  1383                           ; Regs used in _micros: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1384  0000' 138B               	bcf	11,7	;volatile
  1385                           
  1386                           ;Stroboscope.c: 245: uint32_t result = millisCount*200 + (TMR0-163)*2.17;
  1387  0001' 3000               	movlw	0
  1388  0002' 0089'              	movwf	___lmul@multiplicand+3
  1389  0003' 3000               	movlw	0
  1390  0004' 0088'              	movwf	___lmul@multiplicand+2
  1391  0005' 3000               	movlw	0
  1392  0006' 0087'              	movwf	___lmul@multiplicand+1
  1393  0007' 30C8               	movlw	200
  1394  0008' 0086'              	movwf	___lmul@multiplicand
  1395  0009' 1683               	bsf	3,5	;RP0=1, select bank1
  1396  000A' 0800'              	movf	(_millisCount+3)^(0+128),w	;volatile
  1397  000B' 0085'              	movwf	___lmul@multiplier+3
  1398  000C' 0800'              	movf	(_millisCount+2)^(0+128),w	;volatile
  1399  000D' 0084'              	movwf	___lmul@multiplier+2
  1400  000E' 0800'              	movf	(_millisCount+1)^(0+128),w	;volatile
  1401  000F' 0083'              	movwf	___lmul@multiplier+1
  1402  0010' 0800'              	movf	_millisCount^(0+128),w	;volatile
  1403  0011' 0082'              	movwf	___lmul@multiplier
  1404  0012' 2000'              	fcall	___lmul
  1405  0013' 0805'              	movf	?___lmul+3,w
  1406  0014' 0087'              	movwf	___lltoft@c+3
  1407  0015' 0804'              	movf	?___lmul+2,w
  1408  0016' 0086'              	movwf	___lltoft@c+2
  1409  0017' 0803'              	movf	?___lmul+1,w
  1410  0018' 0085'              	movwf	___lltoft@c+1
  1411  0019' 0802'              	movf	?___lmul,w
  1412  001A' 0084'              	movwf	___lltoft@c
  1413  001B' 2000'              	fcall	___lltoft
  1414  001C' 0804'              	movf	?___lltoft,w
  1415  001D' 0095'              	movwf	___ftadd@f2
  1416  001E' 0805'              	movf	?___lltoft+1,w
  1417  001F' 0096'              	movwf	___ftadd@f2+1
  1418  0020' 0806'              	movf	?___lltoft+2,w
  1419  0021' 0097'              	movwf	___ftadd@f2+2
  1420  0022' 0801               	movf	1,w	;volatile
  1421  0023' 3E5D               	addlw	93
  1422  0024' 0080'              	movwf	___awtoft@c
  1423  0025' 30FF               	movlw	255
  1424  0026' 1803               	skipnc
  1425  0027' 3000               	movlw	0
  1426  0028' 0081'              	movwf	___awtoft@c+1
  1427  0029' 2000'              	fcall	___awtoft
  1428  002A' 0800'              	movf	?___awtoft,w
  1429  002B' 0086'              	movwf	___ftmul@f2
  1430  002C' 0801'              	movf	?___awtoft+1,w
  1431  002D' 0087'              	movwf	___ftmul@f2+1
  1432  002E' 0802'              	movf	?___awtoft+2,w
  1433  002F' 0088'              	movwf	___ftmul@f2+2
  1434  0030' 30E1               	movlw	225
  1435  0031' 0083'              	movwf	___ftmul@f1
  1436  0032' 300A               	movlw	10
  1437  0033' 0084'              	movwf	___ftmul@f1+1
  1438  0034' 3040               	movlw	64
  1439  0035' 0085'              	movwf	___ftmul@f1+2
  1440  0036' 2000'              	fcall	___ftmul
  1441  0037' 0803'              	movf	?___ftmul,w
  1442  0038' 0092'              	movwf	___ftadd@f1
  1443  0039' 0804'              	movf	?___ftmul+1,w
  1444  003A' 0093'              	movwf	___ftadd@f1+1
  1445  003B' 0805'              	movf	?___ftmul+2,w
  1446  003C' 0094'              	movwf	___ftadd@f1+2
  1447  003D' 2000'              	fcall	___ftadd
  1448  003E' 0812'              	movf	?___ftadd,w
  1449  003F' 009E'              	movwf	___fttol@f1
  1450  0040' 0813'              	movf	?___ftadd+1,w
  1451  0041' 009F'              	movwf	___fttol@f1+1
  1452  0042' 0814'              	movf	?___ftadd+2,w
  1453  0043' 00A0'              	movwf	___fttol@f1+2
  1454  0044' 2000'              	fcall	___fttol
  1455  0045' 0821'              	movf	?___fttol+3,w
  1456  0046' 00B2'              	movwf	micros@result+3
  1457  0047' 0820'              	movf	?___fttol+2,w
  1458  0048' 00B1'              	movwf	micros@result+2
  1459  0049' 081F'              	movf	?___fttol+1,w
  1460  004A' 00B0'              	movwf	micros@result+1
  1461  004B' 081E'              	movf	?___fttol,w
  1462  004C' 00AF'              	movwf	micros@result
  1463                           
  1464                           ;Stroboscope.c: 246: INTCONbits.GIE = 1;
  1465  004D' 178B               	bsf	11,7	;volatile
  1466                           
  1467                           ;Stroboscope.c: 247: return result;
  1468  004E' 0832'              	movf	micros@result+3,w
  1469  004F' 00AE'              	movwf	?_micros+3
  1470  0050' 0831'              	movf	micros@result+2,w
  1471  0051' 00AD'              	movwf	?_micros+2
  1472  0052' 0830'              	movf	micros@result+1,w
  1473  0053' 00AC'              	movwf	?_micros+1
  1474  0054' 082F'              	movf	micros@result,w
  1475  0055' 00AB'              	movwf	?_micros
  1476  0056' 0008               	return
  1477  0057'                    __end_of_micros:
  1478                           
  1479                           	psect	text3
  1480  0000'                    __ptext3:	
  1481 ;; *************** function ___lmul *****************
  1482 ;; Defined at:
  1483 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul32.c"
  1484 ;; Parameters:    Size  Location     Type
  1485 ;;  multiplier      4    2[COMMON] unsigned long 
  1486 ;;  multiplicand    4    6[COMMON] unsigned long 
  1487 ;; Auto vars:     Size  Location     Type
  1488 ;;  product         4    0[BANK0 ] unsigned long 
  1489 ;; Return value:  Size  Location     Type
  1490 ;;                  4    2[COMMON] unsigned long 
  1491 ;; Registers used:
  1492 ;;		wreg, status,2, status,0
  1493 ;; Tracked objects:
  1494 ;;		On entry : 100/100
  1495 ;;		On exit  : 100/0
  1496 ;;		Unchanged: 0/0
  1497 ;; Data sizes:     COMMON   BANK0   BANK1
  1498 ;;      Params:         8       0       0
  1499 ;;      Locals:         0       4       0
  1500 ;;      Temps:          1       0       0
  1501 ;;      Totals:         9       4       0
  1502 ;;Total ram usage:       13 bytes
  1503 ;; Hardware stack levels used: 1
  1504 ;; Hardware stack levels required when called: 1
  1505 ;; This function calls:
  1506 ;;		Nothing
  1507 ;; This function is called by:
  1508 ;;		_micros
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512  0000'                    ___lmul:	
  1513                           ;psect for function ___lmul
  1514                           
  1515                           
  1516                           ;incstack = 0
  1517                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1518  0000' 3000               	movlw	0
  1519  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  1520  0002' 0083'              	movwf	___lmul@product+3
  1521  0003' 3000               	movlw	0
  1522  0004' 0082'              	movwf	___lmul@product+2
  1523  0005' 3000               	movlw	0
  1524  0006' 0081'              	movwf	___lmul@product+1
  1525  0007' 3000               	movlw	0
  1526  0008' 0080'              	movwf	___lmul@product
  1527  0009'                    l1218:
  1528  0009' 1C02'              	btfss	___lmul@multiplier,0
  1529  000A' 2820'              	goto	l1222
  1530  000B' 0806'              	movf	___lmul@multiplicand,w
  1531  000C' 1283               	bcf	3,5	;RP0=0, select bank0
  1532  000D' 0780'              	addwf	___lmul@product,f
  1533  000E' 0807'              	movf	___lmul@multiplicand+1,w
  1534  000F' 1103               	clrz
  1535  0010' 1803               	skipnc
  1536  0011' 3E01               	addlw	1
  1537  0012' 1D03               	btfss	3,2
  1538  0013' 0781'              	addwf	___lmul@product+1,f
  1539  0014' 0808'              	movf	___lmul@multiplicand+2,w
  1540  0015' 1103               	clrz
  1541  0016' 1803               	skipnc
  1542  0017' 3E01               	addlw	1
  1543  0018' 1D03               	btfss	3,2
  1544  0019' 0782'              	addwf	___lmul@product+2,f
  1545  001A' 0809'              	movf	___lmul@multiplicand+3,w
  1546  001B' 1103               	clrz
  1547  001C' 1803               	skipnc
  1548  001D' 3E01               	addlw	1
  1549  001E' 1D03               	btfss	3,2
  1550  001F' 0783'              	addwf	___lmul@product+3,f
  1551  0020'                    l1222:
  1552  0020' 3001               	movlw	1
  1553  0021' 008A'              	movwf	??___lmul
  1554  0022'                    u1455:
  1555  0022' 1003               	clrc
  1556  0023' 0D86'              	rlf	___lmul@multiplicand,f
  1557  0024' 0D87'              	rlf	___lmul@multiplicand+1,f
  1558  0025' 0D88'              	rlf	___lmul@multiplicand+2,f
  1559  0026' 0D89'              	rlf	___lmul@multiplicand+3,f
  1560  0027' 0B8A'              	decfsz	??___lmul,f
  1561  0028' 2822'              	goto	u1455
  1562  0029' 3001               	movlw	1
  1563  002A'                    u1465:
  1564  002A' 1003               	clrc
  1565  002B' 0C85'              	rrf	___lmul@multiplier+3,f
  1566  002C' 0C84'              	rrf	___lmul@multiplier+2,f
  1567  002D' 0C83'              	rrf	___lmul@multiplier+1,f
  1568  002E' 0C82'              	rrf	___lmul@multiplier,f
  1569  002F' 3EFF               	addlw	-1
  1570  0030' 1D03               	skipz
  1571  0031' 282A'              	goto	u1465
  1572  0032' 0805'              	movf	___lmul@multiplier+3,w
  1573  0033' 0404'              	iorwf	___lmul@multiplier+2,w
  1574  0034' 0403'              	iorwf	___lmul@multiplier+1,w
  1575  0035' 0402'              	iorwf	___lmul@multiplier,w
  1576  0036' 1D03               	skipz
  1577  0037' 2809'              	goto	l1218
  1578  0038' 1283               	bcf	3,5	;RP0=0, select bank0
  1579  0039' 0803'              	movf	___lmul@product+3,w
  1580  003A' 0085'              	movwf	?___lmul+3
  1581  003B' 0802'              	movf	___lmul@product+2,w
  1582  003C' 0084'              	movwf	?___lmul+2
  1583  003D' 0801'              	movf	___lmul@product+1,w
  1584  003E' 0083'              	movwf	?___lmul+1
  1585  003F' 0800'              	movf	___lmul@product,w
  1586  0040' 0082'              	movwf	?___lmul
  1587  0041' 0008               	return
  1588  0042'                    __end_of___lmul:
  1589                           
  1590                           	psect	text4
  1591  0000'                    __ptext4:	
  1592 ;; *************** function ___lltoft *****************
  1593 ;; Defined at:
  1594 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lltoft.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;  c               4    4[BANK0 ] unsigned long 
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;  exp             1    8[BANK0 ] unsigned char 
  1599 ;; Return value:  Size  Location     Type
  1600 ;;                  3    4[BANK0 ] float 
  1601 ;; Registers used:
  1602 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1603 ;; Tracked objects:
  1604 ;;		On entry : 100/0
  1605 ;;		On exit  : 100/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMMON   BANK0   BANK1
  1608 ;;      Params:         0       4       0
  1609 ;;      Locals:         0       1       0
  1610 ;;      Temps:          0       0       0
  1611 ;;      Totals:         0       5       0
  1612 ;;Total ram usage:        5 bytes
  1613 ;; Hardware stack levels used: 1
  1614 ;; Hardware stack levels required when called: 2
  1615 ;; This function calls:
  1616 ;;		___ftpack
  1617 ;; This function is called by:
  1618 ;;		_main
  1619 ;;		_micros
  1620 ;; This function uses a non-reentrant model
  1621 ;;
  1622                           
  1623  0000'                    ___lltoft:	
  1624                           ;psect for function ___lltoft
  1625                           
  1626                           
  1627                           ;incstack = 0
  1628                           ; Regs used in ___lltoft: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1629  0000' 308E               	movlw	142
  1630  0001' 0088'              	movwf	___lltoft@exp
  1631  0002'                    l1928:
  1632  0002' 30FF               	movlw	255
  1633  0003' 0507'              	andwf	___lltoft@c+3,w
  1634  0004' 1903               	btfsc	3,2
  1635  0005' 2814'              	goto	l1930
  1636  0006' 3001               	movlw	1
  1637  0007'                    u3045:
  1638  0007' 1003               	clrc
  1639  0008' 0C87'              	rrf	___lltoft@c+3,f
  1640  0009' 0C86'              	rrf	___lltoft@c+2,f
  1641  000A' 0C85'              	rrf	___lltoft@c+1,f
  1642  000B' 0C84'              	rrf	___lltoft@c,f
  1643  000C' 3EFF               	addlw	-1
  1644  000D' 1D03               	skipz
  1645  000E' 2807'              	goto	u3045
  1646  000F' 3001               	movlw	1
  1647  0010' 00FF               	movwf	127
  1648  0011' 087F               	movf	127,w
  1649  0012' 0788'              	addwf	___lltoft@exp,f
  1650  0013' 2802'              	goto	l1928
  1651  0014'                    l1930:
  1652  0014' 0804'              	movf	___lltoft@c,w
  1653  0015' 0082'              	movwf	___ftpack@arg
  1654  0016' 0805'              	movf	___lltoft@c+1,w
  1655  0017' 0083'              	movwf	___ftpack@arg+1
  1656  0018' 0806'              	movf	___lltoft@c+2,w
  1657  0019' 0084'              	movwf	___ftpack@arg+2
  1658  001A' 0808'              	movf	___lltoft@exp,w
  1659  001B' 0085'              	movwf	___ftpack@exp
  1660  001C' 0186'              	clrf	___ftpack@sign
  1661  001D' 2000'              	fcall	___ftpack
  1662  001E' 0802'              	movf	?___ftpack,w
  1663  001F' 0084'              	movwf	?___lltoft
  1664  0020' 0803'              	movf	?___ftpack+1,w
  1665  0021' 0085'              	movwf	?___lltoft+1
  1666  0022' 0804'              	movf	?___ftpack+2,w
  1667  0023' 0086'              	movwf	?___lltoft+2
  1668  0024' 0008               	return
  1669  0025'                    __end_of___lltoft:
  1670                           
  1671                           	psect	text5
  1672  0000'                    __ptext5:	
  1673 ;; *************** function ___fttol *****************
  1674 ;; Defined at:
  1675 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fttol.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;  f1              3   30[BANK0 ] float 
  1678 ;; Auto vars:     Size  Location     Type
  1679 ;;  lval            4   38[BANK0 ] unsigned long 
  1680 ;;  exp1            1   42[BANK0 ] unsigned char 
  1681 ;;  sign1           1   37[BANK0 ] unsigned char 
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  4   30[BANK0 ] long 
  1684 ;; Registers used:
  1685 ;;		wreg, status,2, status,0, btemp+1
  1686 ;; Tracked objects:
  1687 ;;		On entry : 100/0
  1688 ;;		On exit  : 100/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMMON   BANK0   BANK1
  1691 ;;      Params:         0       4       0
  1692 ;;      Locals:         0       6       0
  1693 ;;      Temps:          0       3       0
  1694 ;;      Totals:         0      13       0
  1695 ;;Total ram usage:       13 bytes
  1696 ;; Hardware stack levels used: 1
  1697 ;; Hardware stack levels required when called: 1
  1698 ;; This function calls:
  1699 ;;		Nothing
  1700 ;; This function is called by:
  1701 ;;		_micros
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705  0000'                    ___fttol:	
  1706                           ;psect for function ___fttol
  1707                           
  1708                           
  1709                           ;incstack = 0
  1710                           ; Regs used in ___fttol: [wreg+status,2+status,0+btemp+1]
  1711  0000' 081E'              	movf	___fttol@f1,w
  1712  0001' 00A2'              	movwf	??___fttol
  1713  0002' 081F'              	movf	___fttol@f1+1,w
  1714  0003' 00A3'              	movwf	??___fttol+1
  1715  0004' 0820'              	movf	___fttol@f1+2,w
  1716  0005' 00A4'              	movwf	??___fttol+2
  1717  0006' 1003               	clrc
  1718  0007' 0D23'              	rlf	??___fttol+1,w
  1719  0008' 0D24'              	rlf	??___fttol+2,w
  1720  0009' 00AA'              	movwf	___fttol@exp1
  1721  000A' 082A'              	movf	___fttol@exp1,w
  1722  000B' 1D03               	btfss	3,2
  1723  000C' 2816'              	goto	l1404
  1724  000D'                    l1400:
  1725  000D' 3000               	movlw	0
  1726  000E' 00A1'              	movwf	?___fttol+3
  1727  000F' 3000               	movlw	0
  1728  0010' 00A0'              	movwf	?___fttol+2
  1729  0011' 3000               	movlw	0
  1730  0012' 009F'              	movwf	?___fttol+1
  1731  0013' 3000               	movlw	0
  1732  0014' 009E'              	movwf	?___fttol
  1733  0015' 0008               	return
  1734  0016'                    l1404:
  1735  0016' 081E'              	movf	___fttol@f1,w
  1736  0017' 00A2'              	movwf	??___fttol
  1737  0018' 081F'              	movf	___fttol@f1+1,w
  1738  0019' 00A3'              	movwf	??___fttol+1
  1739  001A' 0820'              	movf	___fttol@f1+2,w
  1740  001B' 00A4'              	movwf	??___fttol+2
  1741  001C' 3017               	movlw	23
  1742  001D'                    u1935:
  1743  001D' 1003               	clrc
  1744  001E' 0CA4'              	rrf	??___fttol+2,f
  1745  001F' 0CA3'              	rrf	??___fttol+1,f
  1746  0020' 0CA2'              	rrf	??___fttol,f
  1747  0021' 3EFF               	addlw	-1
  1748  0022' 1D03               	skipz
  1749  0023' 281D'              	goto	u1935
  1750  0024' 0822'              	movf	??___fttol,w
  1751  0025' 00A5'              	movwf	___fttol@sign1
  1752  0026' 179F'              	bsf	___fttol@f1+1,7
  1753  0027' 30FF               	movlw	255
  1754  0028' 059E'              	andwf	___fttol@f1,f
  1755  0029' 30FF               	movlw	255
  1756  002A' 059F'              	andwf	___fttol@f1+1,f
  1757  002B' 3000               	movlw	0
  1758  002C' 05A0'              	andwf	___fttol@f1+2,f
  1759  002D' 081E'              	movf	___fttol@f1,w
  1760  002E' 00A6'              	movwf	___fttol@lval
  1761  002F' 081F'              	movf	___fttol@f1+1,w
  1762  0030' 00A7'              	movwf	___fttol@lval+1
  1763  0031' 0820'              	movf	___fttol@f1+2,w
  1764  0032' 00A8'              	movwf	___fttol@lval+2
  1765  0033' 01A9'              	clrf	___fttol@lval+3
  1766  0034' 308E               	movlw	142
  1767  0035' 02AA'              	subwf	___fttol@exp1,f
  1768  0036' 1FAA'              	btfss	___fttol@exp1,7
  1769  0037' 284D'              	goto	l1426
  1770  0038' 082A'              	movf	___fttol@exp1,w
  1771  0039' 3A80               	xorlw	128
  1772  003A' 3E8F               	addlw	143
  1773  003B' 1C03               	btfss	3,0
  1774  003C' 280D'              	goto	l1400
  1775  003D'                    l1422:
  1776  003D' 3001               	movlw	1
  1777  003E'                    u1965:
  1778  003E' 1003               	clrc
  1779  003F' 0CA9'              	rrf	___fttol@lval+3,f
  1780  0040' 0CA8'              	rrf	___fttol@lval+2,f
  1781  0041' 0CA7'              	rrf	___fttol@lval+1,f
  1782  0042' 0CA6'              	rrf	___fttol@lval,f
  1783  0043' 3EFF               	addlw	-1
  1784  0044' 1D03               	skipz
  1785  0045' 283E'              	goto	u1965
  1786  0046' 3001               	movlw	1
  1787  0047' 00FF               	movwf	127
  1788  0048' 087F               	movf	127,w
  1789  0049' 07AA'              	addwf	___fttol@exp1,f
  1790  004A' 1903               	btfsc	3,2
  1791  004B' 2860'              	goto	l1434
  1792  004C' 283D'              	goto	l1422
  1793  004D'                    l1426:
  1794  004D' 3018               	movlw	24
  1795  004E' 022A'              	subwf	___fttol@exp1,w
  1796  004F' 1803               	btfsc	3,0
  1797  0050' 280D'              	goto	l1400
  1798  0051'                    l420:
  1799  0051' 082A'              	movf	___fttol@exp1,w
  1800  0052' 1903               	btfsc	3,2
  1801  0053' 2860'              	goto	l1434
  1802  0054' 3001               	movlw	1
  1803  0055' 00A2'              	movwf	??___fttol
  1804  0056'                    u1995:
  1805  0056' 1003               	clrc
  1806  0057' 0DA6'              	rlf	___fttol@lval,f
  1807  0058' 0DA7'              	rlf	___fttol@lval+1,f
  1808  0059' 0DA8'              	rlf	___fttol@lval+2,f
  1809  005A' 0DA9'              	rlf	___fttol@lval+3,f
  1810  005B' 0BA2'              	decfsz	??___fttol,f
  1811  005C' 2856'              	goto	u1995
  1812  005D' 3001               	movlw	1
  1813  005E' 02AA'              	subwf	___fttol@exp1,f
  1814  005F' 2851'              	goto	l420
  1815  0060'                    l1434:
  1816  0060' 0825'              	movf	___fttol@sign1,w
  1817  0061' 1903               	btfsc	3,2
  1818  0062' 286E'              	goto	l1438
  1819  0063' 09A6'              	comf	___fttol@lval,f
  1820  0064' 09A7'              	comf	___fttol@lval+1,f
  1821  0065' 09A8'              	comf	___fttol@lval+2,f
  1822  0066' 09A9'              	comf	___fttol@lval+3,f
  1823  0067' 0AA6'              	incf	___fttol@lval,f
  1824  0068' 1903               	skipnz
  1825  0069' 0AA7'              	incf	___fttol@lval+1,f
  1826  006A' 1903               	skipnz
  1827  006B' 0AA8'              	incf	___fttol@lval+2,f
  1828  006C' 1903               	skipnz
  1829  006D' 0AA9'              	incf	___fttol@lval+3,f
  1830  006E'                    l1438:
  1831  006E' 0829'              	movf	___fttol@lval+3,w
  1832  006F' 00A1'              	movwf	?___fttol+3
  1833  0070' 0828'              	movf	___fttol@lval+2,w
  1834  0071' 00A0'              	movwf	?___fttol+2
  1835  0072' 0827'              	movf	___fttol@lval+1,w
  1836  0073' 009F'              	movwf	?___fttol+1
  1837  0074' 0826'              	movf	___fttol@lval,w
  1838  0075' 009E'              	movwf	?___fttol
  1839  0076' 0008               	return
  1840  0077'                    __end_of___fttol:
  1841                           
  1842                           	psect	text6
  1843  0000'                    __ptext6:	
  1844 ;; *************** function ___ftmul *****************
  1845 ;; Defined at:
  1846 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftmul.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;  f1              3    3[BANK0 ] float 
  1849 ;;  f2              3    6[BANK0 ] float 
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;  f3_as_produc    3   13[BANK0 ] unsigned um
  1852 ;;  sign            1   17[BANK0 ] unsigned char 
  1853 ;;  cntr            1   16[BANK0 ] unsigned char 
  1854 ;;  exp             1   12[BANK0 ] unsigned char 
  1855 ;; Return value:  Size  Location     Type
  1856 ;;                  3    3[BANK0 ] float 
  1857 ;; Registers used:
  1858 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1859 ;; Tracked objects:
  1860 ;;		On entry : 100/0
  1861 ;;		On exit  : 100/0
  1862 ;;		Unchanged: 0/0
  1863 ;; Data sizes:     COMMON   BANK0   BANK1
  1864 ;;      Params:         0       6       0
  1865 ;;      Locals:         0       6       0
  1866 ;;      Temps:          0       3       0
  1867 ;;      Totals:         0      15       0
  1868 ;;Total ram usage:       15 bytes
  1869 ;; Hardware stack levels used: 1
  1870 ;; Hardware stack levels required when called: 2
  1871 ;; This function calls:
  1872 ;;		___ftpack
  1873 ;; This function is called by:
  1874 ;;		_main
  1875 ;;		_micros
  1876 ;; This function uses a non-reentrant model
  1877 ;;
  1878                           
  1879  0000'                    ___ftmul:	
  1880                           ;psect for function ___ftmul
  1881                           
  1882                           
  1883                           ;incstack = 0
  1884                           ; Regs used in ___ftmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1885  0000' 0803'              	movf	___ftmul@f1,w
  1886  0001' 0089'              	movwf	??___ftmul
  1887  0002' 0804'              	movf	___ftmul@f1+1,w
  1888  0003' 008A'              	movwf	??___ftmul+1
  1889  0004' 0805'              	movf	___ftmul@f1+2,w
  1890  0005' 008B'              	movwf	??___ftmul+2
  1891  0006' 1003               	clrc
  1892  0007' 0D0A'              	rlf	??___ftmul+1,w
  1893  0008' 0D0B'              	rlf	??___ftmul+2,w
  1894  0009' 008C'              	movwf	___ftmul@exp
  1895  000A' 080C'              	movf	___ftmul@exp,w
  1896  000B' 1D03               	btfss	3,2
  1897  000C' 2814'              	goto	l1850
  1898  000D' 3000               	movlw	0
  1899  000E' 0083'              	movwf	?___ftmul
  1900  000F' 3000               	movlw	0
  1901  0010' 0084'              	movwf	?___ftmul+1
  1902  0011' 3000               	movlw	0
  1903  0012' 0085'              	movwf	?___ftmul+2
  1904  0013' 0008               	return
  1905  0014'                    l1850:
  1906  0014' 0806'              	movf	___ftmul@f2,w
  1907  0015' 0089'              	movwf	??___ftmul
  1908  0016' 0807'              	movf	___ftmul@f2+1,w
  1909  0017' 008A'              	movwf	??___ftmul+1
  1910  0018' 0808'              	movf	___ftmul@f2+2,w
  1911  0019' 008B'              	movwf	??___ftmul+2
  1912  001A' 1003               	clrc
  1913  001B' 0D0A'              	rlf	??___ftmul+1,w
  1914  001C' 0D0B'              	rlf	??___ftmul+2,w
  1915  001D' 0091'              	movwf	___ftmul@sign
  1916  001E' 0811'              	movf	___ftmul@sign,w
  1917  001F' 1D03               	btfss	3,2
  1918  0020' 2828'              	goto	l1856
  1919  0021' 3000               	movlw	0
  1920  0022' 0083'              	movwf	?___ftmul
  1921  0023' 3000               	movlw	0
  1922  0024' 0084'              	movwf	?___ftmul+1
  1923  0025' 3000               	movlw	0
  1924  0026' 0085'              	movwf	?___ftmul+2
  1925  0027' 0008               	return
  1926  0028'                    l1856:
  1927  0028' 0811'              	movf	___ftmul@sign,w
  1928  0029' 3E7B               	addlw	123
  1929  002A' 00FF               	movwf	127
  1930  002B' 087F               	movf	127,w
  1931  002C' 078C'              	addwf	___ftmul@exp,f
  1932  002D' 0805'              	movf	___ftmul@f1+2,w
  1933  002E' 0091'              	movwf	___ftmul@sign
  1934  002F' 0808'              	movf	___ftmul@f2+2,w
  1935  0030' 00FF               	movwf	127
  1936  0031' 087F               	movf	127,w
  1937  0032' 0691'              	xorwf	___ftmul@sign,f
  1938  0033' 3080               	movlw	128
  1939  0034' 00FF               	movwf	127
  1940  0035' 087F               	movf	127,w
  1941  0036' 0591'              	andwf	___ftmul@sign,f
  1942  0037' 1784'              	bsf	___ftmul@f1+1,7
  1943  0038' 1787'              	bsf	___ftmul@f2+1,7
  1944  0039' 30FF               	movlw	255
  1945  003A' 0586'              	andwf	___ftmul@f2,f
  1946  003B' 30FF               	movlw	255
  1947  003C' 0587'              	andwf	___ftmul@f2+1,f
  1948  003D' 3000               	movlw	0
  1949  003E' 0588'              	andwf	___ftmul@f2+2,f
  1950  003F' 3000               	movlw	0
  1951  0040' 008D'              	movwf	___ftmul@f3_as_product
  1952  0041' 3000               	movlw	0
  1953  0042' 008E'              	movwf	___ftmul@f3_as_product+1
  1954  0043' 3000               	movlw	0
  1955  0044' 008F'              	movwf	___ftmul@f3_as_product+2
  1956  0045' 3007               	movlw	7
  1957  0046' 0090'              	movwf	___ftmul@cntr
  1958  0047'                    l1874:
  1959  0047' 1C03'              	btfss	___ftmul@f1,0
  1960  0048' 2857'              	goto	l1878
  1961  0049' 0806'              	movf	___ftmul@f2,w
  1962  004A' 078D'              	addwf	___ftmul@f3_as_product,f
  1963  004B' 0807'              	movf	___ftmul@f2+1,w
  1964  004C' 1103               	clrz
  1965  004D' 1803               	skipnc
  1966  004E' 0A07'              	incf	___ftmul@f2+1,w
  1967  004F' 1D03               	btfss	3,2
  1968  0050' 078E'              	addwf	___ftmul@f3_as_product+1,f
  1969  0051' 0808'              	movf	___ftmul@f2+2,w
  1970  0052' 1103               	clrz
  1971  0053' 1803               	skipnc
  1972  0054' 0A08'              	incf	___ftmul@f2+2,w
  1973  0055' 1D03               	btfss	3,2
  1974  0056' 078F'              	addwf	___ftmul@f3_as_product+2,f
  1975  0057'                    l1878:
  1976  0057' 3001               	movlw	1
  1977  0058'                    u2905:
  1978  0058' 1003               	clrc
  1979  0059' 0C85'              	rrf	___ftmul@f1+2,f
  1980  005A' 0C84'              	rrf	___ftmul@f1+1,f
  1981  005B' 0C83'              	rrf	___ftmul@f1,f
  1982  005C' 3EFF               	addlw	-1
  1983  005D' 1D03               	skipz
  1984  005E' 2858'              	goto	u2905
  1985  005F' 3001               	movlw	1
  1986  0060'                    u2915:
  1987  0060' 1003               	clrc
  1988  0061' 0D86'              	rlf	___ftmul@f2,f
  1989  0062' 0D87'              	rlf	___ftmul@f2+1,f
  1990  0063' 0D88'              	rlf	___ftmul@f2+2,f
  1991  0064' 3EFF               	addlw	-1
  1992  0065' 1D03               	skipz
  1993  0066' 2860'              	goto	u2915
  1994  0067' 3001               	movlw	1
  1995  0068' 0290'              	subwf	___ftmul@cntr,f
  1996  0069' 1D03               	btfss	3,2
  1997  006A' 2847'              	goto	l1874
  1998  006B' 3009               	movlw	9
  1999  006C' 0090'              	movwf	___ftmul@cntr
  2000  006D'                    l1886:
  2001  006D' 1C03'              	btfss	___ftmul@f1,0
  2002  006E' 287D'              	goto	l1890
  2003  006F' 0806'              	movf	___ftmul@f2,w
  2004  0070' 078D'              	addwf	___ftmul@f3_as_product,f
  2005  0071' 0807'              	movf	___ftmul@f2+1,w
  2006  0072' 1103               	clrz
  2007  0073' 1803               	skipnc
  2008  0074' 0A07'              	incf	___ftmul@f2+1,w
  2009  0075' 1D03               	btfss	3,2
  2010  0076' 078E'              	addwf	___ftmul@f3_as_product+1,f
  2011  0077' 0808'              	movf	___ftmul@f2+2,w
  2012  0078' 1103               	clrz
  2013  0079' 1803               	skipnc
  2014  007A' 0A08'              	incf	___ftmul@f2+2,w
  2015  007B' 1D03               	btfss	3,2
  2016  007C' 078F'              	addwf	___ftmul@f3_as_product+2,f
  2017  007D'                    l1890:
  2018  007D' 3001               	movlw	1
  2019  007E'                    u2955:
  2020  007E' 1003               	clrc
  2021  007F' 0C85'              	rrf	___ftmul@f1+2,f
  2022  0080' 0C84'              	rrf	___ftmul@f1+1,f
  2023  0081' 0C83'              	rrf	___ftmul@f1,f
  2024  0082' 3EFF               	addlw	-1
  2025  0083' 1D03               	skipz
  2026  0084' 287E'              	goto	u2955
  2027  0085' 3001               	movlw	1
  2028  0086'                    u2965:
  2029  0086' 1003               	clrc
  2030  0087' 0C8F'              	rrf	___ftmul@f3_as_product+2,f
  2031  0088' 0C8E'              	rrf	___ftmul@f3_as_product+1,f
  2032  0089' 0C8D'              	rrf	___ftmul@f3_as_product,f
  2033  008A' 3EFF               	addlw	-1
  2034  008B' 1D03               	skipz
  2035  008C' 2886'              	goto	u2965
  2036  008D' 3001               	movlw	1
  2037  008E' 0290'              	subwf	___ftmul@cntr,f
  2038  008F' 1D03               	btfss	3,2
  2039  0090' 286D'              	goto	l1886
  2040  0091' 080D'              	movf	___ftmul@f3_as_product,w
  2041  0092' 0082'              	movwf	___ftpack@arg
  2042  0093' 080E'              	movf	___ftmul@f3_as_product+1,w
  2043  0094' 0083'              	movwf	___ftpack@arg+1
  2044  0095' 080F'              	movf	___ftmul@f3_as_product+2,w
  2045  0096' 0084'              	movwf	___ftpack@arg+2
  2046  0097' 080C'              	movf	___ftmul@exp,w
  2047  0098' 0085'              	movwf	___ftpack@exp
  2048  0099' 0811'              	movf	___ftmul@sign,w
  2049  009A' 0086'              	movwf	___ftpack@sign
  2050  009B' 2000'              	fcall	___ftpack
  2051  009C' 0802'              	movf	?___ftpack,w
  2052  009D' 0083'              	movwf	?___ftmul
  2053  009E' 0803'              	movf	?___ftpack+1,w
  2054  009F' 0084'              	movwf	?___ftmul+1
  2055  00A0' 0804'              	movf	?___ftpack+2,w
  2056  00A1' 0085'              	movwf	?___ftmul+2
  2057  00A2' 0008               	return
  2058  00A3'                    __end_of___ftmul:
  2059                           
  2060                           	psect	text7
  2061  0000'                    __ptext7:	
  2062 ;; *************** function ___ftadd *****************
  2063 ;; Defined at:
  2064 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftadd.c"
  2065 ;; Parameters:    Size  Location     Type
  2066 ;;  f1              3   18[BANK0 ] float 
  2067 ;;  f2              3   21[BANK0 ] float 
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;  exp1            1   29[BANK0 ] unsigned char 
  2070 ;;  exp2            1   28[BANK0 ] unsigned char 
  2071 ;;  sign            1   27[BANK0 ] unsigned char 
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  3   18[BANK0 ] float 
  2074 ;; Registers used:
  2075 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2076 ;; Tracked objects:
  2077 ;;		On entry : 100/0
  2078 ;;		On exit  : 100/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMMON   BANK0   BANK1
  2081 ;;      Params:         0       6       0
  2082 ;;      Locals:         0       3       0
  2083 ;;      Temps:          0       3       0
  2084 ;;      Totals:         0      12       0
  2085 ;;Total ram usage:       12 bytes
  2086 ;; Hardware stack levels used: 1
  2087 ;; Hardware stack levels required when called: 2
  2088 ;; This function calls:
  2089 ;;		___ftpack
  2090 ;; This function is called by:
  2091 ;;		_micros
  2092 ;; This function uses a non-reentrant model
  2093 ;;
  2094                           
  2095  0000'                    ___ftadd:	
  2096                           ;psect for function ___ftadd
  2097                           
  2098                           
  2099                           ;incstack = 0
  2100                           ; Regs used in ___ftadd: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2101  0000' 0812'              	movf	___ftadd@f1,w
  2102  0001' 0098'              	movwf	??___ftadd
  2103  0002' 0813'              	movf	___ftadd@f1+1,w
  2104  0003' 0099'              	movwf	??___ftadd+1
  2105  0004' 0814'              	movf	___ftadd@f1+2,w
  2106  0005' 009A'              	movwf	??___ftadd+2
  2107  0006' 1003               	clrc
  2108  0007' 0D19'              	rlf	??___ftadd+1,w
  2109  0008' 0D1A'              	rlf	??___ftadd+2,w
  2110  0009' 009D'              	movwf	___ftadd@exp1
  2111  000A' 0815'              	movf	___ftadd@f2,w
  2112  000B' 0098'              	movwf	??___ftadd
  2113  000C' 0816'              	movf	___ftadd@f2+1,w
  2114  000D' 0099'              	movwf	??___ftadd+1
  2115  000E' 0817'              	movf	___ftadd@f2+2,w
  2116  000F' 009A'              	movwf	??___ftadd+2
  2117  0010' 1003               	clrc
  2118  0011' 0D19'              	rlf	??___ftadd+1,w
  2119  0012' 0D1A'              	rlf	??___ftadd+2,w
  2120  0013' 009C'              	movwf	___ftadd@exp2
  2121  0014' 081D'              	movf	___ftadd@exp1,w
  2122  0015' 1903               	btfsc	3,2
  2123  0016' 2823'              	goto	l1776
  2124  0017' 081C'              	movf	___ftadd@exp2,w
  2125  0018' 021D'              	subwf	___ftadd@exp1,w
  2126  0019' 1803               	skipnc
  2127  001A' 282A'              	goto	l1780
  2128  001B' 081C'              	movf	___ftadd@exp2,w
  2129  001C' 0098'              	movwf	??___ftadd
  2130  001D' 081D'              	movf	___ftadd@exp1,w
  2131  001E' 0298'              	subwf	??___ftadd,f
  2132  001F' 3019               	movlw	25
  2133  0020' 0218'              	subwf	??___ftadd,w
  2134  0021' 1C03               	skipc
  2135  0022' 282A'              	goto	l1780
  2136  0023'                    l1776:
  2137  0023' 0815'              	movf	___ftadd@f2,w
  2138  0024' 0092'              	movwf	?___ftadd
  2139  0025' 0816'              	movf	___ftadd@f2+1,w
  2140  0026' 0093'              	movwf	?___ftadd+1
  2141  0027' 0817'              	movf	___ftadd@f2+2,w
  2142  0028' 0094'              	movwf	?___ftadd+2
  2143  0029' 0008               	return
  2144  002A'                    l1780:
  2145  002A' 081C'              	movf	___ftadd@exp2,w
  2146  002B' 1903               	btfsc	3,2
  2147  002C' 0008               	return
  2148  002D' 081D'              	movf	___ftadd@exp1,w
  2149  002E' 021C'              	subwf	___ftadd@exp2,w
  2150  002F' 1803               	skipnc
  2151  0030' 2839'              	goto	l1786
  2152  0031' 081D'              	movf	___ftadd@exp1,w
  2153  0032' 0098'              	movwf	??___ftadd
  2154  0033' 081C'              	movf	___ftadd@exp2,w
  2155  0034' 0298'              	subwf	??___ftadd,f
  2156  0035' 3019               	movlw	25
  2157  0036' 0218'              	subwf	??___ftadd,w
  2158  0037' 1803               	btfsc	3,0
  2159  0038' 0008               	return
  2160  0039'                    l1786:
  2161  0039' 3006               	movlw	6
  2162  003A' 009B'              	movwf	___ftadd@sign
  2163  003B' 1B94'              	btfsc	___ftadd@f1+2,7
  2164  003C' 179B'              	bsf	___ftadd@sign,7
  2165  003D' 1B97'              	btfsc	___ftadd@f2+2,7
  2166  003E' 171B'              	bsf	___ftadd@sign,6
  2167  003F' 1793'              	bsf	___ftadd@f1+1,7
  2168  0040' 30FF               	movlw	255
  2169  0041' 0592'              	andwf	___ftadd@f1,f
  2170  0042' 30FF               	movlw	255
  2171  0043' 0593'              	andwf	___ftadd@f1+1,f
  2172  0044' 3000               	movlw	0
  2173  0045' 0594'              	andwf	___ftadd@f1+2,f
  2174  0046' 1796'              	bsf	___ftadd@f2+1,7
  2175  0047' 30FF               	movlw	255
  2176  0048' 0595'              	andwf	___ftadd@f2,f
  2177  0049' 30FF               	movlw	255
  2178  004A' 0596'              	andwf	___ftadd@f2+1,f
  2179  004B' 3000               	movlw	0
  2180  004C' 0597'              	andwf	___ftadd@f2+2,f
  2181  004D' 081C'              	movf	___ftadd@exp2,w
  2182  004E' 021D'              	subwf	___ftadd@exp1,w
  2183  004F' 1803               	skipnc
  2184  0050' 2877'              	goto	l1810
  2185  0051'                    l1798:
  2186  0051' 3001               	movlw	1
  2187  0052'                    u2715:
  2188  0052' 1003               	clrc
  2189  0053' 0D95'              	rlf	___ftadd@f2,f
  2190  0054' 0D96'              	rlf	___ftadd@f2+1,f
  2191  0055' 0D97'              	rlf	___ftadd@f2+2,f
  2192  0056' 3EFF               	addlw	-1
  2193  0057' 1D03               	skipz
  2194  0058' 2852'              	goto	u2715
  2195  0059' 3001               	movlw	1
  2196  005A' 029C'              	subwf	___ftadd@exp2,f
  2197  005B' 081C'              	movf	___ftadd@exp2,w
  2198  005C' 061D'              	xorwf	___ftadd@exp1,w
  2199  005D' 1903               	skipnz
  2200  005E' 2872'              	goto	l1808
  2201  005F' 3001               	movlw	1
  2202  0060' 029B'              	subwf	___ftadd@sign,f
  2203  0061' 081B'              	movf	___ftadd@sign,w
  2204  0062' 3907               	andlw	7
  2205  0063' 1903               	btfsc	3,2
  2206  0064' 2872'              	goto	l1808
  2207  0065' 2851'              	goto	l1798
  2208  0066'                    l1804:
  2209  0066' 3001               	movlw	1
  2210  0067'                    u2745:
  2211  0067' 1003               	clrc
  2212  0068' 0C94'              	rrf	___ftadd@f1+2,f
  2213  0069' 0C93'              	rrf	___ftadd@f1+1,f
  2214  006A' 0C92'              	rrf	___ftadd@f1,f
  2215  006B' 3EFF               	addlw	-1
  2216  006C' 1D03               	skipz
  2217  006D' 2867'              	goto	u2745
  2218  006E' 3001               	movlw	1
  2219  006F' 00FF               	movwf	127
  2220  0070' 087F               	movf	127,w
  2221  0071' 079D'              	addwf	___ftadd@exp1,f
  2222  0072'                    l1808:
  2223  0072' 081D'              	movf	___ftadd@exp1,w
  2224  0073' 061C'              	xorwf	___ftadd@exp2,w
  2225  0074' 1903               	btfsc	3,2
  2226  0075' 28A0'              	goto	l360
  2227  0076' 2866'              	goto	l1804
  2228  0077'                    l1810:
  2229  0077' 081D'              	movf	___ftadd@exp1,w
  2230  0078' 021C'              	subwf	___ftadd@exp2,w
  2231  0079' 1803               	skipnc
  2232  007A' 28A0'              	goto	l360
  2233  007B'                    l1812:
  2234  007B' 3001               	movlw	1
  2235  007C'                    u2775:
  2236  007C' 1003               	clrc
  2237  007D' 0D92'              	rlf	___ftadd@f1,f
  2238  007E' 0D93'              	rlf	___ftadd@f1+1,f
  2239  007F' 0D94'              	rlf	___ftadd@f1+2,f
  2240  0080' 3EFF               	addlw	-1
  2241  0081' 1D03               	skipz
  2242  0082' 287C'              	goto	u2775
  2243  0083' 3001               	movlw	1
  2244  0084' 029D'              	subwf	___ftadd@exp1,f
  2245  0085' 081C'              	movf	___ftadd@exp2,w
  2246  0086' 061D'              	xorwf	___ftadd@exp1,w
  2247  0087' 1903               	skipnz
  2248  0088' 289C'              	goto	l1822
  2249  0089' 3001               	movlw	1
  2250  008A' 029B'              	subwf	___ftadd@sign,f
  2251  008B' 081B'              	movf	___ftadd@sign,w
  2252  008C' 3907               	andlw	7
  2253  008D' 1903               	btfsc	3,2
  2254  008E' 289C'              	goto	l1822
  2255  008F' 287B'              	goto	l1812
  2256  0090'                    l1818:
  2257  0090' 3001               	movlw	1
  2258  0091'                    u2805:
  2259  0091' 1003               	clrc
  2260  0092' 0C97'              	rrf	___ftadd@f2+2,f
  2261  0093' 0C96'              	rrf	___ftadd@f2+1,f
  2262  0094' 0C95'              	rrf	___ftadd@f2,f
  2263  0095' 3EFF               	addlw	-1
  2264  0096' 1D03               	skipz
  2265  0097' 2891'              	goto	u2805
  2266  0098' 3001               	movlw	1
  2267  0099' 00FF               	movwf	127
  2268  009A' 087F               	movf	127,w
  2269  009B' 079C'              	addwf	___ftadd@exp2,f
  2270  009C'                    l1822:
  2271  009C' 081D'              	movf	___ftadd@exp1,w
  2272  009D' 061C'              	xorwf	___ftadd@exp2,w
  2273  009E' 1D03               	skipz
  2274  009F' 2890'              	goto	l1818
  2275  00A0'                    l360:
  2276  00A0' 1F9B'              	btfss	___ftadd@sign,7
  2277  00A1' 28B2'              	goto	l1826
  2278  00A2' 30FF               	movlw	255
  2279  00A3' 0692'              	xorwf	___ftadd@f1,f
  2280  00A4' 30FF               	movlw	255
  2281  00A5' 0693'              	xorwf	___ftadd@f1+1,f
  2282  00A6' 30FF               	movlw	255
  2283  00A7' 0694'              	xorwf	___ftadd@f1+2,f
  2284  00A8' 3001               	movlw	1
  2285  00A9' 0792'              	addwf	___ftadd@f1,f
  2286  00AA' 3000               	movlw	0
  2287  00AB' 1803               	skipnc
  2288  00AC' 3001               	movlw	1
  2289  00AD' 0793'              	addwf	___ftadd@f1+1,f
  2290  00AE' 3000               	movlw	0
  2291  00AF' 1803               	skipnc
  2292  00B0' 3001               	movlw	1
  2293  00B1' 0794'              	addwf	___ftadd@f1+2,f
  2294  00B2'                    l1826:
  2295  00B2' 1F1B'              	btfss	___ftadd@sign,6
  2296  00B3' 28C4'              	goto	l1830
  2297  00B4' 30FF               	movlw	255
  2298  00B5' 0695'              	xorwf	___ftadd@f2,f
  2299  00B6' 30FF               	movlw	255
  2300  00B7' 0696'              	xorwf	___ftadd@f2+1,f
  2301  00B8' 30FF               	movlw	255
  2302  00B9' 0697'              	xorwf	___ftadd@f2+2,f
  2303  00BA' 3001               	movlw	1
  2304  00BB' 0795'              	addwf	___ftadd@f2,f
  2305  00BC' 3000               	movlw	0
  2306  00BD' 1803               	skipnc
  2307  00BE' 3001               	movlw	1
  2308  00BF' 0796'              	addwf	___ftadd@f2+1,f
  2309  00C0' 3000               	movlw	0
  2310  00C1' 1803               	skipnc
  2311  00C2' 3001               	movlw	1
  2312  00C3' 0797'              	addwf	___ftadd@f2+2,f
  2313  00C4'                    l1830:
  2314  00C4' 019B'              	clrf	___ftadd@sign
  2315  00C5' 0812'              	movf	___ftadd@f1,w
  2316  00C6' 0795'              	addwf	___ftadd@f2,f
  2317  00C7' 0813'              	movf	___ftadd@f1+1,w
  2318  00C8' 1103               	clrz
  2319  00C9' 1803               	skipnc
  2320  00CA' 0A13'              	incf	___ftadd@f1+1,w
  2321  00CB' 1D03               	btfss	3,2
  2322  00CC' 0796'              	addwf	___ftadd@f2+1,f
  2323  00CD' 0814'              	movf	___ftadd@f1+2,w
  2324  00CE' 1103               	clrz
  2325  00CF' 1803               	skipnc
  2326  00D0' 0A14'              	incf	___ftadd@f1+2,w
  2327  00D1' 1D03               	btfss	3,2
  2328  00D2' 0797'              	addwf	___ftadd@f2+2,f
  2329  00D3' 1F97'              	btfss	___ftadd@f2+2,7
  2330  00D4' 28E7'              	goto	l1840
  2331  00D5' 30FF               	movlw	255
  2332  00D6' 0695'              	xorwf	___ftadd@f2,f
  2333  00D7' 30FF               	movlw	255
  2334  00D8' 0696'              	xorwf	___ftadd@f2+1,f
  2335  00D9' 30FF               	movlw	255
  2336  00DA' 0697'              	xorwf	___ftadd@f2+2,f
  2337  00DB' 3001               	movlw	1
  2338  00DC' 0795'              	addwf	___ftadd@f2,f
  2339  00DD' 3000               	movlw	0
  2340  00DE' 1803               	skipnc
  2341  00DF' 3001               	movlw	1
  2342  00E0' 0796'              	addwf	___ftadd@f2+1,f
  2343  00E1' 3000               	movlw	0
  2344  00E2' 1803               	skipnc
  2345  00E3' 3001               	movlw	1
  2346  00E4' 0797'              	addwf	___ftadd@f2+2,f
  2347  00E5' 019B'              	clrf	___ftadd@sign
  2348  00E6' 0A9B'              	incf	___ftadd@sign,f
  2349  00E7'                    l1840:
  2350  00E7' 0815'              	movf	___ftadd@f2,w
  2351  00E8' 0082'              	movwf	___ftpack@arg
  2352  00E9' 0816'              	movf	___ftadd@f2+1,w
  2353  00EA' 0083'              	movwf	___ftpack@arg+1
  2354  00EB' 0817'              	movf	___ftadd@f2+2,w
  2355  00EC' 0084'              	movwf	___ftpack@arg+2
  2356  00ED' 081D'              	movf	___ftadd@exp1,w
  2357  00EE' 0085'              	movwf	___ftpack@exp
  2358  00EF' 081B'              	movf	___ftadd@sign,w
  2359  00F0' 0086'              	movwf	___ftpack@sign
  2360  00F1' 2000'              	fcall	___ftpack
  2361  00F2' 0802'              	movf	?___ftpack,w
  2362  00F3' 0092'              	movwf	?___ftadd
  2363  00F4' 0803'              	movf	?___ftpack+1,w
  2364  00F5' 0093'              	movwf	?___ftadd+1
  2365  00F6' 0804'              	movf	?___ftpack+2,w
  2366  00F7' 0094'              	movwf	?___ftadd+2
  2367  00F8' 0008               	return
  2368  00F9'                    __end_of___ftadd:
  2369                           
  2370                           	psect	text8
  2371  0000'                    __ptext8:	
  2372 ;; *************** function ___awtoft *****************
  2373 ;; Defined at:
  2374 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awtoft.c"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;  c               2    0[BANK0 ] int 
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;  sign            1   10[COMMON] unsigned char 
  2379 ;; Return value:  Size  Location     Type
  2380 ;;                  3    0[BANK0 ] float 
  2381 ;; Registers used:
  2382 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2383 ;; Tracked objects:
  2384 ;;		On entry : 100/0
  2385 ;;		On exit  : 100/0
  2386 ;;		Unchanged: 0/0
  2387 ;; Data sizes:     COMMON   BANK0   BANK1
  2388 ;;      Params:         0       3       0
  2389 ;;      Locals:         1       0       0
  2390 ;;      Temps:          0       0       0
  2391 ;;      Totals:         1       3       0
  2392 ;;Total ram usage:        4 bytes
  2393 ;; Hardware stack levels used: 1
  2394 ;; Hardware stack levels required when called: 2
  2395 ;; This function calls:
  2396 ;;		___ftpack
  2397 ;; This function is called by:
  2398 ;;		_micros
  2399 ;; This function uses a non-reentrant model
  2400 ;;
  2401                           
  2402  0000'                    ___awtoft:	
  2403                           ;psect for function ___awtoft
  2404                           
  2405                           
  2406                           ;incstack = 0
  2407                           ; Regs used in ___awtoft: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2408  0000' 018A'              	clrf	___awtoft@sign
  2409  0001' 1F81'              	btfss	___awtoft@c+1,7
  2410  0002' 280A'              	goto	l1766
  2411  0003' 0980'              	comf	___awtoft@c,f
  2412  0004' 0981'              	comf	___awtoft@c+1,f
  2413  0005' 0A80'              	incf	___awtoft@c,f
  2414  0006' 1903               	skipnz
  2415  0007' 0A81'              	incf	___awtoft@c+1,f
  2416  0008' 018A'              	clrf	___awtoft@sign
  2417  0009' 0A8A'              	incf	___awtoft@sign,f
  2418  000A'                    l1766:
  2419  000A' 0800'              	movf	___awtoft@c,w
  2420  000B' 0082'              	movwf	___ftpack@arg
  2421  000C' 0801'              	movf	___awtoft@c+1,w
  2422  000D' 0083'              	movwf	___ftpack@arg+1
  2423  000E' 0184'              	clrf	___ftpack@arg+2
  2424  000F' 308E               	movlw	142
  2425  0010' 0085'              	movwf	___ftpack@exp
  2426  0011' 080A'              	movf	___awtoft@sign,w
  2427  0012' 0086'              	movwf	___ftpack@sign
  2428  0013' 2000'              	fcall	___ftpack
  2429  0014' 0802'              	movf	?___ftpack,w
  2430  0015' 0080'              	movwf	?___awtoft
  2431  0016' 0803'              	movf	?___ftpack+1,w
  2432  0017' 0081'              	movwf	?___awtoft+1
  2433  0018' 0804'              	movf	?___ftpack+2,w
  2434  0019' 0082'              	movwf	?___awtoft+2
  2435  001A' 0008               	return
  2436  001B'                    __end_of___awtoft:
  2437                           
  2438                           	psect	text9
  2439  0000'                    __ptext9:	
  2440 ;; *************** function _display_num *****************
  2441 ;; Defined at:
  2442 ;;		line 215 in file "Stroboscope.c"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;  val             4    5[BANK0 ] unsigned long 
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;  i               2    9[BANK0 ] int 
  2447 ;; Return value:  Size  Location     Type
  2448 ;;                  1    wreg      void 
  2449 ;; Registers used:
  2450 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2451 ;; Tracked objects:
  2452 ;;		On entry : 100/0
  2453 ;;		On exit  : 0/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMMON   BANK0   BANK1
  2456 ;;      Params:         0       4       0
  2457 ;;      Locals:         0       2       0
  2458 ;;      Temps:          0       0       0
  2459 ;;      Totals:         0       6       0
  2460 ;;Total ram usage:        6 bytes
  2461 ;; Hardware stack levels used: 1
  2462 ;; Hardware stack levels required when called: 3
  2463 ;; This function calls:
  2464 ;;		___lldiv
  2465 ;;		___llmod
  2466 ;;		_display_digit
  2467 ;; This function is called by:
  2468 ;;		_main
  2469 ;; This function uses a non-reentrant model
  2470 ;;
  2471                           
  2472  0000'                    _display_num:	
  2473                           ;psect for function _display_num
  2474                           
  2475                           
  2476                           ;Stroboscope.c: 216: int i;;Stroboscope.c: 217: for (i=1; i<=8; i++){
  2477                           
  2478                           ;incstack = 0
  2479                           ; Regs used in _display_num: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2480  0000' 3001               	movlw	1
  2481  0001' 0089'              	movwf	display_num@i
  2482  0002' 3000               	movlw	0
  2483  0003' 008A'              	movwf	display_num@i+1
  2484  0004'                    l1940:
  2485                           
  2486                           ;Stroboscope.c: 218: display_digit(i, val%10);
  2487  0004' 1283               	bcf	3,5	;RP0=0, select bank0
  2488  0005' 080A'              	movf	display_num@i+1,w
  2489  0006' 0082'              	movwf	display_digit@digit_X+1
  2490  0007' 0809'              	movf	display_num@i,w
  2491  0008' 0081'              	movwf	display_digit@digit_X
  2492  0009' 3000               	movlw	0
  2493  000A' 0085'              	movwf	___llmod@divisor+3
  2494  000B' 3000               	movlw	0
  2495  000C' 0084'              	movwf	___llmod@divisor+2
  2496  000D' 3000               	movlw	0
  2497  000E' 0083'              	movwf	___llmod@divisor+1
  2498  000F' 300A               	movlw	10
  2499  0010' 0082'              	movwf	___llmod@divisor
  2500  0011' 0808'              	movf	display_num@val+3,w
  2501  0012' 0089'              	movwf	___llmod@dividend+3
  2502  0013' 0807'              	movf	display_num@val+2,w
  2503  0014' 0088'              	movwf	___llmod@dividend+2
  2504  0015' 0806'              	movf	display_num@val+1,w
  2505  0016' 0087'              	movwf	___llmod@dividend+1
  2506  0017' 0805'              	movf	display_num@val,w
  2507  0018' 0086'              	movwf	___llmod@dividend
  2508  0019' 2000'              	fcall	___llmod
  2509  001A' 0803'              	movf	?___llmod+1,w
  2510  001B' 0084'              	movwf	display_digit@val+1
  2511  001C' 0802'              	movf	?___llmod,w
  2512  001D' 0083'              	movwf	display_digit@val
  2513  001E' 2000'              	fcall	_display_digit
  2514                           
  2515                           ;Stroboscope.c: 219: val /= 10;
  2516  001F' 3000               	movlw	0
  2517  0020' 0085'              	movwf	___lldiv@divisor+3
  2518  0021' 3000               	movlw	0
  2519  0022' 0084'              	movwf	___lldiv@divisor+2
  2520  0023' 3000               	movlw	0
  2521  0024' 0083'              	movwf	___lldiv@divisor+1
  2522  0025' 300A               	movlw	10
  2523  0026' 0082'              	movwf	___lldiv@divisor
  2524  0027' 0808'              	movf	display_num@val+3,w
  2525  0028' 0089'              	movwf	___lldiv@dividend+3
  2526  0029' 0807'              	movf	display_num@val+2,w
  2527  002A' 0088'              	movwf	___lldiv@dividend+2
  2528  002B' 0806'              	movf	display_num@val+1,w
  2529  002C' 0087'              	movwf	___lldiv@dividend+1
  2530  002D' 0805'              	movf	display_num@val,w
  2531  002E' 0086'              	movwf	___lldiv@dividend
  2532  002F' 2000'              	fcall	___lldiv
  2533  0030' 0805'              	movf	?___lldiv+3,w
  2534  0031' 0088'              	movwf	display_num@val+3
  2535  0032' 0804'              	movf	?___lldiv+2,w
  2536  0033' 0087'              	movwf	display_num@val+2
  2537  0034' 0803'              	movf	?___lldiv+1,w
  2538  0035' 0086'              	movwf	display_num@val+1
  2539  0036' 0802'              	movf	?___lldiv,w
  2540  0037' 0085'              	movwf	display_num@val
  2541  0038' 3001               	movlw	1
  2542  0039' 0789'              	addwf	display_num@i,f
  2543  003A' 1803               	skipnc
  2544  003B' 0A8A'              	incf	display_num@i+1,f
  2545  003C' 3000               	movlw	0
  2546  003D' 078A'              	addwf	display_num@i+1,f
  2547  003E' 080A'              	movf	display_num@i+1,w
  2548  003F' 3A80               	xorlw	128
  2549  0040' 00FF               	movwf	127
  2550  0041' 3080               	movlw	128
  2551  0042' 027F               	subwf	127,w
  2552  0043' 1D03               	skipz
  2553  0044' 2847'              	goto	u3065
  2554  0045' 3009               	movlw	9
  2555  0046' 0209'              	subwf	display_num@i,w
  2556  0047'                    u3065:
  2557  0047' 1803               	btfsc	3,0
  2558  0048' 0008               	return
  2559  0049' 2804'              	goto	l1940
  2560  004A'                    __end_of_display_num:
  2561                           
  2562                           	psect	text10
  2563  0000'                    __ptext10:	
  2564 ;; *************** function _display_digit *****************
  2565 ;; Defined at:
  2566 ;;		line 211 in file "Stroboscope.c"
  2567 ;; Parameters:    Size  Location     Type
  2568 ;;  digit_X         2    1[BANK0 ] int 
  2569 ;;  val             2    3[BANK0 ] int 
  2570 ;; Auto vars:     Size  Location     Type
  2571 ;;		None
  2572 ;; Return value:  Size  Location     Type
  2573 ;;                  1    wreg      void 
  2574 ;; Registers used:
  2575 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2576 ;; Tracked objects:
  2577 ;;		On entry : 100/0
  2578 ;;		On exit  : 100/0
  2579 ;;		Unchanged: 0/0
  2580 ;; Data sizes:     COMMON   BANK0   BANK1
  2581 ;;      Params:         0       4       0
  2582 ;;      Locals:         0       0       0
  2583 ;;      Temps:          0       0       0
  2584 ;;      Totals:         0       4       0
  2585 ;;Total ram usage:        4 bytes
  2586 ;; Hardware stack levels used: 1
  2587 ;; Hardware stack levels required when called: 2
  2588 ;; This function calls:
  2589 ;;		_SPI_send
  2590 ;; This function is called by:
  2591 ;;		_display_num
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595  0000'                    _display_digit:	
  2596                           ;psect for function _display_digit
  2597                           
  2598                           
  2599                           ;Stroboscope.c: 212: SPI_send(digit_X, val);
  2600                           
  2601                           ;incstack = 0
  2602                           ; Regs used in _display_digit: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2603  0000' 0803'              	movf	display_digit@val,w
  2604  0001' 0082'              	movwf	SPI_send@data
  2605  0002' 0801'              	movf	display_digit@digit_X,w
  2606  0003' 2000'              	fcall	_SPI_send
  2607  0004' 0008               	return
  2608  0005'                    __end_of_display_digit:
  2609                           
  2610                           	psect	text11
  2611  0000'                    __ptext11:	
  2612 ;; *************** function ___llmod *****************
  2613 ;; Defined at:
  2614 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\llmod.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;  divisor         4    2[COMMON] unsigned long 
  2617 ;;  dividend        4    6[COMMON] unsigned long 
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;  counter         1    0[BANK0 ] unsigned char 
  2620 ;; Return value:  Size  Location     Type
  2621 ;;                  4    2[COMMON] unsigned long 
  2622 ;; Registers used:
  2623 ;;		wreg, status,2, status,0, btemp+1
  2624 ;; Tracked objects:
  2625 ;;		On entry : 100/0
  2626 ;;		On exit  : 100/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMMON   BANK0   BANK1
  2629 ;;      Params:         8       0       0
  2630 ;;      Locals:         0       1       0
  2631 ;;      Temps:          1       0       0
  2632 ;;      Totals:         9       1       0
  2633 ;;Total ram usage:       10 bytes
  2634 ;; Hardware stack levels used: 1
  2635 ;; Hardware stack levels required when called: 1
  2636 ;; This function calls:
  2637 ;;		Nothing
  2638 ;; This function is called by:
  2639 ;;		_display_num
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643  0000'                    ___llmod:	
  2644                           ;psect for function ___llmod
  2645                           
  2646                           
  2647                           ;incstack = 0
  2648                           ; Regs used in ___llmod: [wreg+status,2+status,0+btemp+1]
  2649  0000' 0805'              	movf	___llmod@divisor+3,w
  2650  0001' 0404'              	iorwf	___llmod@divisor+2,w
  2651  0002' 0403'              	iorwf	___llmod@divisor+1,w
  2652  0003' 0402'              	iorwf	___llmod@divisor,w
  2653  0004' 1903               	skipnz
  2654  0005' 2843'              	goto	l1918
  2655  0006' 0180'              	clrf	___llmod@counter
  2656  0007' 0A80'              	incf	___llmod@counter,f
  2657  0008'                    l1908:
  2658  0008' 1B85'              	btfsc	___llmod@divisor+3,7
  2659  0009' 2818'              	goto	l1910
  2660  000A' 3001               	movlw	1
  2661  000B' 008A'              	movwf	??___llmod
  2662  000C'                    u2995:
  2663  000C' 1003               	clrc
  2664  000D' 0D82'              	rlf	___llmod@divisor,f
  2665  000E' 0D83'              	rlf	___llmod@divisor+1,f
  2666  000F' 0D84'              	rlf	___llmod@divisor+2,f
  2667  0010' 0D85'              	rlf	___llmod@divisor+3,f
  2668  0011' 0B8A'              	decfsz	??___llmod,f
  2669  0012' 280C'              	goto	u2995
  2670  0013' 3001               	movlw	1
  2671  0014' 00FF               	movwf	127
  2672  0015' 087F               	movf	127,w
  2673  0016' 0780'              	addwf	___llmod@counter,f
  2674  0017' 2808'              	goto	l1908
  2675  0018'                    l1910:
  2676  0018' 0805'              	movf	___llmod@divisor+3,w
  2677  0019' 0209'              	subwf	___llmod@dividend+3,w
  2678  001A' 1D03               	skipz
  2679  001B' 2826'              	goto	u3015
  2680  001C' 0804'              	movf	___llmod@divisor+2,w
  2681  001D' 0208'              	subwf	___llmod@dividend+2,w
  2682  001E' 1D03               	skipz
  2683  001F' 2826'              	goto	u3015
  2684  0020' 0803'              	movf	___llmod@divisor+1,w
  2685  0021' 0207'              	subwf	___llmod@dividend+1,w
  2686  0022' 1D03               	skipz
  2687  0023' 2826'              	goto	u3015
  2688  0024' 0802'              	movf	___llmod@divisor,w
  2689  0025' 0206'              	subwf	___llmod@dividend,w
  2690  0026'                    u3015:
  2691  0026' 1C03               	skipc
  2692  0027' 2836'              	goto	l1914
  2693  0028' 0802'              	movf	___llmod@divisor,w
  2694  0029' 0286'              	subwf	___llmod@dividend,f
  2695  002A' 0803'              	movf	___llmod@divisor+1,w
  2696  002B' 1C03               	skipc
  2697  002C' 0F03'              	incfsz	___llmod@divisor+1,w
  2698  002D' 0287'              	subwf	___llmod@dividend+1,f
  2699  002E' 0804'              	movf	___llmod@divisor+2,w
  2700  002F' 1C03               	skipc
  2701  0030' 0F04'              	incfsz	___llmod@divisor+2,w
  2702  0031' 0288'              	subwf	___llmod@dividend+2,f
  2703  0032' 0805'              	movf	___llmod@divisor+3,w
  2704  0033' 1C03               	skipc
  2705  0034' 0F05'              	incfsz	___llmod@divisor+3,w
  2706  0035' 0289'              	subwf	___llmod@dividend+3,f
  2707  0036'                    l1914:
  2708  0036' 3001               	movlw	1
  2709  0037'                    u3025:
  2710  0037' 1003               	clrc
  2711  0038' 0C85'              	rrf	___llmod@divisor+3,f
  2712  0039' 0C84'              	rrf	___llmod@divisor+2,f
  2713  003A' 0C83'              	rrf	___llmod@divisor+1,f
  2714  003B' 0C82'              	rrf	___llmod@divisor,f
  2715  003C' 3EFF               	addlw	-1
  2716  003D' 1D03               	skipz
  2717  003E' 2837'              	goto	u3025
  2718  003F' 3001               	movlw	1
  2719  0040' 0280'              	subwf	___llmod@counter,f
  2720  0041' 1D03               	btfss	3,2
  2721  0042' 2818'              	goto	l1910
  2722  0043'                    l1918:
  2723  0043' 0809'              	movf	___llmod@dividend+3,w
  2724  0044' 0085'              	movwf	?___llmod+3
  2725  0045' 0808'              	movf	___llmod@dividend+2,w
  2726  0046' 0084'              	movwf	?___llmod+2
  2727  0047' 0807'              	movf	___llmod@dividend+1,w
  2728  0048' 0083'              	movwf	?___llmod+1
  2729  0049' 0806'              	movf	___llmod@dividend,w
  2730  004A' 0082'              	movwf	?___llmod
  2731  004B' 0008               	return
  2732  004C'                    __end_of___llmod:
  2733                           
  2734                           	psect	text12
  2735  0000'                    __ptext12:	
  2736 ;; *************** function ___lldiv *****************
  2737 ;; Defined at:
  2738 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;  divisor         4    2[COMMON] unsigned long 
  2741 ;;  dividend        4    6[COMMON] unsigned long 
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;  quotient        4    0[BANK0 ] unsigned long 
  2744 ;;  counter         1    4[BANK0 ] unsigned char 
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  4    2[COMMON] unsigned long 
  2747 ;; Registers used:
  2748 ;;		wreg, status,2, status,0, btemp+1
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/100
  2751 ;;		On exit  : 100/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMMON   BANK0   BANK1
  2754 ;;      Params:         8       0       0
  2755 ;;      Locals:         0       5       0
  2756 ;;      Temps:          1       0       0
  2757 ;;      Totals:         9       5       0
  2758 ;;Total ram usage:       14 bytes
  2759 ;; Hardware stack levels used: 1
  2760 ;; Hardware stack levels required when called: 1
  2761 ;; This function calls:
  2762 ;;		Nothing
  2763 ;; This function is called by:
  2764 ;;		_display_num
  2765 ;;		_millis
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769  0000'                    ___lldiv:	
  2770                           ;psect for function ___lldiv
  2771                           
  2772                           
  2773                           ;incstack = 0
  2774                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  2775  0000' 3000               	movlw	0
  2776  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  2777  0002' 0083'              	movwf	___lldiv@quotient+3
  2778  0003' 3000               	movlw	0
  2779  0004' 0082'              	movwf	___lldiv@quotient+2
  2780  0005' 3000               	movlw	0
  2781  0006' 0081'              	movwf	___lldiv@quotient+1
  2782  0007' 3000               	movlw	0
  2783  0008' 0080'              	movwf	___lldiv@quotient
  2784  0009' 0805'              	movf	___lldiv@divisor+3,w
  2785  000A' 0404'              	iorwf	___lldiv@divisor+2,w
  2786  000B' 0403'              	iorwf	___lldiv@divisor+1,w
  2787  000C' 0402'              	iorwf	___lldiv@divisor,w
  2788  000D' 1903               	skipnz
  2789  000E' 2856'              	goto	l1252
  2790  000F' 0184'              	clrf	___lldiv@counter
  2791  0010' 0A84'              	incf	___lldiv@counter,f
  2792  0011'                    l1238:
  2793  0011' 1B85'              	btfsc	___lldiv@divisor+3,7
  2794  0012' 2821'              	goto	l1240
  2795  0013' 3001               	movlw	1
  2796  0014' 008A'              	movwf	??___lldiv
  2797  0015'                    u1495:
  2798  0015' 1003               	clrc
  2799  0016' 0D82'              	rlf	___lldiv@divisor,f
  2800  0017' 0D83'              	rlf	___lldiv@divisor+1,f
  2801  0018' 0D84'              	rlf	___lldiv@divisor+2,f
  2802  0019' 0D85'              	rlf	___lldiv@divisor+3,f
  2803  001A' 0B8A'              	decfsz	??___lldiv,f
  2804  001B' 2815'              	goto	u1495
  2805  001C' 3001               	movlw	1
  2806  001D' 00FF               	movwf	127
  2807  001E' 087F               	movf	127,w
  2808  001F' 0784'              	addwf	___lldiv@counter,f
  2809  0020' 2811'              	goto	l1238
  2810  0021'                    l1240:
  2811  0021' 3001               	movlw	1
  2812  0022' 008A'              	movwf	??___lldiv
  2813  0023'                    u1515:
  2814  0023' 1003               	clrc
  2815  0024' 0D80'              	rlf	___lldiv@quotient,f
  2816  0025' 0D81'              	rlf	___lldiv@quotient+1,f
  2817  0026' 0D82'              	rlf	___lldiv@quotient+2,f
  2818  0027' 0D83'              	rlf	___lldiv@quotient+3,f
  2819  0028' 0B8A'              	decfsz	??___lldiv,f
  2820  0029' 2823'              	goto	u1515
  2821  002A' 0805'              	movf	___lldiv@divisor+3,w
  2822  002B' 0209'              	subwf	___lldiv@dividend+3,w
  2823  002C' 1D03               	skipz
  2824  002D' 2838'              	goto	u1525
  2825  002E' 0804'              	movf	___lldiv@divisor+2,w
  2826  002F' 0208'              	subwf	___lldiv@dividend+2,w
  2827  0030' 1D03               	skipz
  2828  0031' 2838'              	goto	u1525
  2829  0032' 0803'              	movf	___lldiv@divisor+1,w
  2830  0033' 0207'              	subwf	___lldiv@dividend+1,w
  2831  0034' 1D03               	skipz
  2832  0035' 2838'              	goto	u1525
  2833  0036' 0802'              	movf	___lldiv@divisor,w
  2834  0037' 0206'              	subwf	___lldiv@dividend,w
  2835  0038'                    u1525:
  2836  0038' 1C03               	skipc
  2837  0039' 2849'              	goto	l1248
  2838  003A' 0802'              	movf	___lldiv@divisor,w
  2839  003B' 0286'              	subwf	___lldiv@dividend,f
  2840  003C' 0803'              	movf	___lldiv@divisor+1,w
  2841  003D' 1C03               	skipc
  2842  003E' 0F03'              	incfsz	___lldiv@divisor+1,w
  2843  003F' 0287'              	subwf	___lldiv@dividend+1,f
  2844  0040' 0804'              	movf	___lldiv@divisor+2,w
  2845  0041' 1C03               	skipc
  2846  0042' 0F04'              	incfsz	___lldiv@divisor+2,w
  2847  0043' 0288'              	subwf	___lldiv@dividend+2,f
  2848  0044' 0805'              	movf	___lldiv@divisor+3,w
  2849  0045' 1C03               	skipc
  2850  0046' 0F05'              	incfsz	___lldiv@divisor+3,w
  2851  0047' 0289'              	subwf	___lldiv@dividend+3,f
  2852  0048' 1400'              	bsf	___lldiv@quotient,0
  2853  0049'                    l1248:
  2854  0049' 3001               	movlw	1
  2855  004A'                    u1535:
  2856  004A' 1003               	clrc
  2857  004B' 0C85'              	rrf	___lldiv@divisor+3,f
  2858  004C' 0C84'              	rrf	___lldiv@divisor+2,f
  2859  004D' 0C83'              	rrf	___lldiv@divisor+1,f
  2860  004E' 0C82'              	rrf	___lldiv@divisor,f
  2861  004F' 3EFF               	addlw	-1
  2862  0050' 1D03               	skipz
  2863  0051' 284A'              	goto	u1535
  2864  0052' 3001               	movlw	1
  2865  0053' 0284'              	subwf	___lldiv@counter,f
  2866  0054' 1D03               	btfss	3,2
  2867  0055' 2821'              	goto	l1240
  2868  0056'                    l1252:
  2869  0056' 0803'              	movf	___lldiv@quotient+3,w
  2870  0057' 0085'              	movwf	?___lldiv+3
  2871  0058' 0802'              	movf	___lldiv@quotient+2,w
  2872  0059' 0084'              	movwf	?___lldiv+2
  2873  005A' 0801'              	movf	___lldiv@quotient+1,w
  2874  005B' 0083'              	movwf	?___lldiv+1
  2875  005C' 0800'              	movf	___lldiv@quotient,w
  2876  005D' 0082'              	movwf	?___lldiv
  2877  005E' 0008               	return
  2878  005F'                    __end_of___lldiv:
  2879                           
  2880                           	psect	text13
  2881  0000'                    __ptext13:	
  2882 ;; *************** function ___wmul *****************
  2883 ;; Defined at:
  2884 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;  multiplier      2    2[COMMON] unsigned int 
  2887 ;;  multiplicand    2    4[COMMON] unsigned int 
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;  product         2    6[COMMON] unsigned int 
  2890 ;; Return value:  Size  Location     Type
  2891 ;;                  2    2[COMMON] unsigned int 
  2892 ;; Registers used:
  2893 ;;		wreg, status,2, status,0
  2894 ;; Tracked objects:
  2895 ;;		On entry : 100/0
  2896 ;;		On exit  : 100/0
  2897 ;;		Unchanged: 100/0
  2898 ;; Data sizes:     COMMON   BANK0   BANK1
  2899 ;;      Params:         4       0       0
  2900 ;;      Locals:         2       0       0
  2901 ;;      Temps:          0       0       0
  2902 ;;      Totals:         6       0       0
  2903 ;;Total ram usage:        6 bytes
  2904 ;; Hardware stack levels used: 1
  2905 ;; Hardware stack levels required when called: 1
  2906 ;; This function calls:
  2907 ;;		Nothing
  2908 ;; This function is called by:
  2909 ;;		_main
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913  0000'                    ___wmul:	
  2914                           ;psect for function ___wmul
  2915                           
  2916                           
  2917                           ;incstack = 0
  2918                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2919  0000' 0186'              	clrf	___wmul@product
  2920  0001' 0187'              	clrf	___wmul@product+1
  2921  0002'                    l1526:
  2922  0002' 1C02'              	btfss	___wmul@multiplier,0
  2923  0003' 280A'              	goto	l117
  2924  0004' 0804'              	movf	___wmul@multiplicand,w
  2925  0005' 0786'              	addwf	___wmul@product,f
  2926  0006' 1803               	skipnc
  2927  0007' 0A87'              	incf	___wmul@product+1,f
  2928  0008' 0805'              	movf	___wmul@multiplicand+1,w
  2929  0009' 0787'              	addwf	___wmul@product+1,f
  2930  000A'                    l117:
  2931  000A' 3001               	movlw	1
  2932  000B'                    u2165:
  2933  000B' 1003               	clrc
  2934  000C' 0D84'              	rlf	___wmul@multiplicand,f
  2935  000D' 0D85'              	rlf	___wmul@multiplicand+1,f
  2936  000E' 3EFF               	addlw	-1
  2937  000F' 1D03               	skipz
  2938  0010' 280B'              	goto	u2165
  2939  0011' 3001               	movlw	1
  2940  0012'                    u2175:
  2941  0012' 1003               	clrc
  2942  0013' 0C83'              	rrf	___wmul@multiplier+1,f
  2943  0014' 0C82'              	rrf	___wmul@multiplier,f
  2944  0015' 3EFF               	addlw	-1
  2945  0016' 1D03               	skipz
  2946  0017' 2812'              	goto	u2175
  2947  0018' 0802'              	movf	___wmul@multiplier,w
  2948  0019' 0403'              	iorwf	___wmul@multiplier+1,w
  2949  001A' 1D03               	btfss	3,2
  2950  001B' 2802'              	goto	l1526
  2951  001C' 0807'              	movf	___wmul@product+1,w
  2952  001D' 0083'              	movwf	?___wmul+1
  2953  001E' 0806'              	movf	___wmul@product,w
  2954  001F' 0082'              	movwf	?___wmul
  2955  0020' 0008               	return
  2956  0021'                    __end_of___wmul:
  2957                           
  2958                           	psect	text14
  2959  0000'                    __ptext14:	
  2960 ;; *************** function ___lwtoft *****************
  2961 ;; Defined at:
  2962 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwtoft.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;  c               2    0[BANK0 ] unsigned int 
  2965 ;; Auto vars:     Size  Location     Type
  2966 ;;		None
  2967 ;; Return value:  Size  Location     Type
  2968 ;;                  3    0[BANK0 ] float 
  2969 ;; Registers used:
  2970 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2971 ;; Tracked objects:
  2972 ;;		On entry : 100/0
  2973 ;;		On exit  : 100/0
  2974 ;;		Unchanged: 0/0
  2975 ;; Data sizes:     COMMON   BANK0   BANK1
  2976 ;;      Params:         0       3       0
  2977 ;;      Locals:         0       0       0
  2978 ;;      Temps:          0       0       0
  2979 ;;      Totals:         0       3       0
  2980 ;;Total ram usage:        3 bytes
  2981 ;; Hardware stack levels used: 1
  2982 ;; Hardware stack levels required when called: 2
  2983 ;; This function calls:
  2984 ;;		___ftpack
  2985 ;; This function is called by:
  2986 ;;		_main
  2987 ;; This function uses a non-reentrant model
  2988 ;;
  2989                           
  2990  0000'                    ___lwtoft:	
  2991                           ;psect for function ___lwtoft
  2992                           
  2993                           
  2994                           ;incstack = 0
  2995                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2996  0000' 0800'              	movf	___lwtoft@c,w
  2997  0001' 0082'              	movwf	___ftpack@arg
  2998  0002' 0801'              	movf	___lwtoft@c+1,w
  2999  0003' 0083'              	movwf	___ftpack@arg+1
  3000  0004' 0184'              	clrf	___ftpack@arg+2
  3001  0005' 308E               	movlw	142
  3002  0006' 0085'              	movwf	___ftpack@exp
  3003  0007' 0186'              	clrf	___ftpack@sign
  3004  0008' 2000'              	fcall	___ftpack
  3005  0009' 0802'              	movf	?___ftpack,w
  3006  000A' 0080'              	movwf	?___lwtoft
  3007  000B' 0803'              	movf	?___ftpack+1,w
  3008  000C' 0081'              	movwf	?___lwtoft+1
  3009  000D' 0804'              	movf	?___ftpack+2,w
  3010  000E' 0082'              	movwf	?___lwtoft+2
  3011  000F' 0008               	return
  3012  0010'                    __end_of___lwtoft:
  3013                           
  3014                           	psect	text15
  3015  0000'                    __ptext15:	
  3016 ;; *************** function ___ftpack *****************
  3017 ;; Defined at:
  3018 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\float.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;  arg             3    2[COMMON] unsigned um
  3021 ;;  exp             1    5[COMMON] unsigned char 
  3022 ;;  sign            1    6[COMMON] unsigned char 
  3023 ;; Auto vars:     Size  Location     Type
  3024 ;;		None
  3025 ;; Return value:  Size  Location     Type
  3026 ;;                  3    2[COMMON] float 
  3027 ;; Registers used:
  3028 ;;		wreg, status,2, status,0, btemp+1
  3029 ;; Tracked objects:
  3030 ;;		On entry : 100/0
  3031 ;;		On exit  : 100/0
  3032 ;;		Unchanged: 100/0
  3033 ;; Data sizes:     COMMON   BANK0   BANK1
  3034 ;;      Params:         5       0       0
  3035 ;;      Locals:         0       0       0
  3036 ;;      Temps:          3       0       0
  3037 ;;      Totals:         8       0       0
  3038 ;;Total ram usage:        8 bytes
  3039 ;; Hardware stack levels used: 1
  3040 ;; Hardware stack levels required when called: 1
  3041 ;; This function calls:
  3042 ;;		Nothing
  3043 ;; This function is called by:
  3044 ;;		___awtoft
  3045 ;;		___ftadd
  3046 ;;		___ftmul
  3047 ;;		___lltoft
  3048 ;;		___lwtoft
  3049 ;; This function uses a non-reentrant model
  3050 ;;
  3051                           
  3052  0000'                    ___ftpack:	
  3053                           ;psect for function ___ftpack
  3054                           
  3055                           
  3056                           ;incstack = 0
  3057                           ; Regs used in ___ftpack: [wreg+status,2+status,0+btemp+1]
  3058  0000' 0805'              	movf	___ftpack@exp,w
  3059  0001' 1903               	btfsc	3,2
  3060  0002' 2808'              	goto	l1726
  3061  0003' 0804'              	movf	___ftpack@arg+2,w
  3062  0004' 0403'              	iorwf	___ftpack@arg+1,w
  3063  0005' 0402'              	iorwf	___ftpack@arg,w
  3064  0006' 1D03               	skipz
  3065  0007' 281B'              	goto	l1734
  3066  0008'                    l1726:
  3067  0008' 3000               	movlw	0
  3068  0009' 0082'              	movwf	?___ftpack
  3069  000A' 3000               	movlw	0
  3070  000B' 0083'              	movwf	?___ftpack+1
  3071  000C' 3000               	movlw	0
  3072  000D' 0084'              	movwf	?___ftpack+2
  3073  000E' 0008               	return
  3074  000F'                    l1730:
  3075  000F' 3001               	movlw	1
  3076  0010' 00FF               	movwf	127
  3077  0011' 087F               	movf	127,w
  3078  0012' 0785'              	addwf	___ftpack@exp,f
  3079  0013' 3001               	movlw	1
  3080  0014'                    u2515:
  3081  0014' 1003               	clrc
  3082  0015' 0C84'              	rrf	___ftpack@arg+2,f
  3083  0016' 0C83'              	rrf	___ftpack@arg+1,f
  3084  0017' 0C82'              	rrf	___ftpack@arg,f
  3085  0018' 3EFF               	addlw	-1
  3086  0019' 1D03               	skipz
  3087  001A' 2814'              	goto	u2515
  3088  001B'                    l1734:
  3089  001B' 30FE               	movlw	254
  3090  001C' 0504'              	andwf	___ftpack@arg+2,w
  3091  001D' 1903               	btfsc	3,2
  3092  001E' 2836'              	goto	l1742
  3093  001F' 280F'              	goto	l1730
  3094  0020'                    l1736:
  3095  0020' 3001               	movlw	1
  3096  0021' 00FF               	movwf	127
  3097  0022' 087F               	movf	127,w
  3098  0023' 0785'              	addwf	___ftpack@exp,f
  3099  0024' 3001               	movlw	1
  3100  0025' 0782'              	addwf	___ftpack@arg,f
  3101  0026' 3000               	movlw	0
  3102  0027' 1803               	skipnc
  3103  0028' 3001               	movlw	1
  3104  0029' 0783'              	addwf	___ftpack@arg+1,f
  3105  002A' 3000               	movlw	0
  3106  002B' 1803               	skipnc
  3107  002C' 3001               	movlw	1
  3108  002D' 0784'              	addwf	___ftpack@arg+2,f
  3109  002E' 3001               	movlw	1
  3110  002F'                    u2535:
  3111  002F' 1003               	clrc
  3112  0030' 0C84'              	rrf	___ftpack@arg+2,f
  3113  0031' 0C83'              	rrf	___ftpack@arg+1,f
  3114  0032' 0C82'              	rrf	___ftpack@arg,f
  3115  0033' 3EFF               	addlw	-1
  3116  0034' 1D03               	skipz
  3117  0035' 282F'              	goto	u2535
  3118  0036'                    l1742:
  3119  0036' 30FF               	movlw	255
  3120  0037' 0504'              	andwf	___ftpack@arg+2,w
  3121  0038' 1903               	btfsc	3,2
  3122  0039' 2849'              	goto	l1746
  3123  003A' 2820'              	goto	l1736
  3124  003B'                    l1748:
  3125  003B' 3002               	movlw	2
  3126  003C' 0205'              	subwf	___ftpack@exp,w
  3127  003D' 1C03               	btfss	3,0
  3128  003E' 284B'              	goto	l336
  3129  003F' 3001               	movlw	1
  3130  0040' 0285'              	subwf	___ftpack@exp,f
  3131  0041' 3001               	movlw	1
  3132  0042'                    u2555:
  3133  0042' 1003               	clrc
  3134  0043' 0D82'              	rlf	___ftpack@arg,f
  3135  0044' 0D83'              	rlf	___ftpack@arg+1,f
  3136  0045' 0D84'              	rlf	___ftpack@arg+2,f
  3137  0046' 3EFF               	addlw	-1
  3138  0047' 1D03               	skipz
  3139  0048' 2842'              	goto	u2555
  3140  0049'                    l1746:
  3141  0049' 1F83'              	btfss	___ftpack@arg+1,7
  3142  004A' 283B'              	goto	l1748
  3143  004B'                    l336:
  3144  004B' 1805'              	btfsc	___ftpack@exp,0
  3145  004C' 2853'              	goto	l337
  3146  004D' 30FF               	movlw	255
  3147  004E' 0582'              	andwf	___ftpack@arg,f
  3148  004F' 307F               	movlw	127
  3149  0050' 0583'              	andwf	___ftpack@arg+1,f
  3150  0051' 30FF               	movlw	255
  3151  0052' 0584'              	andwf	___ftpack@arg+2,f
  3152  0053'                    l337:
  3153  0053' 1003               	clrc
  3154  0054' 0C85'              	rrf	___ftpack@exp,f
  3155  0055' 0805'              	movf	___ftpack@exp,w
  3156  0056' 0087'              	movwf	??___ftpack
  3157  0057' 0188'              	clrf	??___ftpack+1
  3158  0058' 0189'              	clrf	??___ftpack+2
  3159  0059' 3010               	movlw	16
  3160  005A'                    u2595:
  3161  005A' 1003               	clrc
  3162  005B' 0D87'              	rlf	??___ftpack,f
  3163  005C' 0D88'              	rlf	??___ftpack+1,f
  3164  005D' 0D89'              	rlf	??___ftpack+2,f
  3165  005E' 3EFF               	addlw	-1
  3166  005F' 1D03               	skipz
  3167  0060' 285A'              	goto	u2595
  3168  0061' 0807'              	movf	??___ftpack,w
  3169  0062' 0482'              	iorwf	___ftpack@arg,f
  3170  0063' 0808'              	movf	??___ftpack+1,w
  3171  0064' 0483'              	iorwf	___ftpack@arg+1,f
  3172  0065' 0809'              	movf	??___ftpack+2,w
  3173  0066' 0484'              	iorwf	___ftpack@arg+2,f
  3174  0067' 0806'              	movf	___ftpack@sign,w
  3175  0068' 1903               	btfsc	3,2
  3176  0069' 0008               	return
  3177  006A' 1784'              	bsf	___ftpack@arg+2,7
  3178  006B' 0008               	return
  3179  006C'                    __end_of___ftpack:
  3180                           
  3181                           	psect	text16
  3182  0000'                    __ptext16:	
  3183 ;; *************** function ___lbmod *****************
  3184 ;; Defined at:
  3185 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lbmod.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;  dividend        1    wreg     unsigned char 
  3188 ;;  divisor         1    2[COMMON] unsigned char 
  3189 ;; Auto vars:     Size  Location     Type
  3190 ;;  dividend        1    5[COMMON] unsigned char 
  3191 ;;  rem             1    7[COMMON] unsigned char 
  3192 ;;  counter         1    6[COMMON] unsigned char 
  3193 ;; Return value:  Size  Location     Type
  3194 ;;                  1    wreg      unsigned char 
  3195 ;; Registers used:
  3196 ;;		wreg, status,2, status,0
  3197 ;; Tracked objects:
  3198 ;;		On entry : 100/0
  3199 ;;		On exit  : 100/0
  3200 ;;		Unchanged: 100/0
  3201 ;; Data sizes:     COMMON   BANK0   BANK1
  3202 ;;      Params:         1       0       0
  3203 ;;      Locals:         3       0       0
  3204 ;;      Temps:          2       0       0
  3205 ;;      Totals:         6       0       0
  3206 ;;Total ram usage:        6 bytes
  3207 ;; Hardware stack levels used: 1
  3208 ;; Hardware stack levels required when called: 1
  3209 ;; This function calls:
  3210 ;;		Nothing
  3211 ;; This function is called by:
  3212 ;;		_main
  3213 ;; This function uses a non-reentrant model
  3214 ;;
  3215                           
  3216  0000'                    ___lbmod:	
  3217                           ;psect for function ___lbmod
  3218                           
  3219                           
  3220                           ;incstack = 0
  3221                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  3222                           ;___lbmod@dividend stored from wreg
  3223  0000' 0085'              	movwf	___lbmod@dividend
  3224  0001' 3008               	movlw	8
  3225  0002' 0086'              	movwf	___lbmod@counter
  3226  0003' 0187'              	clrf	___lbmod@rem
  3227  0004'                    l1604:
  3228  0004' 0805'              	movf	___lbmod@dividend,w
  3229  0005' 0083'              	movwf	??___lbmod
  3230  0006' 3007               	movlw	7
  3231  0007'                    u2325:
  3232  0007' 1003               	clrc
  3233  0008' 0C83'              	rrf	??___lbmod,f
  3234  0009' 3EFF               	addlw	-1
  3235  000A' 1D03               	skipz
  3236  000B' 2807'              	goto	u2325
  3237  000C' 0807'              	movf	___lbmod@rem,w
  3238  000D' 0084'              	movwf	??___lbmod+1
  3239  000E' 0704'              	addwf	??___lbmod+1,w
  3240  000F' 0403'              	iorwf	??___lbmod,w
  3241  0010' 0087'              	movwf	___lbmod@rem
  3242  0011' 1003               	clrc
  3243  0012' 0D85'              	rlf	___lbmod@dividend,f
  3244  0013' 0802'              	movf	___lbmod@divisor,w
  3245  0014' 0207'              	subwf	___lbmod@rem,w
  3246  0015' 1C03               	skipc
  3247  0016' 2819'              	goto	l437
  3248  0017' 0802'              	movf	___lbmod@divisor,w
  3249  0018' 0287'              	subwf	___lbmod@rem,f
  3250  0019'                    l437:
  3251  0019' 3001               	movlw	1
  3252  001A' 0286'              	subwf	___lbmod@counter,f
  3253  001B' 1D03               	btfss	3,2
  3254  001C' 2804'              	goto	l1604
  3255  001D' 0807'              	movf	___lbmod@rem,w
  3256  001E' 0008               	return
  3257  001F'                    __end_of___lbmod:
  3258                           
  3259                           	psect	text17
  3260  0000'                    __ptext17:	
  3261 ;; *************** function ___ftge *****************
  3262 ;; Defined at:
  3263 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftge.c"
  3264 ;; Parameters:    Size  Location     Type
  3265 ;;  ff1             3   51[BANK0 ] float 
  3266 ;;  ff2             3   54[BANK0 ] float 
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;		None
  3269 ;; Return value:  Size  Location     Type
  3270 ;;		None               void
  3271 ;; Registers used:
  3272 ;;		wreg, status,2, status,0
  3273 ;; Tracked objects:
  3274 ;;		On entry : 100/0
  3275 ;;		On exit  : 100/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMMON   BANK0   BANK1
  3278 ;;      Params:         0       6       0
  3279 ;;      Locals:         0       0       0
  3280 ;;      Temps:          0       0       0
  3281 ;;      Totals:         0       6       0
  3282 ;;Total ram usage:        6 bytes
  3283 ;; Hardware stack levels used: 1
  3284 ;; Hardware stack levels required when called: 1
  3285 ;; This function calls:
  3286 ;;		Nothing
  3287 ;; This function is called by:
  3288 ;;		_main
  3289 ;; This function uses a non-reentrant model
  3290 ;;
  3291                           
  3292  0000'                    ___ftge:	
  3293                           ;psect for function ___ftge
  3294                           
  3295                           
  3296                           ;incstack = 0
  3297                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3298  0000' 1FB5'              	btfss	___ftge@ff1+2,7
  3299  0001' 280F'              	goto	l1584
  3300  0002' 0833'              	movf	___ftge@ff1,w
  3301  0003' 3C00               	sublw	0
  3302  0004' 00B3'              	movwf	___ftge@ff1
  3303  0005' 0834'              	movf	___ftge@ff1+1,w
  3304  0006' 1C03               	skipc
  3305  0007' 0F34'              	incfsz	___ftge@ff1+1,w
  3306  0008' 3C00               	sublw	0
  3307  0009' 00B4'              	movwf	___ftge@ff1+1
  3308  000A' 0835'              	movf	___ftge@ff1+2,w
  3309  000B' 1C03               	skipc
  3310  000C' 0F35'              	incfsz	___ftge@ff1+2,w
  3311  000D' 3C80               	sublw	128
  3312  000E' 00B5'              	movwf	___ftge@ff1+2
  3313  000F'                    l1584:
  3314  000F' 1FB8'              	btfss	___ftge@ff2+2,7
  3315  0010' 281E'              	goto	l1588
  3316  0011' 0836'              	movf	___ftge@ff2,w
  3317  0012' 3C00               	sublw	0
  3318  0013' 00B6'              	movwf	___ftge@ff2
  3319  0014' 0837'              	movf	___ftge@ff2+1,w
  3320  0015' 1C03               	skipc
  3321  0016' 0F37'              	incfsz	___ftge@ff2+1,w
  3322  0017' 3C00               	sublw	0
  3323  0018' 00B7'              	movwf	___ftge@ff2+1
  3324  0019' 0838'              	movf	___ftge@ff2+2,w
  3325  001A' 1C03               	skipc
  3326  001B' 0F38'              	incfsz	___ftge@ff2+2,w
  3327  001C' 3C80               	sublw	128
  3328  001D' 00B8'              	movwf	___ftge@ff2+2
  3329  001E'                    l1588:
  3330  001E' 3080               	movlw	128
  3331  001F' 06B5'              	xorwf	___ftge@ff1+2,f
  3332  0020' 3080               	movlw	128
  3333  0021' 06B8'              	xorwf	___ftge@ff2+2,f
  3334  0022' 0838'              	movf	___ftge@ff2+2,w
  3335  0023' 0235'              	subwf	___ftge@ff1+2,w
  3336  0024' 1D03               	skipz
  3337  0025' 0008               	return
  3338  0026' 0837'              	movf	___ftge@ff2+1,w
  3339  0027' 0234'              	subwf	___ftge@ff1+1,w
  3340  0028' 1D03               	skipz
  3341  0029' 0008               	return
  3342  002A' 0836'              	movf	___ftge@ff2,w
  3343  002B' 0233'              	subwf	___ftge@ff1,w
  3344  002C' 0008               	return
  3345  002D'                    __end_of___ftge:
  3346                           
  3347                           	psect	text18
  3348  0000'                    __ptext18:	
  3349 ;; *************** function ___aldiv *****************
  3350 ;; Defined at:
  3351 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\aldiv.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;  divisor         4    2[COMMON] long 
  3354 ;;  dividend        4    6[COMMON] long 
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;  quotient        4    2[BANK0 ] long 
  3357 ;;  sign            1    1[BANK0 ] unsigned char 
  3358 ;;  counter         1    0[BANK0 ] unsigned char 
  3359 ;; Return value:  Size  Location     Type
  3360 ;;                  4    2[COMMON] long 
  3361 ;; Registers used:
  3362 ;;		wreg, status,2, status,0, btemp+1
  3363 ;; Tracked objects:
  3364 ;;		On entry : 100/0
  3365 ;;		On exit  : 100/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMMON   BANK0   BANK1
  3368 ;;      Params:         8       0       0
  3369 ;;      Locals:         0       6       0
  3370 ;;      Temps:          1       0       0
  3371 ;;      Totals:         9       6       0
  3372 ;;Total ram usage:       15 bytes
  3373 ;; Hardware stack levels used: 1
  3374 ;; Hardware stack levels required when called: 1
  3375 ;; This function calls:
  3376 ;;		Nothing
  3377 ;; This function is called by:
  3378 ;;		_main
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382  0000'                    ___aldiv:	
  3383                           ;psect for function ___aldiv
  3384                           
  3385                           
  3386                           ;incstack = 0
  3387                           ; Regs used in ___aldiv: [wreg+status,2+status,0+btemp+1]
  3388  0000' 0181'              	clrf	___aldiv@sign
  3389  0001' 1F85'              	btfss	___aldiv@divisor+3,7
  3390  0002' 2810'              	goto	l188
  3391  0003' 0982'              	comf	___aldiv@divisor,f
  3392  0004' 0983'              	comf	___aldiv@divisor+1,f
  3393  0005' 0984'              	comf	___aldiv@divisor+2,f
  3394  0006' 0985'              	comf	___aldiv@divisor+3,f
  3395  0007' 0A82'              	incf	___aldiv@divisor,f
  3396  0008' 1903               	skipnz
  3397  0009' 0A83'              	incf	___aldiv@divisor+1,f
  3398  000A' 1903               	skipnz
  3399  000B' 0A84'              	incf	___aldiv@divisor+2,f
  3400  000C' 1903               	skipnz
  3401  000D' 0A85'              	incf	___aldiv@divisor+3,f
  3402  000E' 0181'              	clrf	___aldiv@sign
  3403  000F' 0A81'              	incf	___aldiv@sign,f
  3404  0010'                    l188:
  3405  0010' 1F89'              	btfss	___aldiv@dividend+3,7
  3406  0011' 2821'              	goto	l1548
  3407  0012' 0986'              	comf	___aldiv@dividend,f
  3408  0013' 0987'              	comf	___aldiv@dividend+1,f
  3409  0014' 0988'              	comf	___aldiv@dividend+2,f
  3410  0015' 0989'              	comf	___aldiv@dividend+3,f
  3411  0016' 0A86'              	incf	___aldiv@dividend,f
  3412  0017' 1903               	skipnz
  3413  0018' 0A87'              	incf	___aldiv@dividend+1,f
  3414  0019' 1903               	skipnz
  3415  001A' 0A88'              	incf	___aldiv@dividend+2,f
  3416  001B' 1903               	skipnz
  3417  001C' 0A89'              	incf	___aldiv@dividend+3,f
  3418  001D' 3001               	movlw	1
  3419  001E' 00FF               	movwf	127
  3420  001F' 087F               	movf	127,w
  3421  0020' 0681'              	xorwf	___aldiv@sign,f
  3422  0021'                    l1548:
  3423  0021' 3000               	movlw	0
  3424  0022' 0085'              	movwf	___aldiv@quotient+3
  3425  0023' 3000               	movlw	0
  3426  0024' 0084'              	movwf	___aldiv@quotient+2
  3427  0025' 3000               	movlw	0
  3428  0026' 0083'              	movwf	___aldiv@quotient+1
  3429  0027' 3000               	movlw	0
  3430  0028' 0082'              	movwf	___aldiv@quotient
  3431  0029' 0805'              	movf	___aldiv@divisor+3,w
  3432  002A' 0404'              	iorwf	___aldiv@divisor+2,w
  3433  002B' 0403'              	iorwf	___aldiv@divisor+1,w
  3434  002C' 0402'              	iorwf	___aldiv@divisor,w
  3435  002D' 1903               	skipnz
  3436  002E' 2876'              	goto	l1572
  3437  002F' 0180'              	clrf	___aldiv@counter
  3438  0030' 0A80'              	incf	___aldiv@counter,f
  3439  0031'                    l1558:
  3440  0031' 1B85'              	btfsc	___aldiv@divisor+3,7
  3441  0032' 2841'              	goto	l1560
  3442  0033' 3001               	movlw	1
  3443  0034' 008A'              	movwf	??___aldiv
  3444  0035'                    u2225:
  3445  0035' 1003               	clrc
  3446  0036' 0D82'              	rlf	___aldiv@divisor,f
  3447  0037' 0D83'              	rlf	___aldiv@divisor+1,f
  3448  0038' 0D84'              	rlf	___aldiv@divisor+2,f
  3449  0039' 0D85'              	rlf	___aldiv@divisor+3,f
  3450  003A' 0B8A'              	decfsz	??___aldiv,f
  3451  003B' 2835'              	goto	u2225
  3452  003C' 3001               	movlw	1
  3453  003D' 00FF               	movwf	127
  3454  003E' 087F               	movf	127,w
  3455  003F' 0780'              	addwf	___aldiv@counter,f
  3456  0040' 2831'              	goto	l1558
  3457  0041'                    l1560:
  3458  0041' 3001               	movlw	1
  3459  0042' 008A'              	movwf	??___aldiv
  3460  0043'                    u2245:
  3461  0043' 1003               	clrc
  3462  0044' 0D82'              	rlf	___aldiv@quotient,f
  3463  0045' 0D83'              	rlf	___aldiv@quotient+1,f
  3464  0046' 0D84'              	rlf	___aldiv@quotient+2,f
  3465  0047' 0D85'              	rlf	___aldiv@quotient+3,f
  3466  0048' 0B8A'              	decfsz	??___aldiv,f
  3467  0049' 2843'              	goto	u2245
  3468  004A' 0805'              	movf	___aldiv@divisor+3,w
  3469  004B' 0209'              	subwf	___aldiv@dividend+3,w
  3470  004C' 1D03               	skipz
  3471  004D' 2858'              	goto	u2255
  3472  004E' 0804'              	movf	___aldiv@divisor+2,w
  3473  004F' 0208'              	subwf	___aldiv@dividend+2,w
  3474  0050' 1D03               	skipz
  3475  0051' 2858'              	goto	u2255
  3476  0052' 0803'              	movf	___aldiv@divisor+1,w
  3477  0053' 0207'              	subwf	___aldiv@dividend+1,w
  3478  0054' 1D03               	skipz
  3479  0055' 2858'              	goto	u2255
  3480  0056' 0802'              	movf	___aldiv@divisor,w
  3481  0057' 0206'              	subwf	___aldiv@dividend,w
  3482  0058'                    u2255:
  3483  0058' 1C03               	skipc
  3484  0059' 2869'              	goto	l1568
  3485  005A' 0802'              	movf	___aldiv@divisor,w
  3486  005B' 0286'              	subwf	___aldiv@dividend,f
  3487  005C' 0803'              	movf	___aldiv@divisor+1,w
  3488  005D' 1C03               	skipc
  3489  005E' 0F03'              	incfsz	___aldiv@divisor+1,w
  3490  005F' 0287'              	subwf	___aldiv@dividend+1,f
  3491  0060' 0804'              	movf	___aldiv@divisor+2,w
  3492  0061' 1C03               	skipc
  3493  0062' 0F04'              	incfsz	___aldiv@divisor+2,w
  3494  0063' 0288'              	subwf	___aldiv@dividend+2,f
  3495  0064' 0805'              	movf	___aldiv@divisor+3,w
  3496  0065' 1C03               	skipc
  3497  0066' 0F05'              	incfsz	___aldiv@divisor+3,w
  3498  0067' 0289'              	subwf	___aldiv@dividend+3,f
  3499  0068' 1402'              	bsf	___aldiv@quotient,0
  3500  0069'                    l1568:
  3501  0069' 3001               	movlw	1
  3502  006A'                    u2265:
  3503  006A' 1003               	clrc
  3504  006B' 0C85'              	rrf	___aldiv@divisor+3,f
  3505  006C' 0C84'              	rrf	___aldiv@divisor+2,f
  3506  006D' 0C83'              	rrf	___aldiv@divisor+1,f
  3507  006E' 0C82'              	rrf	___aldiv@divisor,f
  3508  006F' 3EFF               	addlw	-1
  3509  0070' 1D03               	skipz
  3510  0071' 286A'              	goto	u2265
  3511  0072' 3001               	movlw	1
  3512  0073' 0280'              	subwf	___aldiv@counter,f
  3513  0074' 1D03               	btfss	3,2
  3514  0075' 2841'              	goto	l1560
  3515  0076'                    l1572:
  3516  0076' 0801'              	movf	___aldiv@sign,w
  3517  0077' 1903               	btfsc	3,2
  3518  0078' 2884'              	goto	l1576
  3519  0079' 0982'              	comf	___aldiv@quotient,f
  3520  007A' 0983'              	comf	___aldiv@quotient+1,f
  3521  007B' 0984'              	comf	___aldiv@quotient+2,f
  3522  007C' 0985'              	comf	___aldiv@quotient+3,f
  3523  007D' 0A82'              	incf	___aldiv@quotient,f
  3524  007E' 1903               	skipnz
  3525  007F' 0A83'              	incf	___aldiv@quotient+1,f
  3526  0080' 1903               	skipnz
  3527  0081' 0A84'              	incf	___aldiv@quotient+2,f
  3528  0082' 1903               	skipnz
  3529  0083' 0A85'              	incf	___aldiv@quotient+3,f
  3530  0084'                    l1576:
  3531  0084' 0805'              	movf	___aldiv@quotient+3,w
  3532  0085' 0085'              	movwf	?___aldiv+3
  3533  0086' 0804'              	movf	___aldiv@quotient+2,w
  3534  0087' 0084'              	movwf	?___aldiv+2
  3535  0088' 0803'              	movf	___aldiv@quotient+1,w
  3536  0089' 0083'              	movwf	?___aldiv+1
  3537  008A' 0802'              	movf	___aldiv@quotient,w
  3538  008B' 0082'              	movwf	?___aldiv
  3539  008C' 0008               	return
  3540  008D'                    __end_of___aldiv:
  3541                           
  3542                           	psect	text19
  3543  0000'                    __ptext19:	
  3544 ;; *************** function _MAX7219_Setup *****************
  3545 ;; Defined at:
  3546 ;;		line 203 in file "Stroboscope.c"
  3547 ;; Parameters:    Size  Location     Type
  3548 ;;		None
  3549 ;; Auto vars:     Size  Location     Type
  3550 ;;		None
  3551 ;; Return value:  Size  Location     Type
  3552 ;;                  1    wreg      void 
  3553 ;; Registers used:
  3554 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3555 ;; Tracked objects:
  3556 ;;		On entry : B00/0
  3557 ;;		On exit  : 100/0
  3558 ;;		Unchanged: 0/0
  3559 ;; Data sizes:     COMMON   BANK0   BANK1
  3560 ;;      Params:         0       0       0
  3561 ;;      Locals:         0       0       0
  3562 ;;      Temps:          0       0       0
  3563 ;;      Totals:         0       0       0
  3564 ;;Total ram usage:        0 bytes
  3565 ;; Hardware stack levels used: 1
  3566 ;; Hardware stack levels required when called: 2
  3567 ;; This function calls:
  3568 ;;		_SPI_send
  3569 ;; This function is called by:
  3570 ;;		_main
  3571 ;; This function uses a non-reentrant model
  3572 ;;
  3573                           
  3574  0000'                    _MAX7219_Setup:	
  3575                           ;psect for function _MAX7219_Setup
  3576                           
  3577                           
  3578                           ;Stroboscope.c: 204: SPI_send(0x0F,0x00);
  3579                           
  3580                           ;incstack = 0
  3581                           ; Regs used in _MAX7219_Setup: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3582  0000' 0182'              	clrf	SPI_send@data
  3583  0001' 300F               	movlw	15
  3584  0002' 2000'              	fcall	_SPI_send
  3585                           
  3586                           ;Stroboscope.c: 205: SPI_send(0x09,0xFF);
  3587  0003' 30FF               	movlw	255
  3588  0004' 0082'              	movwf	SPI_send@data
  3589  0005' 3009               	movlw	9
  3590  0006' 2000'              	fcall	_SPI_send
  3591                           
  3592                           ;Stroboscope.c: 206: SPI_send(0x0A,0x08);
  3593  0007' 3008               	movlw	8
  3594  0008' 0082'              	movwf	SPI_send@data
  3595  0009' 300A               	movlw	10
  3596  000A' 2000'              	fcall	_SPI_send
  3597                           
  3598                           ;Stroboscope.c: 207: SPI_send(0x0B,0x07);
  3599  000B' 3007               	movlw	7
  3600  000C' 0082'              	movwf	SPI_send@data
  3601  000D' 300B               	movlw	11
  3602  000E' 2000'              	fcall	_SPI_send
  3603                           
  3604                           ;Stroboscope.c: 208: SPI_send(0x0C,0x01);
  3605  000F' 0182'              	clrf	SPI_send@data
  3606  0010' 0A82'              	incf	SPI_send@data,f
  3607  0011' 300C               	movlw	12
  3608  0012' 2000'              	fcall	_SPI_send
  3609  0013' 0008               	return
  3610  0014'                    __end_of_MAX7219_Setup:
  3611                           
  3612                           	psect	text20
  3613  0000'                    __ptext20:	
  3614 ;; *************** function _SPI_send *****************
  3615 ;; Defined at:
  3616 ;;		line 184 in file "Stroboscope.c"
  3617 ;; Parameters:    Size  Location     Type
  3618 ;;  addr            1    wreg     unsigned char 
  3619 ;;  data            1    2[COMMON] unsigned char 
  3620 ;; Auto vars:     Size  Location     Type
  3621 ;;  addr            1    4[COMMON] unsigned char 
  3622 ;;  i               2    5[COMMON] int 
  3623 ;; Return value:  Size  Location     Type
  3624 ;;                  1    wreg      void 
  3625 ;; Registers used:
  3626 ;;		wreg, status,2, status,0, btemp+1
  3627 ;; Tracked objects:
  3628 ;;		On entry : 100/0
  3629 ;;		On exit  : 100/0
  3630 ;;		Unchanged: 0/0
  3631 ;; Data sizes:     COMMON   BANK0   BANK1
  3632 ;;      Params:         1       0       0
  3633 ;;      Locals:         3       0       0
  3634 ;;      Temps:          1       0       0
  3635 ;;      Totals:         5       0       0
  3636 ;;Total ram usage:        5 bytes
  3637 ;; Hardware stack levels used: 1
  3638 ;; Hardware stack levels required when called: 1
  3639 ;; This function calls:
  3640 ;;		Nothing
  3641 ;; This function is called by:
  3642 ;;		_MAX7219_Setup
  3643 ;;		_display_digit
  3644 ;; This function uses a non-reentrant model
  3645 ;;
  3646                           
  3647  0000'                    _SPI_send:	
  3648                           ;psect for function _SPI_send
  3649                           
  3650                           
  3651                           ;incstack = 0
  3652                           ; Regs used in _SPI_send: [wreg+status,2+status,0+btemp+1]
  3653                           ;SPI_send@addr stored from wreg
  3654  0000' 0084'              	movwf	SPI_send@addr
  3655                           
  3656                           ;Stroboscope.c: 185: int i;;Stroboscope.c: 186: PORTCbits.RC1 = 0;
  3657  0001' 1087               	bcf	7,1	;volatile
  3658                           
  3659                           ;Stroboscope.c: 187: for (i=0; i<8; i++){
  3660  0002' 0185'              	clrf	SPI_send@i
  3661  0003' 0186'              	clrf	SPI_send@i+1
  3662  0004'                    l80:
  3663                           
  3664                           ;Stroboscope.c: 188: PORTCbits.RC0 = 0;
  3665  0004' 1283               	bcf	3,5	;RP0=0, select bank0
  3666  0005' 1007               	bcf	7,0	;volatile
  3667                           
  3668                           ;Stroboscope.c: 189: PORTCbits.RC2 = (addr & 0b10000000) ? 1:0 ;
  3669  0006' 1F84'              	btfss	SPI_send@addr,7
  3670  0007' 280B'              	goto	u1250
  3671  0008' 1283               	bcf	3,5	;RP0=0, select bank0
  3672  0009' 1507               	bsf	7,2	;volatile
  3673  000A' 280D'              	goto	u1264
  3674  000B'                    u1250:
  3675  000B' 1283               	bcf	3,5	;RP0=0, select bank0
  3676  000C' 1107               	bcf	7,2	;volatile
  3677  000D'                    u1264:
  3678                           
  3679                           ;Stroboscope.c: 190: PORTCbits.RC0 = 1;
  3680  000D' 1407               	bsf	7,0	;volatile
  3681                           
  3682                           ;Stroboscope.c: 191: addr = addr << 1;
  3683  000E' 0804'              	movf	SPI_send@addr,w
  3684  000F' 0083'              	movwf	??_SPI_send
  3685  0010' 0703'              	addwf	??_SPI_send,w
  3686  0011' 0084'              	movwf	SPI_send@addr
  3687  0012' 3001               	movlw	1
  3688  0013' 0785'              	addwf	SPI_send@i,f
  3689  0014' 1803               	skipnc
  3690  0015' 0A86'              	incf	SPI_send@i+1,f
  3691  0016' 3000               	movlw	0
  3692  0017' 0786'              	addwf	SPI_send@i+1,f
  3693  0018' 0806'              	movf	SPI_send@i+1,w
  3694  0019' 3A80               	xorlw	128
  3695  001A' 00FF               	movwf	127
  3696  001B' 3080               	movlw	128
  3697  001C' 027F               	subwf	127,w
  3698  001D' 1D03               	skipz
  3699  001E' 2821'              	goto	u1275
  3700  001F' 3008               	movlw	8
  3701  0020' 0205'              	subwf	SPI_send@i,w
  3702  0021'                    u1275:
  3703  0021' 1C03               	skipc
  3704  0022' 2804'              	goto	l80
  3705                           
  3706                           ;Stroboscope.c: 192: };Stroboscope.c: 193: for (i=0; i<8; i++){
  3707  0023' 0185'              	clrf	SPI_send@i
  3708  0024' 0186'              	clrf	SPI_send@i+1
  3709  0025'                    l82:
  3710                           
  3711                           ;Stroboscope.c: 194: PORTCbits.RC0 = 0;
  3712  0025' 1283               	bcf	3,5	;RP0=0, select bank0
  3713  0026' 1007               	bcf	7,0	;volatile
  3714                           
  3715                           ;Stroboscope.c: 195: PORTCbits.RC2 = (data & 0b10000000) ? 1:0 ;
  3716  0027' 1F82'              	btfss	SPI_send@data,7
  3717  0028' 282C'              	goto	u1280
  3718  0029' 1283               	bcf	3,5	;RP0=0, select bank0
  3719  002A' 1507               	bsf	7,2	;volatile
  3720  002B' 282E'              	goto	u1294
  3721  002C'                    u1280:
  3722  002C' 1283               	bcf	3,5	;RP0=0, select bank0
  3723  002D' 1107               	bcf	7,2	;volatile
  3724  002E'                    u1294:
  3725                           
  3726                           ;Stroboscope.c: 196: PORTCbits.RC0 = 1;
  3727  002E' 1407               	bsf	7,0	;volatile
  3728                           
  3729                           ;Stroboscope.c: 197: data = data << 1;
  3730  002F' 0802'              	movf	SPI_send@data,w
  3731  0030' 0083'              	movwf	??_SPI_send
  3732  0031' 0703'              	addwf	??_SPI_send,w
  3733  0032' 0082'              	movwf	SPI_send@data
  3734  0033' 3001               	movlw	1
  3735  0034' 0785'              	addwf	SPI_send@i,f
  3736  0035' 1803               	skipnc
  3737  0036' 0A86'              	incf	SPI_send@i+1,f
  3738  0037' 3000               	movlw	0
  3739  0038' 0786'              	addwf	SPI_send@i+1,f
  3740  0039' 0806'              	movf	SPI_send@i+1,w
  3741  003A' 3A80               	xorlw	128
  3742  003B' 00FF               	movwf	127
  3743  003C' 3080               	movlw	128
  3744  003D' 027F               	subwf	127,w
  3745  003E' 1D03               	skipz
  3746  003F' 2842'              	goto	u1305
  3747  0040' 3008               	movlw	8
  3748  0041' 0205'              	subwf	SPI_send@i,w
  3749  0042'                    u1305:
  3750  0042' 1C03               	skipc
  3751  0043' 2825'              	goto	l82
  3752                           
  3753                           ;Stroboscope.c: 198: };Stroboscope.c: 199: PORTCbits.RC0 = 0;
  3754  0044' 1283               	bcf	3,5	;RP0=0, select bank0
  3755  0045' 1007               	bcf	7,0	;volatile
  3756                           
  3757                           ;Stroboscope.c: 200: PORTCbits.RC1 = 1;
  3758  0046' 1487               	bsf	7,1	;volatile
  3759  0047' 0008               	return
  3760  0048'                    __end_of_SPI_send:
  3761                           
  3762                           	psect	text21
  3763  0000'                    __ptext21:	
  3764 ;; *************** function _ButtonBounce *****************
  3765 ;; Defined at:
  3766 ;;		line 250 in file "Stroboscope.c"
  3767 ;; Parameters:    Size  Location     Type
  3768 ;;		None
  3769 ;; Auto vars:     Size  Location     Type
  3770 ;;		None
  3771 ;; Return value:  Size  Location     Type
  3772 ;;                  1    wreg      void 
  3773 ;; Registers used:
  3774 ;;		wreg, status,2, status,0
  3775 ;; Tracked objects:
  3776 ;;		On entry : 0/0
  3777 ;;		On exit  : 0/0
  3778 ;;		Unchanged: 0/0
  3779 ;; Data sizes:     COMMON   BANK0   BANK1
  3780 ;;      Params:         0       0       0
  3781 ;;      Locals:         0       0       0
  3782 ;;      Temps:          4       0       0
  3783 ;;      Totals:         4       0       0
  3784 ;;Total ram usage:        4 bytes
  3785 ;; Hardware stack levels used: 1
  3786 ;; Hardware stack levels required when called: 1
  3787 ;; This function calls:
  3788 ;;		Nothing
  3789 ;; This function is called by:
  3790 ;;		_main
  3791 ;; This function uses a non-reentrant model
  3792 ;;
  3793                           
  3794  0000'                    _ButtonBounce:	
  3795                           ;psect for function _ButtonBounce
  3796                           
  3797                           
  3798                           ;Stroboscope.c: 251: static long Button_f = 0;;Stroboscope.c: 254: Button_f += !PORTAbit
      +                          s.RA2;
  3799                           
  3800                           ;incstack = 0
  3801                           ; Regs used in _ButtonBounce: [wreg+status,2+status,0]
  3802  0000' 1003               	clrc
  3803  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  3804  0002' 1D05               	btfss	5,2	;volatile
  3805  0003' 1403               	setc
  3806  0004' 3000               	movlw	0
  3807  0005' 1803               	skipnc
  3808  0006' 3001               	movlw	1
  3809  0007' 0082'              	movwf	??_ButtonBounce
  3810  0008' 0183'              	clrf	??_ButtonBounce+1
  3811  0009' 0184'              	clrf	??_ButtonBounce+2
  3812  000A' 0185'              	clrf	??_ButtonBounce+3
  3813  000B' 0802'              	movf	??_ButtonBounce,w
  3814  000C' 1683               	bsf	3,5	;RP0=1, select bank1
  3815  000D' 0780'              	addwf	ButtonBounce@Button_f^(0+128),f
  3816  000E' 0803'              	movf	??_ButtonBounce+1,w
  3817  000F' 1103               	clrz
  3818  0010' 1803               	skipnc
  3819  0011' 3E01               	addlw	1
  3820  0012' 1D03               	btfss	3,2
  3821  0013' 0780'              	addwf	(ButtonBounce@Button_f+1)^(0+128),f
  3822  0014' 0804'              	movf	??_ButtonBounce+2,w
  3823  0015' 1103               	clrz
  3824  0016' 1803               	skipnc
  3825  0017' 3E01               	addlw	1
  3826  0018' 1D03               	btfss	3,2
  3827  0019' 0780'              	addwf	(ButtonBounce@Button_f+2)^(0+128),f
  3828  001A' 0805'              	movf	??_ButtonBounce+3,w
  3829  001B' 1103               	clrz
  3830  001C' 1803               	skipnc
  3831  001D' 3E01               	addlw	1
  3832  001E' 1D03               	btfss	3,2
  3833  001F' 0780'              	addwf	(ButtonBounce@Button_f+3)^(0+128),f
  3834                           
  3835                           ;Stroboscope.c: 257: if (Button_f >= 60000){
  3836  0020' 1B80'              	btfsc	(ButtonBounce@Button_f+3)^(0+128),7
  3837  0021' 2841'              	goto	l1496
  3838  0022' 0800'              	movf	(ButtonBounce@Button_f+3)^(0+128),w
  3839  0023' 1D03               	btfss	3,2
  3840  0024' 2832'              	goto	l1494
  3841  0025' 0800'              	movf	(ButtonBounce@Button_f+2)^(0+128),w
  3842  0026' 1D03               	btfss	3,2
  3843  0027' 2832'              	goto	l1494
  3844  0028' 30EA               	movlw	234
  3845  0029' 0200'              	subwf	(ButtonBounce@Button_f+1)^(0+128),w
  3846  002A' 1D03               	skipz
  3847  002B' 2830'              	goto	u2123
  3848  002C' 3060               	movlw	96
  3849  002D' 0200'              	subwf	ButtonBounce@Button_f^(0+128),w
  3850  002E' 1D03               	skipz
  3851  002F' 2830'              	goto	u2123
  3852  0030'                    u2123:
  3853  0030' 1C03               	btfss	3,0
  3854  0031' 2841'              	goto	l1496
  3855  0032'                    l1494:
  3856                           
  3857                           ;Stroboscope.c: 258: speedRPM = 1;
  3858  0032' 3001               	movlw	1
  3859  0033' 1283               	bcf	3,5	;RP0=0, select bank0
  3860  0034' 0082'              	movwf	_speedRPM
  3861  0035' 3000               	movlw	0
  3862  0036' 0083'              	movwf	_speedRPM+1
  3863                           
  3864                           ;Stroboscope.c: 259: Button_f = 0;
  3865  0037' 3000               	movlw	0
  3866  0038' 1683               	bsf	3,5	;RP0=1, select bank1
  3867  0039' 0080'              	movwf	(ButtonBounce@Button_f+3)^(0+128)
  3868  003A' 3000               	movlw	0
  3869  003B' 0080'              	movwf	(ButtonBounce@Button_f+2)^(0+128)
  3870  003C' 3000               	movlw	0
  3871  003D' 0080'              	movwf	(ButtonBounce@Button_f+1)^(0+128)
  3872  003E' 3000               	movlw	0
  3873  003F' 0080'              	movwf	ButtonBounce@Button_f^(0+128)
  3874                           
  3875                           ;Stroboscope.c: 260: }
  3876  0040' 0008               	return
  3877  0041'                    l1496:
  3878                           
  3879                           ;Stroboscope.c: 262: else if (Button_f && PORTAbits.RA2){
  3880  0041' 1683               	bsf	3,5	;RP0=1, select bank1
  3881  0042' 0800'              	movf	(ButtonBounce@Button_f+3)^(0+128),w
  3882  0043' 0400'              	iorwf	(ButtonBounce@Button_f+2)^(0+128),w
  3883  0044' 0400'              	iorwf	(ButtonBounce@Button_f+1)^(0+128),w
  3884  0045' 0400'              	iorwf	ButtonBounce@Button_f^(0+128),w
  3885  0046' 1903               	skipnz
  3886  0047' 2856'              	goto	l111
  3887  0048' 1283               	bcf	3,5	;RP0=0, select bank0
  3888  0049' 1D05               	btfss	5,2	;volatile
  3889  004A' 2856'              	goto	l111
  3890                           
  3891                           ;Stroboscope.c: 263: button_pressed = 1;
  3892  004B' 1400'              	bsf	_button_pressed/(0+8),_button_pressed& (0+7)
  3893                           
  3894                           ;Stroboscope.c: 264: Button_f = 0;
  3895  004C' 3000               	movlw	0
  3896  004D' 1683               	bsf	3,5	;RP0=1, select bank1
  3897  004E' 0080'              	movwf	(ButtonBounce@Button_f+3)^(0+128)
  3898  004F' 3000               	movlw	0
  3899  0050' 0080'              	movwf	(ButtonBounce@Button_f+2)^(0+128)
  3900  0051' 3000               	movlw	0
  3901  0052' 0080'              	movwf	(ButtonBounce@Button_f+1)^(0+128)
  3902  0053' 3000               	movlw	0
  3903  0054' 0080'              	movwf	ButtonBounce@Button_f^(0+128)
  3904                           
  3905                           ;Stroboscope.c: 265: }
  3906  0055' 0008               	return
  3907  0056'                    l111:
  3908                           
  3909                           ;Stroboscope.c: 267: else {;Stroboscope.c: 268: button_pressed = 0;
  3910  0056' 1000'              	bcf	_button_pressed/(0+8),_button_pressed& (0+7)
  3911  0057' 0008               	return
  3912  0058'                    __end_of_ButtonBounce:
  3913                           
  3914                           	psect	text22
  3915  0000'                    __ptext22:	
  3916 ;; *************** function _ISR_function *****************
  3917 ;; Defined at:
  3918 ;;		line 73 in file "Stroboscope.c"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;		None
  3921 ;; Auto vars:     Size  Location     Type
  3922 ;;		None
  3923 ;; Return value:  Size  Location     Type
  3924 ;;                  1    wreg      void 
  3925 ;; Registers used:
  3926 ;;		wreg
  3927 ;; Tracked objects:
  3928 ;;		On entry : 0/0
  3929 ;;		On exit  : 0/0
  3930 ;;		Unchanged: 0/0
  3931 ;; Data sizes:     COMMON   BANK0   BANK1
  3932 ;;      Params:         0       0       0
  3933 ;;      Locals:         0       0       0
  3934 ;;      Temps:          2       0       0
  3935 ;;      Totals:         2       0       0
  3936 ;;Total ram usage:        2 bytes
  3937 ;; Hardware stack levels used: 1
  3938 ;; This function calls:
  3939 ;;		Nothing
  3940 ;; This function is called by:
  3941 ;;		Interrupt level 1
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           
  3945  0000'                    _ISR_function:	
  3946                           ;psect for function _ISR_function
  3947                           
  3948                           
  3949                           ;Stroboscope.c: 74: if (INTCONbits.RAIF){
  3950  0000' 1C0B               	btfss	11,0	;volatile
  3951  0001' 2804'              	goto	i1l53
  3952                           
  3953                           ;Stroboscope.c: 75: int_F = 1;
  3954  0002' 1400'              	bsf	_int_F/(0+8),_int_F& (0+7)	;volatile
  3955                           
  3956                           ;Stroboscope.c: 76: INTCONbits.RAIF = 0;
  3957  0003' 100B               	bcf	11,0	;volatile
  3958  0004'                    i1l53:
  3959                           
  3960                           ;Stroboscope.c: 77: };Stroboscope.c: 78: if (INTCONbits.T0IF) {
  3961  0004' 1D0B               	btfss	11,2	;volatile
  3962  0005' 2819'              	goto	i1l55
  3963                           
  3964                           ;Stroboscope.c: 79: INTCONbits.T0IF = 0;
  3965  0006' 110B               	bcf	11,2	;volatile
  3966                           
  3967                           ;Stroboscope.c: 80: millisCount++;
  3968  0007' 3001               	movlw	1
  3969  0008' 1683               	bsf	3,5	;RP0=1, select bank1
  3970  0009' 0780'              	addwf	_millisCount^(0+128),f	;volatile
  3971  000A' 3000               	movlw	0
  3972  000B' 1803               	skipnc
  3973  000C' 3001               	movlw	1
  3974  000D' 0780'              	addwf	(_millisCount+1)^(0+128),f	;volatile
  3975  000E' 3000               	movlw	0
  3976  000F' 1803               	skipnc
  3977  0010' 3001               	movlw	1
  3978  0011' 0780'              	addwf	(_millisCount+2)^(0+128),f	;volatile
  3979  0012' 3000               	movlw	0
  3980  0013' 1803               	skipnc
  3981  0014' 3001               	movlw	1
  3982  0015' 0780'              	addwf	(_millisCount+3)^(0+128),f	;volatile
  3983                           
  3984                           ;Stroboscope.c: 81: TMR0 = 163;
  3985  0016' 30A3               	movlw	163
  3986  0017' 1283               	bcf	3,5	;RP0=0, select bank0
  3987  0018' 0081               	movwf	1	;volatile
  3988  0019'                    i1l55:
  3989  0019' 0801'              	movf	??_ISR_function+1,w
  3990  001A' 008A               	movwf	10
  3991  001B' 0E00'              	swapf	??_ISR_function,w
  3992  001C' 0083               	movwf	3
  3993  001D' 0EFE               	swapf	126,f
  3994  001E' 0E7E               	swapf	126,w
  3995  001F' 0009               	retfie
  3996  0020'                    __end_of_ISR_function:
  3997  007E                     btemp	set	126	;btemp
  3998  007E                     wtemp0	set	126
  3999                           
  4000                           	psect	intentry
  4001  0000'                    __pintentry:	
  4002                           ;incstack = 0
  4003                           ; Regs used in _ISR_function: [wreg]
  4004                           
  4005  0000'                    interrupt_function:
  4006  007E                     saved_w	set	btemp
  4007  0000' 00FE               	movwf	btemp
  4008  0001' 0E03               	swapf	3,w
  4009  0002' 0080'              	movwf	??_ISR_function
  4010  0003' 080A               	movf	10,w
  4011  0004' 0081'              	movwf	??_ISR_function+1
  4012  0005' 2800'              	ljmp	_ISR_function
  4013                           
  4014                           	psect	config
  4015                           
  4016                           ;Config register CONFIG @ 0x2007
  4017                           ;	Oscillator Selection bits
  4018                           ;	FOSC = INTOSCIO, INTOSCIO oscillator: I/O function on RA4/OSC2/CLKOUT pin, I/O functio
      +                          n on RA5/OSC1/CLKIN
  4019                           ;	Watchdog Timer Enable bit
  4020                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4021                           ;	Power-up Timer Enable bit
  4022                           ;	PWRTE = OFF, PWRT disabled
  4023                           ;	MCLR Pin Function Select bit
  4024                           ;	MCLRE = OFF, MCLR pin function is digital input, MCLR internally tied to VDD
  4025                           ;	Code Protection bit
  4026                           ;	CP = OFF, Program memory code protection is disabled
  4027                           ;	Internal Oscillator Frequency Select bit
  4028                           ;	IOSCFS = 8MHZ, 8 MHz
  4029                           ;	Brown-out Reset Selection bits
  4030                           ;	BOREN = OFF, BOR Disabled
  4031  2007                     	org	8199
  4032  2007  3CD4               	dw	15572

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     74      79
    BANK1            32      0      14

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___aldiv
    _millis->___lldiv
    _micros->___awtoft
    _micros->___lmul
    ___lltoft->___lmul
    ___fttol->___awtoft
    ___fttol->___lmul
    ___ftmul->___awtoft
    ___ftadd->___awtoft
    ___ftadd->___lmul
    ___awtoft->___ftpack
    _display_num->___lldiv
    _display_num->___llmod
    _display_digit->___llmod
    ___lwtoft->___ftpack
    _MAX7219_Setup->_SPI_send

Critical Paths under _ISR_function in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___ftge
    _millis->___lldiv
    _micros->___fttol
    ___lltoft->___lmul
    ___fttol->___ftadd
    ___ftmul->___awtoft
    ___ftmul->___lwtoft
    ___ftadd->___ftmul
    _display_num->___lldiv
    _display_num->_display_digit
    _display_digit->___llmod
    ___ftge->_micros

Critical Paths under _ISR_function in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_function in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    13      4   29838
                                             57 BANK0     17    13      4
                       _ButtonBounce
                      _MAX7219_Setup
                            ___aldiv
                             ___ftge
                            ___ftmul
                            ___lbmod
                           ___lltoft
                           ___lwtoft
                             ___wmul
                        _display_num
                             _micros
                             _millis
 ---------------------------------------------------------------------------------
 (1) _millis                                               8     4      4     441
                                              5 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _micros                                               8     4      4   15026
                                             43 BANK0      8     4      4
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                           ___lltoft
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     220
                                              2 COMMON     9     1      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             5     1      4    3199
                                              4 BANK0      5     1      4
                           ___ftpack
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             13     9      4     316
                                             30 BANK0     13     9      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___lltoft (ARG)
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3822
                                              3 BANK0     15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    4359
                                             18 BANK0     12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lltoft (ARG)
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    3076
                                             10 COMMON     1     1      0
                                              0 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _display_num                                          6     2      4    1860
                                              5 BANK0      6     2      4
                            ___lldiv
                            ___llmod
                      _display_digit
 ---------------------------------------------------------------------------------
 (2) _display_digit                                        4     0      4     738
                                              1 BANK0      4     0      4
                           _SPI_send
                            ___llmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     386
                                              2 COMMON     9     1      8
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     418
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     604
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    3051
                                              0 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2866
                                              2 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___lbmod                                              6     5      1     223
                                              2 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (1) ___ftge                                               6     0      6     392
                                             51 BANK0      6     0      6
                            ___ftmul (ARG)
                           ___lltoft (ARG)
                           ___lwtoft (ARG)
                             _micros (ARG)
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             15     7      8     428
                                              2 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _MAX7219_Setup                                        0     0      0     566
                           _SPI_send
 ---------------------------------------------------------------------------------
 (3) _SPI_send                                             5     4      1     566
                                              2 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (1) _ButtonBounce                                         4     4      0       0
                                              2 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR_function                                         2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ButtonBounce
   _MAX7219_Setup
     _SPI_send
   ___aldiv
   ___ftge
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___lltoft (ARG)
       ___ftpack
       ___lmul (ARG)
     ___lwtoft (ARG)
     _micros (ARG)
       ___awtoft
       ___ftadd
         ___awtoft (ARG)
         ___ftmul (ARG)
         ___ftpack (ARG)
         ___lltoft (ARG)
         ___lmul (ARG)
       ___ftmul
       ___fttol
         ___awtoft (ARG)
         ___ftadd (ARG)
         ___ftmul (ARG)
         ___lltoft (ARG)
         ___lmul (ARG)
       ___lltoft
       ___lmul
   ___ftmul
   ___lbmod
   ___lltoft
   ___lwtoft
   ___wmul
   _display_num
     ___lldiv
     ___llmod
     _display_digit
       _SPI_send
       ___llmod (ARG)
   _micros
   _millis
     ___lldiv

 _ISR_function (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK1               20      0       E       5       43.8%
BITBANK1            20      0       0       7        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4A      4F       4       98.8%
BITBANK0            50      0       0       3        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       C       1       85.7%
BITCOMMON            E      0       1       0        7.1%
CODE                 0      0       0       0        0.0%
DATA                 0      0      69       8        0.0%
ABS                  0      0      69       6        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Jul 28 22:02:50 2023

                     l80 0004                       l72 01B5                       l82 0025  
           ?_display_num 0005                       fsr 0004      ___wmul@multiplicand 0004  
           ___ftadd@exp1 001D             ___ftadd@exp2 001C             ___ftadd@sign 001B  
                    l111 0056                      l117 000A                      l420 0051  
                    l336 004B                      l360 00A0                      l337 0053  
                    l188 0010                      l437 0019                      indf 0000  
                   l2000 0066                     l2020 00B2                     l2012 008A  
                   l1222 0020                     l2030 00E1                     l2014 0093  
                   l1240 0021                     l1400 000D                     l2016 009C  
                   l2024 00C5                     l2008 007B                     l1218 0009  
                   l2042 01B0                     l2018 00A7                     l2026 00D6  
                   l2034 00F6                     l1252 0056                     l1404 0016  
                   l2052 01C6                     l2044 0154                     l1238 0011  
                   l1422 003D                     l1248 0049                     l1434 0060  
                   l1426 004D                     l1604 0004                     l1526 0002  
                   l1438 006E                     l1560 0041                     l1730 000F  
                   l1810 0077                     l1572 0076                     l1548 0021  
                   l1812 007B                     l1804 0066                     l1494 0032  
                   l1558 0031                     l1742 0036                     l1734 001B  
                   l1726 0008                     l1910 0018                     l1830 00C4  
                   l1822 009C                     l1496 0041                     l1576 0084  
                   l1568 0069                     l1584 000F                     l1736 0020  
                   l1840 00E7                     l1808 0072                     l1746 0049  
                   l1914 0036                     l1826 00B2                     l1818 0090  
                   l1850 0014                     l1930 0014                     l1588 001E  
                   l1748 003B                     l1908 0008                     l1940 0004  
                   l1780 002A                     l1918 0043                     l1766 000A  
                   l1776 0023                     l1856 0028                     l1928 0002  
                   l1786 0039                     l1890 007D                     l1874 0047  
                   l1798 0051                     l1886 006D                     l1878 0057  
         ?_display_digit 0001                     l1996 002F                     u1305 0042  
                   u1250 000B                     u2123 0030                     u3015 0026  
                   u1280 002C                     u1264 000D                     u2225 0035  
                   u3025 0037                     u3121 010D                     u3122 010E  
                   u1275 0021                     u1515 0023                     u3123 0113  
                   u3124 0114                     u2245 0043                     u2325 0007  
                   u2165 000B                     u1525 0038                     u3045 0007  
                   u3125 0119                     u1294 002E                     u3126 011A  
                   u2255 0058                     u2175 0012                     u1535 004A  
                   u1455 0022                     u3151 016A                     u3071 004A  
                   u3152 016B                     u3072 004B                     u2265 006A  
                   u3065 0047                     u1465 002A                     u3153 0170  
                   u3073 0050                     u3154 0171                     u3074 0051  
                   u2515 0014                     u3155 0176                     u3083 0064  
                   u3075 0056                     u3156 0177                     u3076 0057  
                   u2535 002F                     u1495 0015                     u3183 01C4  
                   u2555 0042                     u2715 0052                     u2805 0091  
                   u3197 0029                     u1935 001D                     u2745 0067  
                   u2905 0058                     u2595 005A                     u2915 0060  
                   u1965 003E                     u2775 007C                     u2955 007E  
                   u1995 0056                     i1l53 0004                     u2965 0086  
                   i1l55 0019                     u2995 000C                     _TMR0 0001  
                   _main 0000             ___ftpack@arg 0002             ___ftpack@exp 0005  
                   btemp 007E                     start 0000*            ___ftmul@cntr 0010  
           ___ftmul@sign 0011             ___fttol@exp1 002A             ___fttol@lval 0026  
        __end_of___aldiv 008D                    ?_main 0039          __end_of___ftadd 00F9  
        __end_of___lbmod 001F                    _ANSEL 0091          __end_of___lldiv 005F  
        __end_of___ftmul 00A3          __end_of___llmod 004C          __end_of___fttol 0077  
          ?_ButtonBounce 0000      ___lmul@multiplicand 0006             ___lltoft@exp 0008  
          ___awtoft@sign 000A                    _int_F 0002            ___ftpack@sign 0006  
         __pbitbssCOMMON 0000                    pclath 000A         __end_of_SPI_send 0048  
           display_num@i 0009                    status 0003                    wtemp0 007E  
        __initialization 0000             __end_of_main 01CF                   ??_main 003D  
          ___fttol@sign1 0025           ??_ButtonBounce 0002          ??_display_digit 000B  
       ___llmod@dividend 0006         __end_of___awtoft 001B         __end_of___ftpack 006C  
       __end_of___lltoft 0025         __end_of___lwtoft 0010               _TimePeriod 0008  
                 ___ftge 0000                   ___lmul 0000                ??___aldiv 000A  
                 ___wmul 0000                ??___ftadd 0018                ??___lbmod 0003  
              ??___lldiv 000A                ??___ftmul 0009                ??___llmod 000A  
              ??___fttol 0022                   _micros 0000                   _millis 0000  
  ___ftmul@f3_as_product 000D                   saved_w 007E    __end_of_MAX7219_Setup 0014  
        ___lbmod@divisor 0002  __end_of__initialization 000C          ___lbmod@counter 0006  
             ___ftadd@f1 0012               ___ftadd@f2 0015               ___ftge@ff1 0033  
             ___ftge@ff2 0036               ___awtoft@c 0000          _prevTime_button 000C  
             ___ftmul@f1 0003               ___ftmul@f2 0006               ___fttol@f1 001E  
         __pcstackCOMMON 0000             __pidataBANK0 0000               ___lltoft@c 0004  
           SPI_send@addr 0004             SPI_send@data 0002               ___lwtoft@c 0000  
              ?_SPI_send 0002           _OPTION_REGbits 0081               __pbssBANK0 0000  
             __pbssBANK1 0000     __end_of_ButtonBounce 0058               __pmaintext 0000  
                ?___ftge 0033                  ?___lmul 0002                  ?___wmul 0002  
             __pintentry 0000                  ?_micros 002B           ___lmul@product 0000  
                ?_millis 0005                ?___awtoft 0000                ?___ftpack 0002  
              ?___lltoft 0004               ??_SPI_send 0003                ?___lwtoft 0000  
          ?_ISR_function 0000                  ___aldiv 0000                  ___ftadd 0000  
                ___lbmod 0000                  ___lldiv 0000                  ___ftmul 0000  
                ___llmod 0000                  ___fttol 0000                SPI_send@i 0005  
             ??___awtoft 000A               ??___ftpack 0007     display_digit@digit_X 0001  
             ??___lltoft 000B                  __ptext1 0000                  __ptext2 0000  
                __ptext3 0000                  __ptext4 0000                  __ptext5 0000  
                __ptext6 0000                  __ptext7 0000                  __ptext8 0000  
                __ptext9 0000               ??___lwtoft 000A         ___aldiv@dividend 0006  
                main@dir 0049                  clrloop0 0001     end_of_initialization 000C  
         ??_ISR_function 0000                _LED_state 0001          ___lldiv@divisor 0002  
        ___lldiv@counter 0004         ___aldiv@quotient 0002             micros@result 002F  
         display_num@val 0005                _PORTAbits 0005                _PORTCbits 0007  
       ___lbmod@dividend 0005                _TRISCbits 0087    __end_of_display_digit 0005  
            ___lbmod@rem 0007         _prevTime_display 000A              ___ftmul@exp 000C  
          ??_display_num 000B           __end_of___ftge 002D           __end_of___lmul 0042  
         __end_of___wmul 0021             millis@result 0009           __end_of_micros 0057  
         __end_of_millis 0025      start_initialization 0000             _ButtonBounce 0000  
        ___llmod@divisor 0002          ___llmod@counter 0000                 ??___ftge 000B  
               ??___lmul 000A                 ??___wmul 0006              __pdataBANK0 0000  
               ??_micros 000B                 ??_millis 000B     __end_of_ISR_function 0020  
    __end_of_display_num 004A                ___latbits 0000            __pcstackBANK0 0000  
         _button_pressed 0000     ButtonBounce@Button_f 0000                 ?___aldiv 0002  
               ?___ftadd 0012                 ?___lbmod 0002                 ?___lldiv 0002  
               ?___ftmul 0003                 ?___llmod 0002                 ?___fttol 001E  
          _MAX7219_Setup 0000          ___aldiv@divisor 0002        interrupt_function 0000  
        ___aldiv@counter 0000           ___wmul@product 0006                 _IOCAbits 0096  
              clear_ram0 0000              _display_num 0000        ___wmul@multiplier 0002  
               _SPI_send 0000           ?_MAX7219_Setup 0000        ___lmul@multiplier 0002  
               ___awtoft 0000                 ___ftpack 0000                 ___lltoft 0000  
               ___lwtoft 0000                 _main$624 0045                 __ptext10 0000  
               __ptext11 0000                 __ptext20 0000                 __ptext12 0000  
               __ptext21 0000                 __ptext13 0000                 __ptext22 0000  
               __ptext14 0000                 __ptext15 0000                 __ptext16 0000  
               __ptext17 0000                 __ptext18 0000                 __ptext19 0000  
       display_digit@val 0003              _millisCount 0004             _ISR_function 0000  
               _speedRPM 0002                 main@argc 0039                 main@argv 003B  
             _INTCONbits 000B          ??_MAX7219_Setup 0007             _prevTime_LED 0000  
               intlevel1 0000*            _resolution_i 0000         ___lldiv@dividend 0006  
       ___lldiv@quotient 0000             ___aldiv@sign 0001            _display_digit 0000  
